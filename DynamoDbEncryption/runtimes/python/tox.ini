[tox]
isolated_build = True
envlist =
  py{311,312,313}-{dafnytests,local,integ}
  docs,
  isort-check,
  black-check

[testenv:base-command]
commands = poetry run pytest {env:COVERAGE_FLAG} -s -v -l {posargs}

[testenv]
skip_install = true
allowlist_externals = poetry
passenv = AWS_*
commands_pre =
    poetry lock
    poetry install --with test
commands =
    dafnytests: {[testenv:base-command]commands} test/internaldafny/
    unit: {[testenv:base-command]commands} test/unit/
    integ: {[testenv:base-command]commands} test/integ/

# Linters
; [testenv:blacken]
; basepython = python3
; deps = -rdev_requirements/linter-requirements.txt
; commands =
;     black --line-length 120 \
;         src/aws_database_encryption_sdk/ \
;         doc/conf.py \
;         test/ \
;         {posargs}

; [testenv:black-check]
; basepython = python3
; deps =
;     {[testenv:blacken]deps}
; commands =
;     {[testenv:blacken-src]commands} --diff

[testenv:isort]
basepython = python3
deps = -rdev_requirements/linter-requirements.txt
commands = isort -rc \
    src \
    test \
    doc \
    {posargs}

[testenv:isort-check]
basepython = python3
deps = {[testenv:isort]deps}
commands = {[testenv:isort]commands} -c

; [testenv:autoformat]
; basepython = python3
; deps =
;     {[testenv:blacken]deps}
;     {[testenv:isort]deps}
; commands =
;     {[testenv:blacken]commands}
;     {[testenv:isort]commands}
