// Code generated by smithy-go-codegen DO NOT EDIT.

package awscryptographydbencryptionsdkdynamodbsmithygenerated

import (
	"context"

	"github.com/aws/aws-database-encryption-sdk-dynamodb/AwsCryptographyDbEncryptionSdkDynamoDbTypes"
	"github.com/aws/aws-database-encryption-sdk-dynamodb/DynamoDbEncryption"
	"github.com/aws/aws-database-encryption-sdk-dynamodb/awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes"
)

type Client struct {
	DafnyClient AwsCryptographyDbEncryptionSdkDynamoDbTypes.IDynamoDbEncryptionClient
}

func NewClient(clientConfig awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.DynamoDbEncryptionConfig) (*Client, error) {
	var dafnyConfig = DynamoDbEncryptionConfig_ToDafny(clientConfig)
	var dafny_response = DynamoDbEncryption.Companion_Default___.DynamoDbEncryption(dafnyConfig)
	if dafny_response.Is_Failure() {
		panic("Client construction failed. This should never happen")
	}
	var dafnyClient = dafny_response.Extract().(AwsCryptographyDbEncryptionSdkDynamoDbTypes.IDynamoDbEncryptionClient)
	client := &Client{dafnyClient}
	return client, nil
}

func (client *Client) CreateDynamoDbEncryptionBranchKeyIdSupplier(ctx context.Context, params awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.CreateDynamoDbEncryptionBranchKeyIdSupplierInput) (*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.CreateDynamoDbEncryptionBranchKeyIdSupplierOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTypes.CreateDynamoDbEncryptionBranchKeyIdSupplierInput = CreateDynamoDbEncryptionBranchKeyIdSupplierInput_ToDafny(params)
	var dafny_response = client.DafnyClient.CreateDynamoDbEncryptionBranchKeyIdSupplier(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = CreateDynamoDbEncryptionBranchKeyIdSupplierOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTypes.CreateDynamoDbEncryptionBranchKeyIdSupplierOutput))
	return &native_response, nil

}

func (client *Client) GetEncryptedDataKeyDescription(ctx context.Context, params awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.GetEncryptedDataKeyDescriptionInput) (*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.GetEncryptedDataKeyDescriptionOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetEncryptedDataKeyDescriptionInput = GetEncryptedDataKeyDescriptionInput_ToDafny(params)
	var dafny_response = client.DafnyClient.GetEncryptedDataKeyDescription(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = GetEncryptedDataKeyDescriptionOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetEncryptedDataKeyDescriptionOutput))
	return &native_response, nil

}
