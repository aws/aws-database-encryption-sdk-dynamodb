// Code generated by smithy-go-codegen DO NOT EDIT.

package awscryptographydbencryptionsdkdynamodbtransformssmithygenerated

import (
	"context"

	"github.com/aws/aws-database-encryption-sdk-dynamodb/releases/go/dynamodb-esdk/AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes"
	"github.com/aws/aws-database-encryption-sdk-dynamodb/releases/go/dynamodb-esdk/DynamoDbEncryptionTransforms"
	"github.com/aws/aws-database-encryption-sdk-dynamodb/releases/go/dynamodb-esdk/awscryptographydbencryptionsdkdynamodbsmithygenerated"
	"github.com/aws/aws-database-encryption-sdk-dynamodb/releases/go/dynamodb-esdk/awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes"
	"github.com/aws/aws-database-encryption-sdk-dynamodb/releases/go/dynamodb-esdk/awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes"
)

type Client struct {
	DafnyClient AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.IDynamoDbEncryptionTransformsClient
}

func NewClient(clientConfig awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.DynamoDbTablesEncryptionConfig) (*Client, error) {
	var dafnyConfig = awscryptographydbencryptionsdkdynamodbsmithygenerated.DynamoDbTablesEncryptionConfig_ToDafny(clientConfig)
	var dafny_response = DynamoDbEncryptionTransforms.Companion_Default___.DynamoDbEncryptionTransforms(dafnyConfig)
	if dafny_response.Is_Failure() {
		panic("Client construction failed. This should never happen")
	}
	var dafnyClient = dafny_response.Extract().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.IDynamoDbEncryptionTransformsClient)
	client := &Client{dafnyClient}
	return client, nil
}

func (client *Client) PutItemInputTransform(ctx context.Context, params awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.PutItemInputTransformInput) (*awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.PutItemInputTransformOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.PutItemInputTransformInput = PutItemInputTransformInput_ToDafny(params)
	var dafny_response = client.DafnyClient.PutItemInputTransform(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = PutItemInputTransformOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.PutItemInputTransformOutput))
	return &native_response, nil

}

func (client *Client) PutItemOutputTransform(ctx context.Context, params awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.PutItemOutputTransformInput) (*awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.PutItemOutputTransformOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.PutItemOutputTransformInput = PutItemOutputTransformInput_ToDafny(params)
	var dafny_response = client.DafnyClient.PutItemOutputTransform(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = PutItemOutputTransformOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.PutItemOutputTransformOutput))
	return &native_response, nil

}

func (client *Client) GetItemInputTransform(ctx context.Context, params awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.GetItemInputTransformInput) (*awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.GetItemInputTransformOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.GetItemInputTransformInput = GetItemInputTransformInput_ToDafny(params)
	var dafny_response = client.DafnyClient.GetItemInputTransform(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = GetItemInputTransformOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.GetItemInputTransformOutput))
	return &native_response, nil

}

func (client *Client) GetItemOutputTransform(ctx context.Context, params awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.GetItemOutputTransformInput) (*awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.GetItemOutputTransformOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.GetItemOutputTransformInput = GetItemOutputTransformInput_ToDafny(params)
	var dafny_response = client.DafnyClient.GetItemOutputTransform(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = GetItemOutputTransformOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.GetItemOutputTransformOutput))
	return &native_response, nil

}

func (client *Client) BatchWriteItemInputTransform(ctx context.Context, params awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.BatchWriteItemInputTransformInput) (*awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.BatchWriteItemInputTransformOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.BatchWriteItemInputTransformInput = BatchWriteItemInputTransformInput_ToDafny(params)
	var dafny_response = client.DafnyClient.BatchWriteItemInputTransform(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = BatchWriteItemInputTransformOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.BatchWriteItemInputTransformOutput))
	return &native_response, nil

}

func (client *Client) BatchWriteItemOutputTransform(ctx context.Context, params awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.BatchWriteItemOutputTransformInput) (*awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.BatchWriteItemOutputTransformOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.BatchWriteItemOutputTransformInput = BatchWriteItemOutputTransformInput_ToDafny(params)
	var dafny_response = client.DafnyClient.BatchWriteItemOutputTransform(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = BatchWriteItemOutputTransformOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.BatchWriteItemOutputTransformOutput))
	return &native_response, nil

}

func (client *Client) BatchGetItemInputTransform(ctx context.Context, params awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.BatchGetItemInputTransformInput) (*awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.BatchGetItemInputTransformOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.BatchGetItemInputTransformInput = BatchGetItemInputTransformInput_ToDafny(params)
	var dafny_response = client.DafnyClient.BatchGetItemInputTransform(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = BatchGetItemInputTransformOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.BatchGetItemInputTransformOutput))
	return &native_response, nil

}

func (client *Client) BatchGetItemOutputTransform(ctx context.Context, params awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.BatchGetItemOutputTransformInput) (*awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.BatchGetItemOutputTransformOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.BatchGetItemOutputTransformInput = BatchGetItemOutputTransformInput_ToDafny(params)
	var dafny_response = client.DafnyClient.BatchGetItemOutputTransform(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = BatchGetItemOutputTransformOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.BatchGetItemOutputTransformOutput))
	return &native_response, nil

}

func (client *Client) ScanInputTransform(ctx context.Context, params awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.ScanInputTransformInput) (*awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.ScanInputTransformOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.ScanInputTransformInput = ScanInputTransformInput_ToDafny(params)
	var dafny_response = client.DafnyClient.ScanInputTransform(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = ScanInputTransformOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.ScanInputTransformOutput))
	return &native_response, nil

}

func (client *Client) ScanOutputTransform(ctx context.Context, params awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.ScanOutputTransformInput) (*awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.ScanOutputTransformOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.ScanOutputTransformInput = ScanOutputTransformInput_ToDafny(params)
	var dafny_response = client.DafnyClient.ScanOutputTransform(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = ScanOutputTransformOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.ScanOutputTransformOutput))
	return &native_response, nil

}

func (client *Client) QueryInputTransform(ctx context.Context, params awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.QueryInputTransformInput) (*awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.QueryInputTransformOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.QueryInputTransformInput = QueryInputTransformInput_ToDafny(params)
	var dafny_response = client.DafnyClient.QueryInputTransform(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = QueryInputTransformOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.QueryInputTransformOutput))
	return &native_response, nil

}

func (client *Client) QueryOutputTransform(ctx context.Context, params awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.QueryOutputTransformInput) (*awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.QueryOutputTransformOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.QueryOutputTransformInput = QueryOutputTransformInput_ToDafny(params)
	var dafny_response = client.DafnyClient.QueryOutputTransform(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = QueryOutputTransformOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.QueryOutputTransformOutput))
	return &native_response, nil

}

func (client *Client) TransactWriteItemsInputTransform(ctx context.Context, params awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.TransactWriteItemsInputTransformInput) (*awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.TransactWriteItemsInputTransformOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.TransactWriteItemsInputTransformInput = TransactWriteItemsInputTransformInput_ToDafny(params)
	var dafny_response = client.DafnyClient.TransactWriteItemsInputTransform(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = TransactWriteItemsInputTransformOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.TransactWriteItemsInputTransformOutput))
	return &native_response, nil

}

func (client *Client) TransactWriteItemsOutputTransform(ctx context.Context, params awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.TransactWriteItemsOutputTransformInput) (*awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.TransactWriteItemsOutputTransformOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.TransactWriteItemsOutputTransformInput = TransactWriteItemsOutputTransformInput_ToDafny(params)
	var dafny_response = client.DafnyClient.TransactWriteItemsOutputTransform(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = TransactWriteItemsOutputTransformOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.TransactWriteItemsOutputTransformOutput))
	return &native_response, nil

}

func (client *Client) UpdateItemInputTransform(ctx context.Context, params awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.UpdateItemInputTransformInput) (*awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.UpdateItemInputTransformOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.UpdateItemInputTransformInput = UpdateItemInputTransformInput_ToDafny(params)
	var dafny_response = client.DafnyClient.UpdateItemInputTransform(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = UpdateItemInputTransformOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.UpdateItemInputTransformOutput))
	return &native_response, nil

}

func (client *Client) UpdateItemOutputTransform(ctx context.Context, params awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.UpdateItemOutputTransformInput) (*awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.UpdateItemOutputTransformOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.UpdateItemOutputTransformInput = UpdateItemOutputTransformInput_ToDafny(params)
	var dafny_response = client.DafnyClient.UpdateItemOutputTransform(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = UpdateItemOutputTransformOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.UpdateItemOutputTransformOutput))
	return &native_response, nil

}

func (client *Client) DeleteItemInputTransform(ctx context.Context, params awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.DeleteItemInputTransformInput) (*awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.DeleteItemInputTransformOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.DeleteItemInputTransformInput = DeleteItemInputTransformInput_ToDafny(params)
	var dafny_response = client.DafnyClient.DeleteItemInputTransform(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = DeleteItemInputTransformOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.DeleteItemInputTransformOutput))
	return &native_response, nil

}

func (client *Client) DeleteItemOutputTransform(ctx context.Context, params awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.DeleteItemOutputTransformInput) (*awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.DeleteItemOutputTransformOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.DeleteItemOutputTransformInput = DeleteItemOutputTransformInput_ToDafny(params)
	var dafny_response = client.DafnyClient.DeleteItemOutputTransform(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = DeleteItemOutputTransformOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.DeleteItemOutputTransformOutput))
	return &native_response, nil

}

func (client *Client) TransactGetItemsInputTransform(ctx context.Context, params awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.TransactGetItemsInputTransformInput) (*awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.TransactGetItemsInputTransformOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.TransactGetItemsInputTransformInput = TransactGetItemsInputTransformInput_ToDafny(params)
	var dafny_response = client.DafnyClient.TransactGetItemsInputTransform(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = TransactGetItemsInputTransformOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.TransactGetItemsInputTransformOutput))
	return &native_response, nil

}

func (client *Client) TransactGetItemsOutputTransform(ctx context.Context, params awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.TransactGetItemsOutputTransformInput) (*awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.TransactGetItemsOutputTransformOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.TransactGetItemsOutputTransformInput = TransactGetItemsOutputTransformInput_ToDafny(params)
	var dafny_response = client.DafnyClient.TransactGetItemsOutputTransform(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = TransactGetItemsOutputTransformOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.TransactGetItemsOutputTransformOutput))
	return &native_response, nil

}

func (client *Client) ExecuteStatementInputTransform(ctx context.Context, params awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.ExecuteStatementInputTransformInput) (*awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.ExecuteStatementInputTransformOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.ExecuteStatementInputTransformInput = ExecuteStatementInputTransformInput_ToDafny(params)
	var dafny_response = client.DafnyClient.ExecuteStatementInputTransform(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = ExecuteStatementInputTransformOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.ExecuteStatementInputTransformOutput))
	return &native_response, nil

}

func (client *Client) ExecuteStatementOutputTransform(ctx context.Context, params awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.ExecuteStatementOutputTransformInput) (*awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.ExecuteStatementOutputTransformOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.ExecuteStatementOutputTransformInput = ExecuteStatementOutputTransformInput_ToDafny(params)
	var dafny_response = client.DafnyClient.ExecuteStatementOutputTransform(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = ExecuteStatementOutputTransformOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.ExecuteStatementOutputTransformOutput))
	return &native_response, nil

}

func (client *Client) BatchExecuteStatementInputTransform(ctx context.Context, params awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.BatchExecuteStatementInputTransformInput) (*awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.BatchExecuteStatementInputTransformOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.BatchExecuteStatementInputTransformInput = BatchExecuteStatementInputTransformInput_ToDafny(params)
	var dafny_response = client.DafnyClient.BatchExecuteStatementInputTransform(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = BatchExecuteStatementInputTransformOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.BatchExecuteStatementInputTransformOutput))
	return &native_response, nil

}

func (client *Client) BatchExecuteStatementOutputTransform(ctx context.Context, params awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.BatchExecuteStatementOutputTransformInput) (*awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.BatchExecuteStatementOutputTransformOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.BatchExecuteStatementOutputTransformInput = BatchExecuteStatementOutputTransformInput_ToDafny(params)
	var dafny_response = client.DafnyClient.BatchExecuteStatementOutputTransform(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = BatchExecuteStatementOutputTransformOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.BatchExecuteStatementOutputTransformOutput))
	return &native_response, nil

}

func (client *Client) ExecuteTransactionInputTransform(ctx context.Context, params awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.ExecuteTransactionInputTransformInput) (*awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.ExecuteTransactionInputTransformOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.ExecuteTransactionInputTransformInput = ExecuteTransactionInputTransformInput_ToDafny(params)
	var dafny_response = client.DafnyClient.ExecuteTransactionInputTransform(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = ExecuteTransactionInputTransformOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.ExecuteTransactionInputTransformOutput))
	return &native_response, nil

}

func (client *Client) ExecuteTransactionOutputTransform(ctx context.Context, params awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.ExecuteTransactionOutputTransformInput) (*awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.ExecuteTransactionOutputTransformOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.ExecuteTransactionOutputTransformInput = ExecuteTransactionOutputTransformInput_ToDafny(params)
	var dafny_response = client.DafnyClient.ExecuteTransactionOutputTransform(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = ExecuteTransactionOutputTransformOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.ExecuteTransactionOutputTransformOutput))
	return &native_response, nil

}

func (client *Client) ResolveAttributes(ctx context.Context, params awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.ResolveAttributesInput) (*awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.ResolveAttributesOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.ResolveAttributesInput = ResolveAttributesInput_ToDafny(params)
	var dafny_response = client.DafnyClient.ResolveAttributes(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = ResolveAttributesOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.ResolveAttributesOutput))
	return &native_response, nil

}

func (client *Client) GetNumberOfQueries(ctx context.Context, params awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.GetNumberOfQueriesInput) (*awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.GetNumberOfQueriesOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographydbencryptionsdkdynamodbtransformssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.GetNumberOfQueriesInput = GetNumberOfQueriesInput_ToDafny(params)
	var dafny_response = client.DafnyClient.GetNumberOfQueries(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = GetNumberOfQueriesOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyDbEncryptionSdkDynamoDbTransformsTypes.GetNumberOfQueriesOutput))
	return &native_response, nil

}
