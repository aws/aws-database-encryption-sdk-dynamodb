[build-system]
requires = ["poetry-core<2.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "esdk-benchmark-python"
version = "0.1.0"
description = "Performance tests DB-ESDK Python"
authors = ["AWS Crypto Tools <aws-crypto-tools@amazon.com>"]
readme = "README.md"
packages = [{include = "esdk_benchmark", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11.0"  # Python 3.11+ required for performance features
aws-dbesdk-dynamodb = { path = "../../../DynamoDbEncryption/runtimes/python", develop = false, extras = ["legacy-ddbec"]}  # DB-ESDK library
boto3 = ">=1.26.0"  # AWS SDK for Python
PyYAML = "^6.0"  # YAML configuration parsing
pydantic = "^2.0.0"  # Data validation
tqdm = "^4.66.0"  # Progress bars
psutil = "^5.9.0"  # System information
numpy = "^1.24.0"  # Numerical operations

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"  # Testing framework
pytest-cov = "^4.1.0"  # Coverage reporting
black = "^23.0.0"  # Code formatting
flake8 = "^6.0.0"  # Linting
mypy = "^1.5.0"  # Type checking
memory-profiler = "^0.60.0"  # Memory profiling
tox = "^4.0.0"  # Testing automation

[tool.poetry.scripts]
esdk-benchmark = "esdk_benchmark.program:main"  # Main benchmark entry point

[tool.black]
line-length = 88  # Standard line length
target-version = ['py311']  # Python 3.11 target
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.11"  # Python version for type checking
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "aws_cryptographic_material_providers.*",  # AWS crypto libraries
    "aws_dbesdk_dynamodb.*",  # DB-ESDK library
    "tqdm",  # Progress bar library
    "psutil",  # System utilities
]
ignore_missing_imports = true  # Ignore missing type stubs

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"  # Test options
testpaths = ["tests"]  # Test directory
pythonpath = ["src"]  # Source path
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src"]  # Source directory for coverage
omit = [
    "*/tests/*",  # Exclude test files
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",  # Explicit coverage exclusion
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 88  # Match Black formatting
extend-ignore = ["E203", "W503"]  # Ignore Black-incompatible rules
max-complexity = 10  # Maximum cyclomatic complexity
per-file-ignores = [
    "__init__.py:F401",  # Allow unused imports in __init__.py
    "tests/*:S101,D103",  # Allow assert and missing docstrings in tests
]
