// Code generated by smithy-go-codegen DO NOT EDIT.

package comamazonawskmssmithygenerated

import (
	"errors"
	"time"

	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/kms/ComAmazonawsKmsTypes"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/smithy-dafny-standard-library/UTF8"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/smithy-dafny-standard-library/Wrappers"
	"github.com/aws/aws-sdk-go-v2/service/kms"
	"github.com/aws/aws-sdk-go-v2/service/kms/types"
	"github.com/dafny-lang/DafnyRuntimeGo/v4/dafny"
)

func CancelKeyDeletionInput_ToDafny(nativeInput kms.CancelKeyDeletionInput) ComAmazonawsKmsTypes.CancelKeyDeletionRequest {

	return func() ComAmazonawsKmsTypes.CancelKeyDeletionRequest {

		return ComAmazonawsKmsTypes.Companion_CancelKeyDeletionRequest_.Create_CancelKeyDeletionRequest_(Com_amazonaws_kms_CancelKeyDeletionRequest_KeyId_ToDafny(nativeInput.KeyId))
	}()

}

func CancelKeyDeletionOutput_ToDafny(nativeOutput kms.CancelKeyDeletionOutput) ComAmazonawsKmsTypes.CancelKeyDeletionResponse {

	return func() ComAmazonawsKmsTypes.CancelKeyDeletionResponse {

		return ComAmazonawsKmsTypes.Companion_CancelKeyDeletionResponse_.Create_CancelKeyDeletionResponse_(Com_amazonaws_kms_CancelKeyDeletionResponse_KeyId_ToDafny(nativeOutput.KeyId))
	}()

}

func ConnectCustomKeyStoreInput_ToDafny(nativeInput kms.ConnectCustomKeyStoreInput) ComAmazonawsKmsTypes.ConnectCustomKeyStoreRequest {

	return func() ComAmazonawsKmsTypes.ConnectCustomKeyStoreRequest {

		return ComAmazonawsKmsTypes.Companion_ConnectCustomKeyStoreRequest_.Create_ConnectCustomKeyStoreRequest_(Com_amazonaws_kms_ConnectCustomKeyStoreRequest_CustomKeyStoreId_ToDafny(nativeInput.CustomKeyStoreId))
	}()

}

func ConnectCustomKeyStoreOutput_ToDafny(nativeOutput kms.ConnectCustomKeyStoreOutput) ComAmazonawsKmsTypes.ConnectCustomKeyStoreResponse {

	return func() ComAmazonawsKmsTypes.ConnectCustomKeyStoreResponse {

		return ComAmazonawsKmsTypes.Companion_ConnectCustomKeyStoreResponse_.Create_ConnectCustomKeyStoreResponse_()
	}()

}

func CreateAliasInput_ToDafny(nativeInput kms.CreateAliasInput) ComAmazonawsKmsTypes.CreateAliasRequest {

	return func() ComAmazonawsKmsTypes.CreateAliasRequest {

		return ComAmazonawsKmsTypes.Companion_CreateAliasRequest_.Create_CreateAliasRequest_(Com_amazonaws_kms_CreateAliasRequest_AliasName_ToDafny(nativeInput.AliasName), Com_amazonaws_kms_CreateAliasRequest_TargetKeyId_ToDafny(nativeInput.TargetKeyId))
	}()

}

func CreateCustomKeyStoreInput_ToDafny(nativeInput kms.CreateCustomKeyStoreInput) ComAmazonawsKmsTypes.CreateCustomKeyStoreRequest {

	return func() ComAmazonawsKmsTypes.CreateCustomKeyStoreRequest {

		return ComAmazonawsKmsTypes.Companion_CreateCustomKeyStoreRequest_.Create_CreateCustomKeyStoreRequest_(Com_amazonaws_kms_CreateCustomKeyStoreRequest_CustomKeyStoreName_ToDafny(nativeInput.CustomKeyStoreName), Com_amazonaws_kms_CreateCustomKeyStoreRequest_CloudHsmClusterId_ToDafny(nativeInput.CloudHsmClusterId), Com_amazonaws_kms_CreateCustomKeyStoreRequest_TrustAnchorCertificate_ToDafny(nativeInput.TrustAnchorCertificate), Com_amazonaws_kms_CreateCustomKeyStoreRequest_KeyStorePassword_ToDafny(nativeInput.KeyStorePassword), Com_amazonaws_kms_CreateCustomKeyStoreRequest_CustomKeyStoreType_ToDafny(nativeInput.CustomKeyStoreType), Com_amazonaws_kms_CreateCustomKeyStoreRequest_XksProxyUriEndpoint_ToDafny(nativeInput.XksProxyUriEndpoint), Com_amazonaws_kms_CreateCustomKeyStoreRequest_XksProxyUriPath_ToDafny(nativeInput.XksProxyUriPath), Com_amazonaws_kms_CreateCustomKeyStoreRequest_XksProxyVpcEndpointServiceName_ToDafny(nativeInput.XksProxyVpcEndpointServiceName), Com_amazonaws_kms_CreateCustomKeyStoreRequest_XksProxyAuthenticationCredential_ToDafny(nativeInput.XksProxyAuthenticationCredential), Com_amazonaws_kms_CreateCustomKeyStoreRequest_XksProxyConnectivity_ToDafny(nativeInput.XksProxyConnectivity))
	}()

}

func CreateCustomKeyStoreOutput_ToDafny(nativeOutput kms.CreateCustomKeyStoreOutput) ComAmazonawsKmsTypes.CreateCustomKeyStoreResponse {

	return func() ComAmazonawsKmsTypes.CreateCustomKeyStoreResponse {

		return ComAmazonawsKmsTypes.Companion_CreateCustomKeyStoreResponse_.Create_CreateCustomKeyStoreResponse_(Com_amazonaws_kms_CreateCustomKeyStoreResponse_CustomKeyStoreId_ToDafny(nativeOutput.CustomKeyStoreId))
	}()

}

func CreateGrantInput_ToDafny(nativeInput kms.CreateGrantInput) ComAmazonawsKmsTypes.CreateGrantRequest {

	return func() ComAmazonawsKmsTypes.CreateGrantRequest {

		return ComAmazonawsKmsTypes.Companion_CreateGrantRequest_.Create_CreateGrantRequest_(Com_amazonaws_kms_CreateGrantRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_CreateGrantRequest_GranteePrincipal_ToDafny(nativeInput.GranteePrincipal), Com_amazonaws_kms_CreateGrantRequest_RetiringPrincipal_ToDafny(nativeInput.RetiringPrincipal), Com_amazonaws_kms_CreateGrantRequest_Operations_ToDafny(nativeInput.Operations), Com_amazonaws_kms_CreateGrantRequest_Constraints_ToDafny(nativeInput.Constraints), Com_amazonaws_kms_CreateGrantRequest_GrantTokens_ToDafny(nativeInput.GrantTokens), Com_amazonaws_kms_CreateGrantRequest_Name_ToDafny(nativeInput.Name), Com_amazonaws_kms_CreateGrantRequest_DryRun_ToDafny(nativeInput.DryRun))
	}()

}

func CreateGrantOutput_ToDafny(nativeOutput kms.CreateGrantOutput) ComAmazonawsKmsTypes.CreateGrantResponse {

	return func() ComAmazonawsKmsTypes.CreateGrantResponse {

		return ComAmazonawsKmsTypes.Companion_CreateGrantResponse_.Create_CreateGrantResponse_(Com_amazonaws_kms_CreateGrantResponse_GrantToken_ToDafny(nativeOutput.GrantToken), Com_amazonaws_kms_CreateGrantResponse_GrantId_ToDafny(nativeOutput.GrantId))
	}()

}

func CreateKeyInput_ToDafny(nativeInput kms.CreateKeyInput) ComAmazonawsKmsTypes.CreateKeyRequest {

	return func() ComAmazonawsKmsTypes.CreateKeyRequest {

		return ComAmazonawsKmsTypes.Companion_CreateKeyRequest_.Create_CreateKeyRequest_(Com_amazonaws_kms_CreateKeyRequest_Policy_ToDafny(nativeInput.Policy), Com_amazonaws_kms_CreateKeyRequest_Description_ToDafny(nativeInput.Description), Com_amazonaws_kms_CreateKeyRequest_KeyUsage_ToDafny(nativeInput.KeyUsage), Com_amazonaws_kms_CreateKeyRequest_CustomerMasterKeySpec_ToDafny(nativeInput.CustomerMasterKeySpec), Com_amazonaws_kms_CreateKeyRequest_KeySpec_ToDafny(nativeInput.KeySpec), Com_amazonaws_kms_CreateKeyRequest_Origin_ToDafny(nativeInput.Origin), Com_amazonaws_kms_CreateKeyRequest_CustomKeyStoreId_ToDafny(nativeInput.CustomKeyStoreId), Com_amazonaws_kms_CreateKeyRequest_BypassPolicyLockoutSafetyCheck_ToDafny(nativeInput.BypassPolicyLockoutSafetyCheck), Com_amazonaws_kms_CreateKeyRequest_Tags_ToDafny(nativeInput.Tags), Com_amazonaws_kms_CreateKeyRequest_MultiRegion_ToDafny(nativeInput.MultiRegion), Com_amazonaws_kms_CreateKeyRequest_XksKeyId_ToDafny(nativeInput.XksKeyId))
	}()

}

func CreateKeyOutput_ToDafny(nativeOutput kms.CreateKeyOutput) ComAmazonawsKmsTypes.CreateKeyResponse {

	return func() ComAmazonawsKmsTypes.CreateKeyResponse {

		return ComAmazonawsKmsTypes.Companion_CreateKeyResponse_.Create_CreateKeyResponse_(Com_amazonaws_kms_CreateKeyResponse_KeyMetadata_ToDafny(nativeOutput.KeyMetadata))
	}()

}

func DecryptInput_ToDafny(nativeInput kms.DecryptInput) ComAmazonawsKmsTypes.DecryptRequest {

	return func() ComAmazonawsKmsTypes.DecryptRequest {

		return ComAmazonawsKmsTypes.Companion_DecryptRequest_.Create_DecryptRequest_(Com_amazonaws_kms_DecryptRequest_CiphertextBlob_ToDafny(nativeInput.CiphertextBlob), Com_amazonaws_kms_DecryptRequest_EncryptionContext_ToDafny(nativeInput.EncryptionContext), Com_amazonaws_kms_DecryptRequest_GrantTokens_ToDafny(nativeInput.GrantTokens), Com_amazonaws_kms_DecryptRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_DecryptRequest_EncryptionAlgorithm_ToDafny(nativeInput.EncryptionAlgorithm), Com_amazonaws_kms_DecryptRequest_Recipient_ToDafny(nativeInput.Recipient), Com_amazonaws_kms_DecryptRequest_DryRun_ToDafny(nativeInput.DryRun))
	}()

}

func DecryptOutput_ToDafny(nativeOutput kms.DecryptOutput) ComAmazonawsKmsTypes.DecryptResponse {

	return func() ComAmazonawsKmsTypes.DecryptResponse {

		return ComAmazonawsKmsTypes.Companion_DecryptResponse_.Create_DecryptResponse_(Com_amazonaws_kms_DecryptResponse_KeyId_ToDafny(nativeOutput.KeyId), Com_amazonaws_kms_DecryptResponse_Plaintext_ToDafny(nativeOutput.Plaintext), Com_amazonaws_kms_DecryptResponse_EncryptionAlgorithm_ToDafny(nativeOutput.EncryptionAlgorithm), Com_amazonaws_kms_DecryptResponse_CiphertextForRecipient_ToDafny(nativeOutput.CiphertextForRecipient))
	}()

}

func DeleteAliasInput_ToDafny(nativeInput kms.DeleteAliasInput) ComAmazonawsKmsTypes.DeleteAliasRequest {

	return func() ComAmazonawsKmsTypes.DeleteAliasRequest {

		return ComAmazonawsKmsTypes.Companion_DeleteAliasRequest_.Create_DeleteAliasRequest_(Com_amazonaws_kms_DeleteAliasRequest_AliasName_ToDafny(nativeInput.AliasName))
	}()

}

func DeleteCustomKeyStoreInput_ToDafny(nativeInput kms.DeleteCustomKeyStoreInput) ComAmazonawsKmsTypes.DeleteCustomKeyStoreRequest {

	return func() ComAmazonawsKmsTypes.DeleteCustomKeyStoreRequest {

		return ComAmazonawsKmsTypes.Companion_DeleteCustomKeyStoreRequest_.Create_DeleteCustomKeyStoreRequest_(Com_amazonaws_kms_DeleteCustomKeyStoreRequest_CustomKeyStoreId_ToDafny(nativeInput.CustomKeyStoreId))
	}()

}

func DeleteCustomKeyStoreOutput_ToDafny(nativeOutput kms.DeleteCustomKeyStoreOutput) ComAmazonawsKmsTypes.DeleteCustomKeyStoreResponse {

	return func() ComAmazonawsKmsTypes.DeleteCustomKeyStoreResponse {

		return ComAmazonawsKmsTypes.Companion_DeleteCustomKeyStoreResponse_.Create_DeleteCustomKeyStoreResponse_()
	}()

}

func DeleteImportedKeyMaterialInput_ToDafny(nativeInput kms.DeleteImportedKeyMaterialInput) ComAmazonawsKmsTypes.DeleteImportedKeyMaterialRequest {

	return func() ComAmazonawsKmsTypes.DeleteImportedKeyMaterialRequest {

		return ComAmazonawsKmsTypes.Companion_DeleteImportedKeyMaterialRequest_.Create_DeleteImportedKeyMaterialRequest_(Com_amazonaws_kms_DeleteImportedKeyMaterialRequest_KeyId_ToDafny(nativeInput.KeyId))
	}()

}

func DeriveSharedSecretInput_ToDafny(nativeInput kms.DeriveSharedSecretInput) ComAmazonawsKmsTypes.DeriveSharedSecretRequest {

	return func() ComAmazonawsKmsTypes.DeriveSharedSecretRequest {

		return ComAmazonawsKmsTypes.Companion_DeriveSharedSecretRequest_.Create_DeriveSharedSecretRequest_(Com_amazonaws_kms_DeriveSharedSecretRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_DeriveSharedSecretRequest_KeyAgreementAlgorithm_ToDafny(nativeInput.KeyAgreementAlgorithm), Com_amazonaws_kms_DeriveSharedSecretRequest_PublicKey_ToDafny(nativeInput.PublicKey), Com_amazonaws_kms_DeriveSharedSecretRequest_GrantTokens_ToDafny(nativeInput.GrantTokens), Com_amazonaws_kms_DeriveSharedSecretRequest_DryRun_ToDafny(nativeInput.DryRun), Com_amazonaws_kms_DeriveSharedSecretRequest_Recipient_ToDafny(nativeInput.Recipient))
	}()

}

func DeriveSharedSecretOutput_ToDafny(nativeOutput kms.DeriveSharedSecretOutput) ComAmazonawsKmsTypes.DeriveSharedSecretResponse {

	return func() ComAmazonawsKmsTypes.DeriveSharedSecretResponse {

		return ComAmazonawsKmsTypes.Companion_DeriveSharedSecretResponse_.Create_DeriveSharedSecretResponse_(Com_amazonaws_kms_DeriveSharedSecretResponse_KeyId_ToDafny(nativeOutput.KeyId), Com_amazonaws_kms_DeriveSharedSecretResponse_SharedSecret_ToDafny(nativeOutput.SharedSecret), Com_amazonaws_kms_DeriveSharedSecretResponse_CiphertextForRecipient_ToDafny(nativeOutput.CiphertextForRecipient), Com_amazonaws_kms_DeriveSharedSecretResponse_KeyAgreementAlgorithm_ToDafny(nativeOutput.KeyAgreementAlgorithm), Com_amazonaws_kms_DeriveSharedSecretResponse_KeyOrigin_ToDafny(nativeOutput.KeyOrigin))
	}()

}

func DescribeCustomKeyStoresInput_ToDafny(nativeInput kms.DescribeCustomKeyStoresInput) ComAmazonawsKmsTypes.DescribeCustomKeyStoresRequest {

	return func() ComAmazonawsKmsTypes.DescribeCustomKeyStoresRequest {

		return ComAmazonawsKmsTypes.Companion_DescribeCustomKeyStoresRequest_.Create_DescribeCustomKeyStoresRequest_(Com_amazonaws_kms_DescribeCustomKeyStoresRequest_CustomKeyStoreId_ToDafny(nativeInput.CustomKeyStoreId), Com_amazonaws_kms_DescribeCustomKeyStoresRequest_CustomKeyStoreName_ToDafny(nativeInput.CustomKeyStoreName), Com_amazonaws_kms_DescribeCustomKeyStoresRequest_Limit_ToDafny(nativeInput.Limit), Com_amazonaws_kms_DescribeCustomKeyStoresRequest_Marker_ToDafny(nativeInput.Marker))
	}()

}

func DescribeCustomKeyStoresOutput_ToDafny(nativeOutput kms.DescribeCustomKeyStoresOutput) ComAmazonawsKmsTypes.DescribeCustomKeyStoresResponse {

	return func() ComAmazonawsKmsTypes.DescribeCustomKeyStoresResponse {

		return ComAmazonawsKmsTypes.Companion_DescribeCustomKeyStoresResponse_.Create_DescribeCustomKeyStoresResponse_(Com_amazonaws_kms_DescribeCustomKeyStoresResponse_CustomKeyStores_ToDafny(nativeOutput.CustomKeyStores), Com_amazonaws_kms_DescribeCustomKeyStoresResponse_NextMarker_ToDafny(nativeOutput.NextMarker), Com_amazonaws_kms_DescribeCustomKeyStoresResponse_Truncated_ToDafny(nativeOutput.Truncated))
	}()

}

func DescribeKeyInput_ToDafny(nativeInput kms.DescribeKeyInput) ComAmazonawsKmsTypes.DescribeKeyRequest {

	return func() ComAmazonawsKmsTypes.DescribeKeyRequest {

		return ComAmazonawsKmsTypes.Companion_DescribeKeyRequest_.Create_DescribeKeyRequest_(Com_amazonaws_kms_DescribeKeyRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_DescribeKeyRequest_GrantTokens_ToDafny(nativeInput.GrantTokens))
	}()

}

func DescribeKeyOutput_ToDafny(nativeOutput kms.DescribeKeyOutput) ComAmazonawsKmsTypes.DescribeKeyResponse {

	return func() ComAmazonawsKmsTypes.DescribeKeyResponse {

		return ComAmazonawsKmsTypes.Companion_DescribeKeyResponse_.Create_DescribeKeyResponse_(Com_amazonaws_kms_DescribeKeyResponse_KeyMetadata_ToDafny(nativeOutput.KeyMetadata))
	}()

}

func DisableKeyInput_ToDafny(nativeInput kms.DisableKeyInput) ComAmazonawsKmsTypes.DisableKeyRequest {

	return func() ComAmazonawsKmsTypes.DisableKeyRequest {

		return ComAmazonawsKmsTypes.Companion_DisableKeyRequest_.Create_DisableKeyRequest_(Com_amazonaws_kms_DisableKeyRequest_KeyId_ToDafny(nativeInput.KeyId))
	}()

}

func DisableKeyRotationInput_ToDafny(nativeInput kms.DisableKeyRotationInput) ComAmazonawsKmsTypes.DisableKeyRotationRequest {

	return func() ComAmazonawsKmsTypes.DisableKeyRotationRequest {

		return ComAmazonawsKmsTypes.Companion_DisableKeyRotationRequest_.Create_DisableKeyRotationRequest_(Com_amazonaws_kms_DisableKeyRotationRequest_KeyId_ToDafny(nativeInput.KeyId))
	}()

}

func DisconnectCustomKeyStoreInput_ToDafny(nativeInput kms.DisconnectCustomKeyStoreInput) ComAmazonawsKmsTypes.DisconnectCustomKeyStoreRequest {

	return func() ComAmazonawsKmsTypes.DisconnectCustomKeyStoreRequest {

		return ComAmazonawsKmsTypes.Companion_DisconnectCustomKeyStoreRequest_.Create_DisconnectCustomKeyStoreRequest_(Com_amazonaws_kms_DisconnectCustomKeyStoreRequest_CustomKeyStoreId_ToDafny(nativeInput.CustomKeyStoreId))
	}()

}

func DisconnectCustomKeyStoreOutput_ToDafny(nativeOutput kms.DisconnectCustomKeyStoreOutput) ComAmazonawsKmsTypes.DisconnectCustomKeyStoreResponse {

	return func() ComAmazonawsKmsTypes.DisconnectCustomKeyStoreResponse {

		return ComAmazonawsKmsTypes.Companion_DisconnectCustomKeyStoreResponse_.Create_DisconnectCustomKeyStoreResponse_()
	}()

}

func EnableKeyInput_ToDafny(nativeInput kms.EnableKeyInput) ComAmazonawsKmsTypes.EnableKeyRequest {

	return func() ComAmazonawsKmsTypes.EnableKeyRequest {

		return ComAmazonawsKmsTypes.Companion_EnableKeyRequest_.Create_EnableKeyRequest_(Com_amazonaws_kms_EnableKeyRequest_KeyId_ToDafny(nativeInput.KeyId))
	}()

}

func EnableKeyRotationInput_ToDafny(nativeInput kms.EnableKeyRotationInput) ComAmazonawsKmsTypes.EnableKeyRotationRequest {

	return func() ComAmazonawsKmsTypes.EnableKeyRotationRequest {

		return ComAmazonawsKmsTypes.Companion_EnableKeyRotationRequest_.Create_EnableKeyRotationRequest_(Com_amazonaws_kms_EnableKeyRotationRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_EnableKeyRotationRequest_RotationPeriodInDays_ToDafny(nativeInput.RotationPeriodInDays))
	}()

}

func EncryptInput_ToDafny(nativeInput kms.EncryptInput) ComAmazonawsKmsTypes.EncryptRequest {

	return func() ComAmazonawsKmsTypes.EncryptRequest {

		return ComAmazonawsKmsTypes.Companion_EncryptRequest_.Create_EncryptRequest_(Com_amazonaws_kms_EncryptRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_EncryptRequest_Plaintext_ToDafny(nativeInput.Plaintext), Com_amazonaws_kms_EncryptRequest_EncryptionContext_ToDafny(nativeInput.EncryptionContext), Com_amazonaws_kms_EncryptRequest_GrantTokens_ToDafny(nativeInput.GrantTokens), Com_amazonaws_kms_EncryptRequest_EncryptionAlgorithm_ToDafny(nativeInput.EncryptionAlgorithm), Com_amazonaws_kms_EncryptRequest_DryRun_ToDafny(nativeInput.DryRun))
	}()

}

func EncryptOutput_ToDafny(nativeOutput kms.EncryptOutput) ComAmazonawsKmsTypes.EncryptResponse {

	return func() ComAmazonawsKmsTypes.EncryptResponse {

		return ComAmazonawsKmsTypes.Companion_EncryptResponse_.Create_EncryptResponse_(Com_amazonaws_kms_EncryptResponse_CiphertextBlob_ToDafny(nativeOutput.CiphertextBlob), Com_amazonaws_kms_EncryptResponse_KeyId_ToDafny(nativeOutput.KeyId), Com_amazonaws_kms_EncryptResponse_EncryptionAlgorithm_ToDafny(nativeOutput.EncryptionAlgorithm))
	}()

}

func GenerateDataKeyInput_ToDafny(nativeInput kms.GenerateDataKeyInput) ComAmazonawsKmsTypes.GenerateDataKeyRequest {

	return func() ComAmazonawsKmsTypes.GenerateDataKeyRequest {

		return ComAmazonawsKmsTypes.Companion_GenerateDataKeyRequest_.Create_GenerateDataKeyRequest_(Com_amazonaws_kms_GenerateDataKeyRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_GenerateDataKeyRequest_EncryptionContext_ToDafny(nativeInput.EncryptionContext), Com_amazonaws_kms_GenerateDataKeyRequest_NumberOfBytes_ToDafny(nativeInput.NumberOfBytes), Com_amazonaws_kms_GenerateDataKeyRequest_KeySpec_ToDafny(nativeInput.KeySpec), Com_amazonaws_kms_GenerateDataKeyRequest_GrantTokens_ToDafny(nativeInput.GrantTokens), Com_amazonaws_kms_GenerateDataKeyRequest_Recipient_ToDafny(nativeInput.Recipient), Com_amazonaws_kms_GenerateDataKeyRequest_DryRun_ToDafny(nativeInput.DryRun))
	}()

}

func GenerateDataKeyOutput_ToDafny(nativeOutput kms.GenerateDataKeyOutput) ComAmazonawsKmsTypes.GenerateDataKeyResponse {

	return func() ComAmazonawsKmsTypes.GenerateDataKeyResponse {

		return ComAmazonawsKmsTypes.Companion_GenerateDataKeyResponse_.Create_GenerateDataKeyResponse_(Com_amazonaws_kms_GenerateDataKeyResponse_CiphertextBlob_ToDafny(nativeOutput.CiphertextBlob), Com_amazonaws_kms_GenerateDataKeyResponse_Plaintext_ToDafny(nativeOutput.Plaintext), Com_amazonaws_kms_GenerateDataKeyResponse_KeyId_ToDafny(nativeOutput.KeyId), Com_amazonaws_kms_GenerateDataKeyResponse_CiphertextForRecipient_ToDafny(nativeOutput.CiphertextForRecipient))
	}()

}

func GenerateDataKeyPairInput_ToDafny(nativeInput kms.GenerateDataKeyPairInput) ComAmazonawsKmsTypes.GenerateDataKeyPairRequest {

	return func() ComAmazonawsKmsTypes.GenerateDataKeyPairRequest {

		return ComAmazonawsKmsTypes.Companion_GenerateDataKeyPairRequest_.Create_GenerateDataKeyPairRequest_(Com_amazonaws_kms_GenerateDataKeyPairRequest_EncryptionContext_ToDafny(nativeInput.EncryptionContext), Com_amazonaws_kms_GenerateDataKeyPairRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_GenerateDataKeyPairRequest_KeyPairSpec_ToDafny(nativeInput.KeyPairSpec), Com_amazonaws_kms_GenerateDataKeyPairRequest_GrantTokens_ToDafny(nativeInput.GrantTokens), Com_amazonaws_kms_GenerateDataKeyPairRequest_Recipient_ToDafny(nativeInput.Recipient), Com_amazonaws_kms_GenerateDataKeyPairRequest_DryRun_ToDafny(nativeInput.DryRun))
	}()

}

func GenerateDataKeyPairOutput_ToDafny(nativeOutput kms.GenerateDataKeyPairOutput) ComAmazonawsKmsTypes.GenerateDataKeyPairResponse {

	return func() ComAmazonawsKmsTypes.GenerateDataKeyPairResponse {

		return ComAmazonawsKmsTypes.Companion_GenerateDataKeyPairResponse_.Create_GenerateDataKeyPairResponse_(Com_amazonaws_kms_GenerateDataKeyPairResponse_PrivateKeyCiphertextBlob_ToDafny(nativeOutput.PrivateKeyCiphertextBlob), Com_amazonaws_kms_GenerateDataKeyPairResponse_PrivateKeyPlaintext_ToDafny(nativeOutput.PrivateKeyPlaintext), Com_amazonaws_kms_GenerateDataKeyPairResponse_PublicKey_ToDafny(nativeOutput.PublicKey), Com_amazonaws_kms_GenerateDataKeyPairResponse_KeyId_ToDafny(nativeOutput.KeyId), Com_amazonaws_kms_GenerateDataKeyPairResponse_KeyPairSpec_ToDafny(nativeOutput.KeyPairSpec), Com_amazonaws_kms_GenerateDataKeyPairResponse_CiphertextForRecipient_ToDafny(nativeOutput.CiphertextForRecipient))
	}()

}

func GenerateDataKeyPairWithoutPlaintextInput_ToDafny(nativeInput kms.GenerateDataKeyPairWithoutPlaintextInput) ComAmazonawsKmsTypes.GenerateDataKeyPairWithoutPlaintextRequest {

	return func() ComAmazonawsKmsTypes.GenerateDataKeyPairWithoutPlaintextRequest {

		return ComAmazonawsKmsTypes.Companion_GenerateDataKeyPairWithoutPlaintextRequest_.Create_GenerateDataKeyPairWithoutPlaintextRequest_(Com_amazonaws_kms_GenerateDataKeyPairWithoutPlaintextRequest_EncryptionContext_ToDafny(nativeInput.EncryptionContext), Com_amazonaws_kms_GenerateDataKeyPairWithoutPlaintextRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_GenerateDataKeyPairWithoutPlaintextRequest_KeyPairSpec_ToDafny(nativeInput.KeyPairSpec), Com_amazonaws_kms_GenerateDataKeyPairWithoutPlaintextRequest_GrantTokens_ToDafny(nativeInput.GrantTokens), Com_amazonaws_kms_GenerateDataKeyPairWithoutPlaintextRequest_DryRun_ToDafny(nativeInput.DryRun))
	}()

}

func GenerateDataKeyPairWithoutPlaintextOutput_ToDafny(nativeOutput kms.GenerateDataKeyPairWithoutPlaintextOutput) ComAmazonawsKmsTypes.GenerateDataKeyPairWithoutPlaintextResponse {

	return func() ComAmazonawsKmsTypes.GenerateDataKeyPairWithoutPlaintextResponse {

		return ComAmazonawsKmsTypes.Companion_GenerateDataKeyPairWithoutPlaintextResponse_.Create_GenerateDataKeyPairWithoutPlaintextResponse_(Com_amazonaws_kms_GenerateDataKeyPairWithoutPlaintextResponse_PrivateKeyCiphertextBlob_ToDafny(nativeOutput.PrivateKeyCiphertextBlob), Com_amazonaws_kms_GenerateDataKeyPairWithoutPlaintextResponse_PublicKey_ToDafny(nativeOutput.PublicKey), Com_amazonaws_kms_GenerateDataKeyPairWithoutPlaintextResponse_KeyId_ToDafny(nativeOutput.KeyId), Com_amazonaws_kms_GenerateDataKeyPairWithoutPlaintextResponse_KeyPairSpec_ToDafny(nativeOutput.KeyPairSpec))
	}()

}

func GenerateDataKeyWithoutPlaintextInput_ToDafny(nativeInput kms.GenerateDataKeyWithoutPlaintextInput) ComAmazonawsKmsTypes.GenerateDataKeyWithoutPlaintextRequest {

	return func() ComAmazonawsKmsTypes.GenerateDataKeyWithoutPlaintextRequest {

		return ComAmazonawsKmsTypes.Companion_GenerateDataKeyWithoutPlaintextRequest_.Create_GenerateDataKeyWithoutPlaintextRequest_(Com_amazonaws_kms_GenerateDataKeyWithoutPlaintextRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_GenerateDataKeyWithoutPlaintextRequest_EncryptionContext_ToDafny(nativeInput.EncryptionContext), Com_amazonaws_kms_GenerateDataKeyWithoutPlaintextRequest_KeySpec_ToDafny(nativeInput.KeySpec), Com_amazonaws_kms_GenerateDataKeyWithoutPlaintextRequest_NumberOfBytes_ToDafny(nativeInput.NumberOfBytes), Com_amazonaws_kms_GenerateDataKeyWithoutPlaintextRequest_GrantTokens_ToDafny(nativeInput.GrantTokens), Com_amazonaws_kms_GenerateDataKeyWithoutPlaintextRequest_DryRun_ToDafny(nativeInput.DryRun))
	}()

}

func GenerateDataKeyWithoutPlaintextOutput_ToDafny(nativeOutput kms.GenerateDataKeyWithoutPlaintextOutput) ComAmazonawsKmsTypes.GenerateDataKeyWithoutPlaintextResponse {

	return func() ComAmazonawsKmsTypes.GenerateDataKeyWithoutPlaintextResponse {

		return ComAmazonawsKmsTypes.Companion_GenerateDataKeyWithoutPlaintextResponse_.Create_GenerateDataKeyWithoutPlaintextResponse_(Com_amazonaws_kms_GenerateDataKeyWithoutPlaintextResponse_CiphertextBlob_ToDafny(nativeOutput.CiphertextBlob), Com_amazonaws_kms_GenerateDataKeyWithoutPlaintextResponse_KeyId_ToDafny(nativeOutput.KeyId))
	}()

}

func GenerateMacInput_ToDafny(nativeInput kms.GenerateMacInput) ComAmazonawsKmsTypes.GenerateMacRequest {

	return func() ComAmazonawsKmsTypes.GenerateMacRequest {

		return ComAmazonawsKmsTypes.Companion_GenerateMacRequest_.Create_GenerateMacRequest_(Com_amazonaws_kms_GenerateMacRequest_Message_ToDafny(nativeInput.Message), Com_amazonaws_kms_GenerateMacRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_GenerateMacRequest_MacAlgorithm_ToDafny(nativeInput.MacAlgorithm), Com_amazonaws_kms_GenerateMacRequest_GrantTokens_ToDafny(nativeInput.GrantTokens), Com_amazonaws_kms_GenerateMacRequest_DryRun_ToDafny(nativeInput.DryRun))
	}()

}

func GenerateMacOutput_ToDafny(nativeOutput kms.GenerateMacOutput) ComAmazonawsKmsTypes.GenerateMacResponse {

	return func() ComAmazonawsKmsTypes.GenerateMacResponse {

		return ComAmazonawsKmsTypes.Companion_GenerateMacResponse_.Create_GenerateMacResponse_(Com_amazonaws_kms_GenerateMacResponse_Mac_ToDafny(nativeOutput.Mac), Com_amazonaws_kms_GenerateMacResponse_MacAlgorithm_ToDafny(nativeOutput.MacAlgorithm), Com_amazonaws_kms_GenerateMacResponse_KeyId_ToDafny(nativeOutput.KeyId))
	}()

}

func GenerateRandomInput_ToDafny(nativeInput kms.GenerateRandomInput) ComAmazonawsKmsTypes.GenerateRandomRequest {

	return func() ComAmazonawsKmsTypes.GenerateRandomRequest {

		return ComAmazonawsKmsTypes.Companion_GenerateRandomRequest_.Create_GenerateRandomRequest_(Com_amazonaws_kms_GenerateRandomRequest_NumberOfBytes_ToDafny(nativeInput.NumberOfBytes), Com_amazonaws_kms_GenerateRandomRequest_CustomKeyStoreId_ToDafny(nativeInput.CustomKeyStoreId), Com_amazonaws_kms_GenerateRandomRequest_Recipient_ToDafny(nativeInput.Recipient))
	}()

}

func GenerateRandomOutput_ToDafny(nativeOutput kms.GenerateRandomOutput) ComAmazonawsKmsTypes.GenerateRandomResponse {

	return func() ComAmazonawsKmsTypes.GenerateRandomResponse {

		return ComAmazonawsKmsTypes.Companion_GenerateRandomResponse_.Create_GenerateRandomResponse_(Com_amazonaws_kms_GenerateRandomResponse_Plaintext_ToDafny(nativeOutput.Plaintext), Com_amazonaws_kms_GenerateRandomResponse_CiphertextForRecipient_ToDafny(nativeOutput.CiphertextForRecipient))
	}()

}

func GetKeyPolicyInput_ToDafny(nativeInput kms.GetKeyPolicyInput) ComAmazonawsKmsTypes.GetKeyPolicyRequest {

	return func() ComAmazonawsKmsTypes.GetKeyPolicyRequest {

		return ComAmazonawsKmsTypes.Companion_GetKeyPolicyRequest_.Create_GetKeyPolicyRequest_(Com_amazonaws_kms_GetKeyPolicyRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_GetKeyPolicyRequest_PolicyName_ToDafny(nativeInput.PolicyName))
	}()

}

func GetKeyPolicyOutput_ToDafny(nativeOutput kms.GetKeyPolicyOutput) ComAmazonawsKmsTypes.GetKeyPolicyResponse {

	return func() ComAmazonawsKmsTypes.GetKeyPolicyResponse {

		return ComAmazonawsKmsTypes.Companion_GetKeyPolicyResponse_.Create_GetKeyPolicyResponse_(Com_amazonaws_kms_GetKeyPolicyResponse_Policy_ToDafny(nativeOutput.Policy), Com_amazonaws_kms_GetKeyPolicyResponse_PolicyName_ToDafny(nativeOutput.PolicyName))
	}()

}

func GetKeyRotationStatusInput_ToDafny(nativeInput kms.GetKeyRotationStatusInput) ComAmazonawsKmsTypes.GetKeyRotationStatusRequest {

	return func() ComAmazonawsKmsTypes.GetKeyRotationStatusRequest {

		return ComAmazonawsKmsTypes.Companion_GetKeyRotationStatusRequest_.Create_GetKeyRotationStatusRequest_(Com_amazonaws_kms_GetKeyRotationStatusRequest_KeyId_ToDafny(nativeInput.KeyId))
	}()

}

func GetKeyRotationStatusOutput_ToDafny(nativeOutput kms.GetKeyRotationStatusOutput) ComAmazonawsKmsTypes.GetKeyRotationStatusResponse {

	return func() ComAmazonawsKmsTypes.GetKeyRotationStatusResponse {

		return ComAmazonawsKmsTypes.Companion_GetKeyRotationStatusResponse_.Create_GetKeyRotationStatusResponse_(Com_amazonaws_kms_GetKeyRotationStatusResponse_KeyRotationEnabled_ToDafny(nativeOutput.KeyRotationEnabled), Com_amazonaws_kms_GetKeyRotationStatusResponse_KeyId_ToDafny(nativeOutput.KeyId), Com_amazonaws_kms_GetKeyRotationStatusResponse_RotationPeriodInDays_ToDafny(nativeOutput.RotationPeriodInDays), Com_amazonaws_kms_GetKeyRotationStatusResponse_NextRotationDate_ToDafny(nativeOutput.NextRotationDate), Com_amazonaws_kms_GetKeyRotationStatusResponse_OnDemandRotationStartDate_ToDafny(nativeOutput.OnDemandRotationStartDate))
	}()

}

func GetParametersForImportInput_ToDafny(nativeInput kms.GetParametersForImportInput) ComAmazonawsKmsTypes.GetParametersForImportRequest {

	return func() ComAmazonawsKmsTypes.GetParametersForImportRequest {

		return ComAmazonawsKmsTypes.Companion_GetParametersForImportRequest_.Create_GetParametersForImportRequest_(Com_amazonaws_kms_GetParametersForImportRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_GetParametersForImportRequest_WrappingAlgorithm_ToDafny(nativeInput.WrappingAlgorithm), Com_amazonaws_kms_GetParametersForImportRequest_WrappingKeySpec_ToDafny(nativeInput.WrappingKeySpec))
	}()

}

func GetParametersForImportOutput_ToDafny(nativeOutput kms.GetParametersForImportOutput) ComAmazonawsKmsTypes.GetParametersForImportResponse {

	return func() ComAmazonawsKmsTypes.GetParametersForImportResponse {

		return ComAmazonawsKmsTypes.Companion_GetParametersForImportResponse_.Create_GetParametersForImportResponse_(Com_amazonaws_kms_GetParametersForImportResponse_KeyId_ToDafny(nativeOutput.KeyId), Com_amazonaws_kms_GetParametersForImportResponse_ImportToken_ToDafny(nativeOutput.ImportToken), Com_amazonaws_kms_GetParametersForImportResponse_PublicKey_ToDafny(nativeOutput.PublicKey), Com_amazonaws_kms_GetParametersForImportResponse_ParametersValidTo_ToDafny(nativeOutput.ParametersValidTo))
	}()

}

func GetPublicKeyInput_ToDafny(nativeInput kms.GetPublicKeyInput) ComAmazonawsKmsTypes.GetPublicKeyRequest {

	return func() ComAmazonawsKmsTypes.GetPublicKeyRequest {

		return ComAmazonawsKmsTypes.Companion_GetPublicKeyRequest_.Create_GetPublicKeyRequest_(Com_amazonaws_kms_GetPublicKeyRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_GetPublicKeyRequest_GrantTokens_ToDafny(nativeInput.GrantTokens))
	}()

}

func GetPublicKeyOutput_ToDafny(nativeOutput kms.GetPublicKeyOutput) ComAmazonawsKmsTypes.GetPublicKeyResponse {

	return func() ComAmazonawsKmsTypes.GetPublicKeyResponse {

		return ComAmazonawsKmsTypes.Companion_GetPublicKeyResponse_.Create_GetPublicKeyResponse_(Com_amazonaws_kms_GetPublicKeyResponse_KeyId_ToDafny(nativeOutput.KeyId), Com_amazonaws_kms_GetPublicKeyResponse_PublicKey_ToDafny(nativeOutput.PublicKey), Com_amazonaws_kms_GetPublicKeyResponse_CustomerMasterKeySpec_ToDafny(nativeOutput.CustomerMasterKeySpec), Com_amazonaws_kms_GetPublicKeyResponse_KeySpec_ToDafny(nativeOutput.KeySpec), Com_amazonaws_kms_GetPublicKeyResponse_KeyUsage_ToDafny(nativeOutput.KeyUsage), Com_amazonaws_kms_GetPublicKeyResponse_EncryptionAlgorithms_ToDafny(nativeOutput.EncryptionAlgorithms), Com_amazonaws_kms_GetPublicKeyResponse_SigningAlgorithms_ToDafny(nativeOutput.SigningAlgorithms), Com_amazonaws_kms_GetPublicKeyResponse_KeyAgreementAlgorithms_ToDafny(nativeOutput.KeyAgreementAlgorithms))
	}()

}

func ImportKeyMaterialInput_ToDafny(nativeInput kms.ImportKeyMaterialInput) ComAmazonawsKmsTypes.ImportKeyMaterialRequest {

	return func() ComAmazonawsKmsTypes.ImportKeyMaterialRequest {

		return ComAmazonawsKmsTypes.Companion_ImportKeyMaterialRequest_.Create_ImportKeyMaterialRequest_(Com_amazonaws_kms_ImportKeyMaterialRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_ImportKeyMaterialRequest_ImportToken_ToDafny(nativeInput.ImportToken), Com_amazonaws_kms_ImportKeyMaterialRequest_EncryptedKeyMaterial_ToDafny(nativeInput.EncryptedKeyMaterial), Com_amazonaws_kms_ImportKeyMaterialRequest_ValidTo_ToDafny(nativeInput.ValidTo), Com_amazonaws_kms_ImportKeyMaterialRequest_ExpirationModel_ToDafny(nativeInput.ExpirationModel))
	}()

}

func ImportKeyMaterialOutput_ToDafny(nativeOutput kms.ImportKeyMaterialOutput) ComAmazonawsKmsTypes.ImportKeyMaterialResponse {

	return func() ComAmazonawsKmsTypes.ImportKeyMaterialResponse {

		return ComAmazonawsKmsTypes.Companion_ImportKeyMaterialResponse_.Create_ImportKeyMaterialResponse_()
	}()

}

func ListAliasesInput_ToDafny(nativeInput kms.ListAliasesInput) ComAmazonawsKmsTypes.ListAliasesRequest {

	return func() ComAmazonawsKmsTypes.ListAliasesRequest {

		return ComAmazonawsKmsTypes.Companion_ListAliasesRequest_.Create_ListAliasesRequest_(Com_amazonaws_kms_ListAliasesRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_ListAliasesRequest_Limit_ToDafny(nativeInput.Limit), Com_amazonaws_kms_ListAliasesRequest_Marker_ToDafny(nativeInput.Marker))
	}()

}

func ListAliasesOutput_ToDafny(nativeOutput kms.ListAliasesOutput) ComAmazonawsKmsTypes.ListAliasesResponse {

	return func() ComAmazonawsKmsTypes.ListAliasesResponse {

		return ComAmazonawsKmsTypes.Companion_ListAliasesResponse_.Create_ListAliasesResponse_(Com_amazonaws_kms_ListAliasesResponse_Aliases_ToDafny(nativeOutput.Aliases), Com_amazonaws_kms_ListAliasesResponse_NextMarker_ToDafny(nativeOutput.NextMarker), Com_amazonaws_kms_ListAliasesResponse_Truncated_ToDafny(nativeOutput.Truncated))
	}()

}

func ListGrantsInput_ToDafny(nativeInput kms.ListGrantsInput) ComAmazonawsKmsTypes.ListGrantsRequest {

	return func() ComAmazonawsKmsTypes.ListGrantsRequest {

		return ComAmazonawsKmsTypes.Companion_ListGrantsRequest_.Create_ListGrantsRequest_(Com_amazonaws_kms_ListGrantsRequest_Limit_ToDafny(nativeInput.Limit), Com_amazonaws_kms_ListGrantsRequest_Marker_ToDafny(nativeInput.Marker), Com_amazonaws_kms_ListGrantsRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_ListGrantsRequest_GrantId_ToDafny(nativeInput.GrantId), Com_amazonaws_kms_ListGrantsRequest_GranteePrincipal_ToDafny(nativeInput.GranteePrincipal))
	}()

}

func ListGrantsOutput_ToDafny(nativeOutput kms.ListGrantsOutput) ComAmazonawsKmsTypes.ListGrantsResponse {

	return func() ComAmazonawsKmsTypes.ListGrantsResponse {

		return ComAmazonawsKmsTypes.Companion_ListGrantsResponse_.Create_ListGrantsResponse_(Com_amazonaws_kms_ListGrantsResponse_Grants_ToDafny(nativeOutput.Grants), Com_amazonaws_kms_ListGrantsResponse_NextMarker_ToDafny(nativeOutput.NextMarker), Com_amazonaws_kms_ListGrantsResponse_Truncated_ToDafny(nativeOutput.Truncated))
	}()

}

func ListKeyPoliciesInput_ToDafny(nativeInput kms.ListKeyPoliciesInput) ComAmazonawsKmsTypes.ListKeyPoliciesRequest {

	return func() ComAmazonawsKmsTypes.ListKeyPoliciesRequest {

		return ComAmazonawsKmsTypes.Companion_ListKeyPoliciesRequest_.Create_ListKeyPoliciesRequest_(Com_amazonaws_kms_ListKeyPoliciesRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_ListKeyPoliciesRequest_Limit_ToDafny(nativeInput.Limit), Com_amazonaws_kms_ListKeyPoliciesRequest_Marker_ToDafny(nativeInput.Marker))
	}()

}

func ListKeyPoliciesOutput_ToDafny(nativeOutput kms.ListKeyPoliciesOutput) ComAmazonawsKmsTypes.ListKeyPoliciesResponse {

	return func() ComAmazonawsKmsTypes.ListKeyPoliciesResponse {

		return ComAmazonawsKmsTypes.Companion_ListKeyPoliciesResponse_.Create_ListKeyPoliciesResponse_(Com_amazonaws_kms_ListKeyPoliciesResponse_PolicyNames_ToDafny(nativeOutput.PolicyNames), Com_amazonaws_kms_ListKeyPoliciesResponse_NextMarker_ToDafny(nativeOutput.NextMarker), Com_amazonaws_kms_ListKeyPoliciesResponse_Truncated_ToDafny(nativeOutput.Truncated))
	}()

}

func ListKeyRotationsInput_ToDafny(nativeInput kms.ListKeyRotationsInput) ComAmazonawsKmsTypes.ListKeyRotationsRequest {

	return func() ComAmazonawsKmsTypes.ListKeyRotationsRequest {

		return ComAmazonawsKmsTypes.Companion_ListKeyRotationsRequest_.Create_ListKeyRotationsRequest_(Com_amazonaws_kms_ListKeyRotationsRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_ListKeyRotationsRequest_Limit_ToDafny(nativeInput.Limit), Com_amazonaws_kms_ListKeyRotationsRequest_Marker_ToDafny(nativeInput.Marker))
	}()

}

func ListKeyRotationsOutput_ToDafny(nativeOutput kms.ListKeyRotationsOutput) ComAmazonawsKmsTypes.ListKeyRotationsResponse {

	return func() ComAmazonawsKmsTypes.ListKeyRotationsResponse {

		return ComAmazonawsKmsTypes.Companion_ListKeyRotationsResponse_.Create_ListKeyRotationsResponse_(Com_amazonaws_kms_ListKeyRotationsResponse_Rotations_ToDafny(nativeOutput.Rotations), Com_amazonaws_kms_ListKeyRotationsResponse_NextMarker_ToDafny(nativeOutput.NextMarker), Com_amazonaws_kms_ListKeyRotationsResponse_Truncated_ToDafny(nativeOutput.Truncated))
	}()

}

func ListKeysInput_ToDafny(nativeInput kms.ListKeysInput) ComAmazonawsKmsTypes.ListKeysRequest {

	return func() ComAmazonawsKmsTypes.ListKeysRequest {

		return ComAmazonawsKmsTypes.Companion_ListKeysRequest_.Create_ListKeysRequest_(Com_amazonaws_kms_ListKeysRequest_Limit_ToDafny(nativeInput.Limit), Com_amazonaws_kms_ListKeysRequest_Marker_ToDafny(nativeInput.Marker))
	}()

}

func ListKeysOutput_ToDafny(nativeOutput kms.ListKeysOutput) ComAmazonawsKmsTypes.ListKeysResponse {

	return func() ComAmazonawsKmsTypes.ListKeysResponse {

		return ComAmazonawsKmsTypes.Companion_ListKeysResponse_.Create_ListKeysResponse_(Com_amazonaws_kms_ListKeysResponse_Keys_ToDafny(nativeOutput.Keys), Com_amazonaws_kms_ListKeysResponse_NextMarker_ToDafny(nativeOutput.NextMarker), Com_amazonaws_kms_ListKeysResponse_Truncated_ToDafny(nativeOutput.Truncated))
	}()

}

func ListResourceTagsInput_ToDafny(nativeInput kms.ListResourceTagsInput) ComAmazonawsKmsTypes.ListResourceTagsRequest {

	return func() ComAmazonawsKmsTypes.ListResourceTagsRequest {

		return ComAmazonawsKmsTypes.Companion_ListResourceTagsRequest_.Create_ListResourceTagsRequest_(Com_amazonaws_kms_ListResourceTagsRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_ListResourceTagsRequest_Limit_ToDafny(nativeInput.Limit), Com_amazonaws_kms_ListResourceTagsRequest_Marker_ToDafny(nativeInput.Marker))
	}()

}

func ListResourceTagsOutput_ToDafny(nativeOutput kms.ListResourceTagsOutput) ComAmazonawsKmsTypes.ListResourceTagsResponse {

	return func() ComAmazonawsKmsTypes.ListResourceTagsResponse {

		return ComAmazonawsKmsTypes.Companion_ListResourceTagsResponse_.Create_ListResourceTagsResponse_(Com_amazonaws_kms_ListResourceTagsResponse_Tags_ToDafny(nativeOutput.Tags), Com_amazonaws_kms_ListResourceTagsResponse_NextMarker_ToDafny(nativeOutput.NextMarker), Com_amazonaws_kms_ListResourceTagsResponse_Truncated_ToDafny(nativeOutput.Truncated))
	}()

}

func PutKeyPolicyInput_ToDafny(nativeInput kms.PutKeyPolicyInput) ComAmazonawsKmsTypes.PutKeyPolicyRequest {

	return func() ComAmazonawsKmsTypes.PutKeyPolicyRequest {

		return ComAmazonawsKmsTypes.Companion_PutKeyPolicyRequest_.Create_PutKeyPolicyRequest_(Com_amazonaws_kms_PutKeyPolicyRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_PutKeyPolicyRequest_PolicyName_ToDafny(nativeInput.PolicyName), Com_amazonaws_kms_PutKeyPolicyRequest_Policy_ToDafny(nativeInput.Policy), Com_amazonaws_kms_PutKeyPolicyRequest_BypassPolicyLockoutSafetyCheck_ToDafny(nativeInput.BypassPolicyLockoutSafetyCheck))
	}()

}

func ReEncryptInput_ToDafny(nativeInput kms.ReEncryptInput) ComAmazonawsKmsTypes.ReEncryptRequest {

	return func() ComAmazonawsKmsTypes.ReEncryptRequest {

		return ComAmazonawsKmsTypes.Companion_ReEncryptRequest_.Create_ReEncryptRequest_(Com_amazonaws_kms_ReEncryptRequest_CiphertextBlob_ToDafny(nativeInput.CiphertextBlob), Com_amazonaws_kms_ReEncryptRequest_SourceEncryptionContext_ToDafny(nativeInput.SourceEncryptionContext), Com_amazonaws_kms_ReEncryptRequest_SourceKeyId_ToDafny(nativeInput.SourceKeyId), Com_amazonaws_kms_ReEncryptRequest_DestinationKeyId_ToDafny(nativeInput.DestinationKeyId), Com_amazonaws_kms_ReEncryptRequest_DestinationEncryptionContext_ToDafny(nativeInput.DestinationEncryptionContext), Com_amazonaws_kms_ReEncryptRequest_SourceEncryptionAlgorithm_ToDafny(nativeInput.SourceEncryptionAlgorithm), Com_amazonaws_kms_ReEncryptRequest_DestinationEncryptionAlgorithm_ToDafny(nativeInput.DestinationEncryptionAlgorithm), Com_amazonaws_kms_ReEncryptRequest_GrantTokens_ToDafny(nativeInput.GrantTokens), Com_amazonaws_kms_ReEncryptRequest_DryRun_ToDafny(nativeInput.DryRun))
	}()

}

func ReEncryptOutput_ToDafny(nativeOutput kms.ReEncryptOutput) ComAmazonawsKmsTypes.ReEncryptResponse {

	return func() ComAmazonawsKmsTypes.ReEncryptResponse {

		return ComAmazonawsKmsTypes.Companion_ReEncryptResponse_.Create_ReEncryptResponse_(Com_amazonaws_kms_ReEncryptResponse_CiphertextBlob_ToDafny(nativeOutput.CiphertextBlob), Com_amazonaws_kms_ReEncryptResponse_SourceKeyId_ToDafny(nativeOutput.SourceKeyId), Com_amazonaws_kms_ReEncryptResponse_KeyId_ToDafny(nativeOutput.KeyId), Com_amazonaws_kms_ReEncryptResponse_SourceEncryptionAlgorithm_ToDafny(nativeOutput.SourceEncryptionAlgorithm), Com_amazonaws_kms_ReEncryptResponse_DestinationEncryptionAlgorithm_ToDafny(nativeOutput.DestinationEncryptionAlgorithm))
	}()

}

func ReplicateKeyInput_ToDafny(nativeInput kms.ReplicateKeyInput) ComAmazonawsKmsTypes.ReplicateKeyRequest {

	return func() ComAmazonawsKmsTypes.ReplicateKeyRequest {

		return ComAmazonawsKmsTypes.Companion_ReplicateKeyRequest_.Create_ReplicateKeyRequest_(Com_amazonaws_kms_ReplicateKeyRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_ReplicateKeyRequest_ReplicaRegion_ToDafny(nativeInput.ReplicaRegion), Com_amazonaws_kms_ReplicateKeyRequest_Policy_ToDafny(nativeInput.Policy), Com_amazonaws_kms_ReplicateKeyRequest_BypassPolicyLockoutSafetyCheck_ToDafny(nativeInput.BypassPolicyLockoutSafetyCheck), Com_amazonaws_kms_ReplicateKeyRequest_Description_ToDafny(nativeInput.Description), Com_amazonaws_kms_ReplicateKeyRequest_Tags_ToDafny(nativeInput.Tags))
	}()

}

func ReplicateKeyOutput_ToDafny(nativeOutput kms.ReplicateKeyOutput) ComAmazonawsKmsTypes.ReplicateKeyResponse {

	return func() ComAmazonawsKmsTypes.ReplicateKeyResponse {

		return ComAmazonawsKmsTypes.Companion_ReplicateKeyResponse_.Create_ReplicateKeyResponse_(Com_amazonaws_kms_ReplicateKeyResponse_ReplicaKeyMetadata_ToDafny(nativeOutput.ReplicaKeyMetadata), Com_amazonaws_kms_ReplicateKeyResponse_ReplicaPolicy_ToDafny(nativeOutput.ReplicaPolicy), Com_amazonaws_kms_ReplicateKeyResponse_ReplicaTags_ToDafny(nativeOutput.ReplicaTags))
	}()

}

func RetireGrantInput_ToDafny(nativeInput kms.RetireGrantInput) ComAmazonawsKmsTypes.RetireGrantRequest {

	return func() ComAmazonawsKmsTypes.RetireGrantRequest {

		return ComAmazonawsKmsTypes.Companion_RetireGrantRequest_.Create_RetireGrantRequest_(Com_amazonaws_kms_RetireGrantRequest_GrantToken_ToDafny(nativeInput.GrantToken), Com_amazonaws_kms_RetireGrantRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_RetireGrantRequest_GrantId_ToDafny(nativeInput.GrantId), Com_amazonaws_kms_RetireGrantRequest_DryRun_ToDafny(nativeInput.DryRun))
	}()

}

func RevokeGrantInput_ToDafny(nativeInput kms.RevokeGrantInput) ComAmazonawsKmsTypes.RevokeGrantRequest {

	return func() ComAmazonawsKmsTypes.RevokeGrantRequest {

		return ComAmazonawsKmsTypes.Companion_RevokeGrantRequest_.Create_RevokeGrantRequest_(Com_amazonaws_kms_RevokeGrantRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_RevokeGrantRequest_GrantId_ToDafny(nativeInput.GrantId), Com_amazonaws_kms_RevokeGrantRequest_DryRun_ToDafny(nativeInput.DryRun))
	}()

}

func RotateKeyOnDemandInput_ToDafny(nativeInput kms.RotateKeyOnDemandInput) ComAmazonawsKmsTypes.RotateKeyOnDemandRequest {

	return func() ComAmazonawsKmsTypes.RotateKeyOnDemandRequest {

		return ComAmazonawsKmsTypes.Companion_RotateKeyOnDemandRequest_.Create_RotateKeyOnDemandRequest_(Com_amazonaws_kms_RotateKeyOnDemandRequest_KeyId_ToDafny(nativeInput.KeyId))
	}()

}

func RotateKeyOnDemandOutput_ToDafny(nativeOutput kms.RotateKeyOnDemandOutput) ComAmazonawsKmsTypes.RotateKeyOnDemandResponse {

	return func() ComAmazonawsKmsTypes.RotateKeyOnDemandResponse {

		return ComAmazonawsKmsTypes.Companion_RotateKeyOnDemandResponse_.Create_RotateKeyOnDemandResponse_(Com_amazonaws_kms_RotateKeyOnDemandResponse_KeyId_ToDafny(nativeOutput.KeyId))
	}()

}

func ScheduleKeyDeletionInput_ToDafny(nativeInput kms.ScheduleKeyDeletionInput) ComAmazonawsKmsTypes.ScheduleKeyDeletionRequest {

	return func() ComAmazonawsKmsTypes.ScheduleKeyDeletionRequest {

		return ComAmazonawsKmsTypes.Companion_ScheduleKeyDeletionRequest_.Create_ScheduleKeyDeletionRequest_(Com_amazonaws_kms_ScheduleKeyDeletionRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_ScheduleKeyDeletionRequest_PendingWindowInDays_ToDafny(nativeInput.PendingWindowInDays))
	}()

}

func ScheduleKeyDeletionOutput_ToDafny(nativeOutput kms.ScheduleKeyDeletionOutput) ComAmazonawsKmsTypes.ScheduleKeyDeletionResponse {

	return func() ComAmazonawsKmsTypes.ScheduleKeyDeletionResponse {

		return ComAmazonawsKmsTypes.Companion_ScheduleKeyDeletionResponse_.Create_ScheduleKeyDeletionResponse_(Com_amazonaws_kms_ScheduleKeyDeletionResponse_KeyId_ToDafny(nativeOutput.KeyId), Com_amazonaws_kms_ScheduleKeyDeletionResponse_DeletionDate_ToDafny(nativeOutput.DeletionDate), Com_amazonaws_kms_ScheduleKeyDeletionResponse_KeyState_ToDafny(nativeOutput.KeyState), Com_amazonaws_kms_ScheduleKeyDeletionResponse_PendingWindowInDays_ToDafny(nativeOutput.PendingWindowInDays))
	}()

}

func SignInput_ToDafny(nativeInput kms.SignInput) ComAmazonawsKmsTypes.SignRequest {

	return func() ComAmazonawsKmsTypes.SignRequest {

		return ComAmazonawsKmsTypes.Companion_SignRequest_.Create_SignRequest_(Com_amazonaws_kms_SignRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_SignRequest_Message_ToDafny(nativeInput.Message), Com_amazonaws_kms_SignRequest_MessageType_ToDafny(nativeInput.MessageType), Com_amazonaws_kms_SignRequest_GrantTokens_ToDafny(nativeInput.GrantTokens), Com_amazonaws_kms_SignRequest_SigningAlgorithm_ToDafny(nativeInput.SigningAlgorithm), Com_amazonaws_kms_SignRequest_DryRun_ToDafny(nativeInput.DryRun))
	}()

}

func SignOutput_ToDafny(nativeOutput kms.SignOutput) ComAmazonawsKmsTypes.SignResponse {

	return func() ComAmazonawsKmsTypes.SignResponse {

		return ComAmazonawsKmsTypes.Companion_SignResponse_.Create_SignResponse_(Com_amazonaws_kms_SignResponse_KeyId_ToDafny(nativeOutput.KeyId), Com_amazonaws_kms_SignResponse_Signature_ToDafny(nativeOutput.Signature), Com_amazonaws_kms_SignResponse_SigningAlgorithm_ToDafny(nativeOutput.SigningAlgorithm))
	}()

}

func TagResourceInput_ToDafny(nativeInput kms.TagResourceInput) ComAmazonawsKmsTypes.TagResourceRequest {

	return func() ComAmazonawsKmsTypes.TagResourceRequest {

		return ComAmazonawsKmsTypes.Companion_TagResourceRequest_.Create_TagResourceRequest_(Com_amazonaws_kms_TagResourceRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_TagResourceRequest_Tags_ToDafny(nativeInput.Tags))
	}()

}

func UntagResourceInput_ToDafny(nativeInput kms.UntagResourceInput) ComAmazonawsKmsTypes.UntagResourceRequest {

	return func() ComAmazonawsKmsTypes.UntagResourceRequest {

		return ComAmazonawsKmsTypes.Companion_UntagResourceRequest_.Create_UntagResourceRequest_(Com_amazonaws_kms_UntagResourceRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_UntagResourceRequest_TagKeys_ToDafny(nativeInput.TagKeys))
	}()

}

func UpdateAliasInput_ToDafny(nativeInput kms.UpdateAliasInput) ComAmazonawsKmsTypes.UpdateAliasRequest {

	return func() ComAmazonawsKmsTypes.UpdateAliasRequest {

		return ComAmazonawsKmsTypes.Companion_UpdateAliasRequest_.Create_UpdateAliasRequest_(Com_amazonaws_kms_UpdateAliasRequest_AliasName_ToDafny(nativeInput.AliasName), Com_amazonaws_kms_UpdateAliasRequest_TargetKeyId_ToDafny(nativeInput.TargetKeyId))
	}()

}

func UpdateCustomKeyStoreInput_ToDafny(nativeInput kms.UpdateCustomKeyStoreInput) ComAmazonawsKmsTypes.UpdateCustomKeyStoreRequest {

	return func() ComAmazonawsKmsTypes.UpdateCustomKeyStoreRequest {

		return ComAmazonawsKmsTypes.Companion_UpdateCustomKeyStoreRequest_.Create_UpdateCustomKeyStoreRequest_(Com_amazonaws_kms_UpdateCustomKeyStoreRequest_CustomKeyStoreId_ToDafny(nativeInput.CustomKeyStoreId), Com_amazonaws_kms_UpdateCustomKeyStoreRequest_NewCustomKeyStoreName_ToDafny(nativeInput.NewCustomKeyStoreName), Com_amazonaws_kms_UpdateCustomKeyStoreRequest_KeyStorePassword_ToDafny(nativeInput.KeyStorePassword), Com_amazonaws_kms_UpdateCustomKeyStoreRequest_CloudHsmClusterId_ToDafny(nativeInput.CloudHsmClusterId), Com_amazonaws_kms_UpdateCustomKeyStoreRequest_XksProxyUriEndpoint_ToDafny(nativeInput.XksProxyUriEndpoint), Com_amazonaws_kms_UpdateCustomKeyStoreRequest_XksProxyUriPath_ToDafny(nativeInput.XksProxyUriPath), Com_amazonaws_kms_UpdateCustomKeyStoreRequest_XksProxyVpcEndpointServiceName_ToDafny(nativeInput.XksProxyVpcEndpointServiceName), Com_amazonaws_kms_UpdateCustomKeyStoreRequest_XksProxyAuthenticationCredential_ToDafny(nativeInput.XksProxyAuthenticationCredential), Com_amazonaws_kms_UpdateCustomKeyStoreRequest_XksProxyConnectivity_ToDafny(nativeInput.XksProxyConnectivity))
	}()

}

func UpdateCustomKeyStoreOutput_ToDafny(nativeOutput kms.UpdateCustomKeyStoreOutput) ComAmazonawsKmsTypes.UpdateCustomKeyStoreResponse {

	return func() ComAmazonawsKmsTypes.UpdateCustomKeyStoreResponse {

		return ComAmazonawsKmsTypes.Companion_UpdateCustomKeyStoreResponse_.Create_UpdateCustomKeyStoreResponse_()
	}()

}

func UpdateKeyDescriptionInput_ToDafny(nativeInput kms.UpdateKeyDescriptionInput) ComAmazonawsKmsTypes.UpdateKeyDescriptionRequest {

	return func() ComAmazonawsKmsTypes.UpdateKeyDescriptionRequest {

		return ComAmazonawsKmsTypes.Companion_UpdateKeyDescriptionRequest_.Create_UpdateKeyDescriptionRequest_(Com_amazonaws_kms_UpdateKeyDescriptionRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_UpdateKeyDescriptionRequest_Description_ToDafny(nativeInput.Description))
	}()

}

func UpdatePrimaryRegionInput_ToDafny(nativeInput kms.UpdatePrimaryRegionInput) ComAmazonawsKmsTypes.UpdatePrimaryRegionRequest {

	return func() ComAmazonawsKmsTypes.UpdatePrimaryRegionRequest {

		return ComAmazonawsKmsTypes.Companion_UpdatePrimaryRegionRequest_.Create_UpdatePrimaryRegionRequest_(Com_amazonaws_kms_UpdatePrimaryRegionRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_UpdatePrimaryRegionRequest_PrimaryRegion_ToDafny(nativeInput.PrimaryRegion))
	}()

}

func VerifyInput_ToDafny(nativeInput kms.VerifyInput) ComAmazonawsKmsTypes.VerifyRequest {

	return func() ComAmazonawsKmsTypes.VerifyRequest {

		return ComAmazonawsKmsTypes.Companion_VerifyRequest_.Create_VerifyRequest_(Com_amazonaws_kms_VerifyRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_VerifyRequest_Message_ToDafny(nativeInput.Message), Com_amazonaws_kms_VerifyRequest_MessageType_ToDafny(nativeInput.MessageType), Com_amazonaws_kms_VerifyRequest_Signature_ToDafny(nativeInput.Signature), Com_amazonaws_kms_VerifyRequest_SigningAlgorithm_ToDafny(nativeInput.SigningAlgorithm), Com_amazonaws_kms_VerifyRequest_GrantTokens_ToDafny(nativeInput.GrantTokens), Com_amazonaws_kms_VerifyRequest_DryRun_ToDafny(nativeInput.DryRun))
	}()

}

func VerifyOutput_ToDafny(nativeOutput kms.VerifyOutput) ComAmazonawsKmsTypes.VerifyResponse {

	return func() ComAmazonawsKmsTypes.VerifyResponse {

		return ComAmazonawsKmsTypes.Companion_VerifyResponse_.Create_VerifyResponse_(Com_amazonaws_kms_VerifyResponse_KeyId_ToDafny(nativeOutput.KeyId), Com_amazonaws_kms_VerifyResponse_SignatureValid_ToDafny(nativeOutput.SignatureValid), Com_amazonaws_kms_VerifyResponse_SigningAlgorithm_ToDafny(nativeOutput.SigningAlgorithm))
	}()

}

func VerifyMacInput_ToDafny(nativeInput kms.VerifyMacInput) ComAmazonawsKmsTypes.VerifyMacRequest {

	return func() ComAmazonawsKmsTypes.VerifyMacRequest {

		return ComAmazonawsKmsTypes.Companion_VerifyMacRequest_.Create_VerifyMacRequest_(Com_amazonaws_kms_VerifyMacRequest_Message_ToDafny(nativeInput.Message), Com_amazonaws_kms_VerifyMacRequest_KeyId_ToDafny(nativeInput.KeyId), Com_amazonaws_kms_VerifyMacRequest_MacAlgorithm_ToDafny(nativeInput.MacAlgorithm), Com_amazonaws_kms_VerifyMacRequest_Mac_ToDafny(nativeInput.Mac), Com_amazonaws_kms_VerifyMacRequest_GrantTokens_ToDafny(nativeInput.GrantTokens), Com_amazonaws_kms_VerifyMacRequest_DryRun_ToDafny(nativeInput.DryRun))
	}()

}

func VerifyMacOutput_ToDafny(nativeOutput kms.VerifyMacOutput) ComAmazonawsKmsTypes.VerifyMacResponse {

	return func() ComAmazonawsKmsTypes.VerifyMacResponse {

		return ComAmazonawsKmsTypes.Companion_VerifyMacResponse_.Create_VerifyMacResponse_(Com_amazonaws_kms_VerifyMacResponse_KeyId_ToDafny(nativeOutput.KeyId), Com_amazonaws_kms_VerifyMacResponse_MacValid_ToDafny(nativeOutput.MacValid), Com_amazonaws_kms_VerifyMacResponse_MacAlgorithm_ToDafny(nativeOutput.MacAlgorithm))
	}()

}

func AlreadyExistsException_ToDafny(nativeInput types.AlreadyExistsException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_AlreadyExistsException_(Com_amazonaws_kms_AlreadyExistsException_message_ToDafny(nativeInput.Message))
	}()

}

func CloudHsmClusterInUseException_ToDafny(nativeInput types.CloudHsmClusterInUseException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_CloudHsmClusterInUseException_(Com_amazonaws_kms_CloudHsmClusterInUseException_message_ToDafny(nativeInput.Message))
	}()

}

func CloudHsmClusterInvalidConfigurationException_ToDafny(nativeInput types.CloudHsmClusterInvalidConfigurationException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_CloudHsmClusterInvalidConfigurationException_(Com_amazonaws_kms_CloudHsmClusterInvalidConfigurationException_message_ToDafny(nativeInput.Message))
	}()

}

func CloudHsmClusterNotActiveException_ToDafny(nativeInput types.CloudHsmClusterNotActiveException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_CloudHsmClusterNotActiveException_(Com_amazonaws_kms_CloudHsmClusterNotActiveException_message_ToDafny(nativeInput.Message))
	}()

}

func CloudHsmClusterNotFoundException_ToDafny(nativeInput types.CloudHsmClusterNotFoundException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_CloudHsmClusterNotFoundException_(Com_amazonaws_kms_CloudHsmClusterNotFoundException_message_ToDafny(nativeInput.Message))
	}()

}

func CloudHsmClusterNotRelatedException_ToDafny(nativeInput types.CloudHsmClusterNotRelatedException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_CloudHsmClusterNotRelatedException_(Com_amazonaws_kms_CloudHsmClusterNotRelatedException_message_ToDafny(nativeInput.Message))
	}()

}

func ConflictException_ToDafny(nativeInput types.ConflictException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_ConflictException_(Com_amazonaws_kms_ConflictException_message_ToDafny(nativeInput.Message))
	}()

}

func CustomKeyStoreHasCMKsException_ToDafny(nativeInput types.CustomKeyStoreHasCMKsException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_CustomKeyStoreHasCMKsException_(Com_amazonaws_kms_CustomKeyStoreHasCMKsException_message_ToDafny(nativeInput.Message))
	}()

}

func CustomKeyStoreInvalidStateException_ToDafny(nativeInput types.CustomKeyStoreInvalidStateException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_CustomKeyStoreInvalidStateException_(Com_amazonaws_kms_CustomKeyStoreInvalidStateException_message_ToDafny(nativeInput.Message))
	}()

}

func CustomKeyStoreNameInUseException_ToDafny(nativeInput types.CustomKeyStoreNameInUseException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_CustomKeyStoreNameInUseException_(Com_amazonaws_kms_CustomKeyStoreNameInUseException_message_ToDafny(nativeInput.Message))
	}()

}

func CustomKeyStoreNotFoundException_ToDafny(nativeInput types.CustomKeyStoreNotFoundException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_CustomKeyStoreNotFoundException_(Com_amazonaws_kms_CustomKeyStoreNotFoundException_message_ToDafny(nativeInput.Message))
	}()

}

func DependencyTimeoutException_ToDafny(nativeInput types.DependencyTimeoutException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_DependencyTimeoutException_(Com_amazonaws_kms_DependencyTimeoutException_message_ToDafny(nativeInput.Message))
	}()

}

func DisabledException_ToDafny(nativeInput types.DisabledException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_DisabledException_(Com_amazonaws_kms_DisabledException_message_ToDafny(nativeInput.Message))
	}()

}

func DryRunOperationException_ToDafny(nativeInput types.DryRunOperationException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_DryRunOperationException_(Com_amazonaws_kms_DryRunOperationException_message_ToDafny(nativeInput.Message))
	}()

}

func ExpiredImportTokenException_ToDafny(nativeInput types.ExpiredImportTokenException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_ExpiredImportTokenException_(Com_amazonaws_kms_ExpiredImportTokenException_message_ToDafny(nativeInput.Message))
	}()

}

func IncorrectKeyException_ToDafny(nativeInput types.IncorrectKeyException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_IncorrectKeyException_(Com_amazonaws_kms_IncorrectKeyException_message_ToDafny(nativeInput.Message))
	}()

}

func IncorrectKeyMaterialException_ToDafny(nativeInput types.IncorrectKeyMaterialException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_IncorrectKeyMaterialException_(Com_amazonaws_kms_IncorrectKeyMaterialException_message_ToDafny(nativeInput.Message))
	}()

}

func IncorrectTrustAnchorException_ToDafny(nativeInput types.IncorrectTrustAnchorException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_IncorrectTrustAnchorException_(Com_amazonaws_kms_IncorrectTrustAnchorException_message_ToDafny(nativeInput.Message))
	}()

}

func InvalidAliasNameException_ToDafny(nativeInput types.InvalidAliasNameException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_InvalidAliasNameException_(Com_amazonaws_kms_InvalidAliasNameException_message_ToDafny(nativeInput.Message))
	}()

}

func InvalidArnException_ToDafny(nativeInput types.InvalidArnException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_InvalidArnException_(Com_amazonaws_kms_InvalidArnException_message_ToDafny(nativeInput.Message))
	}()

}

func InvalidCiphertextException_ToDafny(nativeInput types.InvalidCiphertextException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_InvalidCiphertextException_(Com_amazonaws_kms_InvalidCiphertextException_message_ToDafny(nativeInput.Message))
	}()

}

func InvalidGrantIdException_ToDafny(nativeInput types.InvalidGrantIdException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_InvalidGrantIdException_(Com_amazonaws_kms_InvalidGrantIdException_message_ToDafny(nativeInput.Message))
	}()

}

func InvalidGrantTokenException_ToDafny(nativeInput types.InvalidGrantTokenException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_InvalidGrantTokenException_(Com_amazonaws_kms_InvalidGrantTokenException_message_ToDafny(nativeInput.Message))
	}()

}

func InvalidImportTokenException_ToDafny(nativeInput types.InvalidImportTokenException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_InvalidImportTokenException_(Com_amazonaws_kms_InvalidImportTokenException_message_ToDafny(nativeInput.Message))
	}()

}

func InvalidKeyUsageException_ToDafny(nativeInput types.InvalidKeyUsageException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_InvalidKeyUsageException_(Com_amazonaws_kms_InvalidKeyUsageException_message_ToDafny(nativeInput.Message))
	}()

}

func InvalidMarkerException_ToDafny(nativeInput types.InvalidMarkerException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_InvalidMarkerException_(Com_amazonaws_kms_InvalidMarkerException_message_ToDafny(nativeInput.Message))
	}()

}

func KeyUnavailableException_ToDafny(nativeInput types.KeyUnavailableException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_KeyUnavailableException_(Com_amazonaws_kms_KeyUnavailableException_message_ToDafny(nativeInput.Message))
	}()

}

func KMSInternalException_ToDafny(nativeInput types.KMSInternalException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_KMSInternalException_(Com_amazonaws_kms_KMSInternalException_message_ToDafny(nativeInput.Message))
	}()

}

func KMSInvalidMacException_ToDafny(nativeInput types.KMSInvalidMacException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_KMSInvalidMacException_(Com_amazonaws_kms_KMSInvalidMacException_message_ToDafny(nativeInput.Message))
	}()

}

func KMSInvalidSignatureException_ToDafny(nativeInput types.KMSInvalidSignatureException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_KMSInvalidSignatureException_(Com_amazonaws_kms_KMSInvalidSignatureException_message_ToDafny(nativeInput.Message))
	}()

}

func KMSInvalidStateException_ToDafny(nativeInput types.KMSInvalidStateException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_KMSInvalidStateException_(Com_amazonaws_kms_KMSInvalidStateException_message_ToDafny(nativeInput.Message))
	}()

}

func LimitExceededException_ToDafny(nativeInput types.LimitExceededException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_LimitExceededException_(Com_amazonaws_kms_LimitExceededException_message_ToDafny(nativeInput.Message))
	}()

}

func MalformedPolicyDocumentException_ToDafny(nativeInput types.MalformedPolicyDocumentException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_MalformedPolicyDocumentException_(Com_amazonaws_kms_MalformedPolicyDocumentException_message_ToDafny(nativeInput.Message))
	}()

}

func NotFoundException_ToDafny(nativeInput types.NotFoundException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_NotFoundException_(Com_amazonaws_kms_NotFoundException_message_ToDafny(nativeInput.Message))
	}()

}

func TagException_ToDafny(nativeInput types.TagException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_TagException_(Com_amazonaws_kms_TagException_message_ToDafny(nativeInput.Message))
	}()

}

func UnsupportedOperationException_ToDafny(nativeInput types.UnsupportedOperationException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_UnsupportedOperationException_(Com_amazonaws_kms_UnsupportedOperationException_message_ToDafny(nativeInput.Message))
	}()

}

func XksKeyAlreadyInUseException_ToDafny(nativeInput types.XksKeyAlreadyInUseException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_XksKeyAlreadyInUseException_(Com_amazonaws_kms_XksKeyAlreadyInUseException_message_ToDafny(nativeInput.Message))
	}()

}

func XksKeyInvalidConfigurationException_ToDafny(nativeInput types.XksKeyInvalidConfigurationException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_XksKeyInvalidConfigurationException_(Com_amazonaws_kms_XksKeyInvalidConfigurationException_message_ToDafny(nativeInput.Message))
	}()

}

func XksKeyNotFoundException_ToDafny(nativeInput types.XksKeyNotFoundException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_XksKeyNotFoundException_(Com_amazonaws_kms_XksKeyNotFoundException_message_ToDafny(nativeInput.Message))
	}()

}

func XksProxyIncorrectAuthenticationCredentialException_ToDafny(nativeInput types.XksProxyIncorrectAuthenticationCredentialException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_XksProxyIncorrectAuthenticationCredentialException_(Com_amazonaws_kms_XksProxyIncorrectAuthenticationCredentialException_message_ToDafny(nativeInput.Message))
	}()

}

func XksProxyInvalidConfigurationException_ToDafny(nativeInput types.XksProxyInvalidConfigurationException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_XksProxyInvalidConfigurationException_(Com_amazonaws_kms_XksProxyInvalidConfigurationException_message_ToDafny(nativeInput.Message))
	}()

}

func XksProxyInvalidResponseException_ToDafny(nativeInput types.XksProxyInvalidResponseException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_XksProxyInvalidResponseException_(Com_amazonaws_kms_XksProxyInvalidResponseException_message_ToDafny(nativeInput.Message))
	}()

}

func XksProxyUriEndpointInUseException_ToDafny(nativeInput types.XksProxyUriEndpointInUseException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_XksProxyUriEndpointInUseException_(Com_amazonaws_kms_XksProxyUriEndpointInUseException_message_ToDafny(nativeInput.Message))
	}()

}

func XksProxyUriInUseException_ToDafny(nativeInput types.XksProxyUriInUseException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_XksProxyUriInUseException_(Com_amazonaws_kms_XksProxyUriInUseException_message_ToDafny(nativeInput.Message))
	}()

}

func XksProxyUriUnreachableException_ToDafny(nativeInput types.XksProxyUriUnreachableException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_XksProxyUriUnreachableException_(Com_amazonaws_kms_XksProxyUriUnreachableException_message_ToDafny(nativeInput.Message))
	}()

}

func XksProxyVpcEndpointServiceInUseException_ToDafny(nativeInput types.XksProxyVpcEndpointServiceInUseException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_XksProxyVpcEndpointServiceInUseException_(Com_amazonaws_kms_XksProxyVpcEndpointServiceInUseException_message_ToDafny(nativeInput.Message))
	}()

}

func XksProxyVpcEndpointServiceInvalidConfigurationException_ToDafny(nativeInput types.XksProxyVpcEndpointServiceInvalidConfigurationException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_XksProxyVpcEndpointServiceInvalidConfigurationException_(Com_amazonaws_kms_XksProxyVpcEndpointServiceInvalidConfigurationException_message_ToDafny(nativeInput.Message))
	}()

}

func XksProxyVpcEndpointServiceNotFoundException_ToDafny(nativeInput types.XksProxyVpcEndpointServiceNotFoundException) ComAmazonawsKmsTypes.Error {
	return func() ComAmazonawsKmsTypes.Error {

		return ComAmazonawsKmsTypes.Companion_Error_.Create_XksProxyVpcEndpointServiceNotFoundException_(Com_amazonaws_kms_XksProxyVpcEndpointServiceNotFoundException_message_ToDafny(nativeInput.Message))
	}()

}

func OpaqueError_Input_ToDafny(nativeInput error) ComAmazonawsKmsTypes.Error {
	return ComAmazonawsKmsTypes.Companion_Error_.Create_OpaqueWithText_(nativeInput, func() dafny.Sequence {
		res, err := UTF8.DecodeFromNativeGoByteArray([]byte(nativeInput.Error()))
		if err != nil {
			panic("invalid utf8 input provided")
		}
		return res
	}())
}

func Error_ToDafny(err error) ComAmazonawsKmsTypes.Error {
	// Service Errors
	var AlreadyExistsException *types.AlreadyExistsException
	if errors.As(err, &AlreadyExistsException) {
		return AlreadyExistsException_ToDafny(*AlreadyExistsException)
	}

	var CloudHsmClusterInUseException *types.CloudHsmClusterInUseException
	if errors.As(err, &CloudHsmClusterInUseException) {
		return CloudHsmClusterInUseException_ToDafny(*CloudHsmClusterInUseException)
	}

	var CloudHsmClusterInvalidConfigurationException *types.CloudHsmClusterInvalidConfigurationException
	if errors.As(err, &CloudHsmClusterInvalidConfigurationException) {
		return CloudHsmClusterInvalidConfigurationException_ToDafny(*CloudHsmClusterInvalidConfigurationException)
	}

	var CloudHsmClusterNotActiveException *types.CloudHsmClusterNotActiveException
	if errors.As(err, &CloudHsmClusterNotActiveException) {
		return CloudHsmClusterNotActiveException_ToDafny(*CloudHsmClusterNotActiveException)
	}

	var CloudHsmClusterNotFoundException *types.CloudHsmClusterNotFoundException
	if errors.As(err, &CloudHsmClusterNotFoundException) {
		return CloudHsmClusterNotFoundException_ToDafny(*CloudHsmClusterNotFoundException)
	}

	var CloudHsmClusterNotRelatedException *types.CloudHsmClusterNotRelatedException
	if errors.As(err, &CloudHsmClusterNotRelatedException) {
		return CloudHsmClusterNotRelatedException_ToDafny(*CloudHsmClusterNotRelatedException)
	}

	var ConflictException *types.ConflictException
	if errors.As(err, &ConflictException) {
		return ConflictException_ToDafny(*ConflictException)
	}

	var CustomKeyStoreHasCMKsException *types.CustomKeyStoreHasCMKsException
	if errors.As(err, &CustomKeyStoreHasCMKsException) {
		return CustomKeyStoreHasCMKsException_ToDafny(*CustomKeyStoreHasCMKsException)
	}

	var CustomKeyStoreInvalidStateException *types.CustomKeyStoreInvalidStateException
	if errors.As(err, &CustomKeyStoreInvalidStateException) {
		return CustomKeyStoreInvalidStateException_ToDafny(*CustomKeyStoreInvalidStateException)
	}

	var CustomKeyStoreNameInUseException *types.CustomKeyStoreNameInUseException
	if errors.As(err, &CustomKeyStoreNameInUseException) {
		return CustomKeyStoreNameInUseException_ToDafny(*CustomKeyStoreNameInUseException)
	}

	var CustomKeyStoreNotFoundException *types.CustomKeyStoreNotFoundException
	if errors.As(err, &CustomKeyStoreNotFoundException) {
		return CustomKeyStoreNotFoundException_ToDafny(*CustomKeyStoreNotFoundException)
	}

	var DependencyTimeoutException *types.DependencyTimeoutException
	if errors.As(err, &DependencyTimeoutException) {
		return DependencyTimeoutException_ToDafny(*DependencyTimeoutException)
	}

	var DisabledException *types.DisabledException
	if errors.As(err, &DisabledException) {
		return DisabledException_ToDafny(*DisabledException)
	}

	var DryRunOperationException *types.DryRunOperationException
	if errors.As(err, &DryRunOperationException) {
		return DryRunOperationException_ToDafny(*DryRunOperationException)
	}

	var ExpiredImportTokenException *types.ExpiredImportTokenException
	if errors.As(err, &ExpiredImportTokenException) {
		return ExpiredImportTokenException_ToDafny(*ExpiredImportTokenException)
	}

	var IncorrectKeyException *types.IncorrectKeyException
	if errors.As(err, &IncorrectKeyException) {
		return IncorrectKeyException_ToDafny(*IncorrectKeyException)
	}

	var IncorrectKeyMaterialException *types.IncorrectKeyMaterialException
	if errors.As(err, &IncorrectKeyMaterialException) {
		return IncorrectKeyMaterialException_ToDafny(*IncorrectKeyMaterialException)
	}

	var IncorrectTrustAnchorException *types.IncorrectTrustAnchorException
	if errors.As(err, &IncorrectTrustAnchorException) {
		return IncorrectTrustAnchorException_ToDafny(*IncorrectTrustAnchorException)
	}

	var InvalidAliasNameException *types.InvalidAliasNameException
	if errors.As(err, &InvalidAliasNameException) {
		return InvalidAliasNameException_ToDafny(*InvalidAliasNameException)
	}

	var InvalidArnException *types.InvalidArnException
	if errors.As(err, &InvalidArnException) {
		return InvalidArnException_ToDafny(*InvalidArnException)
	}

	var InvalidCiphertextException *types.InvalidCiphertextException
	if errors.As(err, &InvalidCiphertextException) {
		return InvalidCiphertextException_ToDafny(*InvalidCiphertextException)
	}

	var InvalidGrantIdException *types.InvalidGrantIdException
	if errors.As(err, &InvalidGrantIdException) {
		return InvalidGrantIdException_ToDafny(*InvalidGrantIdException)
	}

	var InvalidGrantTokenException *types.InvalidGrantTokenException
	if errors.As(err, &InvalidGrantTokenException) {
		return InvalidGrantTokenException_ToDafny(*InvalidGrantTokenException)
	}

	var InvalidImportTokenException *types.InvalidImportTokenException
	if errors.As(err, &InvalidImportTokenException) {
		return InvalidImportTokenException_ToDafny(*InvalidImportTokenException)
	}

	var InvalidKeyUsageException *types.InvalidKeyUsageException
	if errors.As(err, &InvalidKeyUsageException) {
		return InvalidKeyUsageException_ToDafny(*InvalidKeyUsageException)
	}

	var InvalidMarkerException *types.InvalidMarkerException
	if errors.As(err, &InvalidMarkerException) {
		return InvalidMarkerException_ToDafny(*InvalidMarkerException)
	}

	var KeyUnavailableException *types.KeyUnavailableException
	if errors.As(err, &KeyUnavailableException) {
		return KeyUnavailableException_ToDafny(*KeyUnavailableException)
	}

	var KMSInternalException *types.KMSInternalException
	if errors.As(err, &KMSInternalException) {
		return KMSInternalException_ToDafny(*KMSInternalException)
	}

	var KMSInvalidMacException *types.KMSInvalidMacException
	if errors.As(err, &KMSInvalidMacException) {
		return KMSInvalidMacException_ToDafny(*KMSInvalidMacException)
	}

	var KMSInvalidSignatureException *types.KMSInvalidSignatureException
	if errors.As(err, &KMSInvalidSignatureException) {
		return KMSInvalidSignatureException_ToDafny(*KMSInvalidSignatureException)
	}

	var KMSInvalidStateException *types.KMSInvalidStateException
	if errors.As(err, &KMSInvalidStateException) {
		return KMSInvalidStateException_ToDafny(*KMSInvalidStateException)
	}

	var LimitExceededException *types.LimitExceededException
	if errors.As(err, &LimitExceededException) {
		return LimitExceededException_ToDafny(*LimitExceededException)
	}

	var MalformedPolicyDocumentException *types.MalformedPolicyDocumentException
	if errors.As(err, &MalformedPolicyDocumentException) {
		return MalformedPolicyDocumentException_ToDafny(*MalformedPolicyDocumentException)
	}

	var NotFoundException *types.NotFoundException
	if errors.As(err, &NotFoundException) {
		return NotFoundException_ToDafny(*NotFoundException)
	}

	var TagException *types.TagException
	if errors.As(err, &TagException) {
		return TagException_ToDafny(*TagException)
	}

	var UnsupportedOperationException *types.UnsupportedOperationException
	if errors.As(err, &UnsupportedOperationException) {
		return UnsupportedOperationException_ToDafny(*UnsupportedOperationException)
	}

	var XksKeyAlreadyInUseException *types.XksKeyAlreadyInUseException
	if errors.As(err, &XksKeyAlreadyInUseException) {
		return XksKeyAlreadyInUseException_ToDafny(*XksKeyAlreadyInUseException)
	}

	var XksKeyInvalidConfigurationException *types.XksKeyInvalidConfigurationException
	if errors.As(err, &XksKeyInvalidConfigurationException) {
		return XksKeyInvalidConfigurationException_ToDafny(*XksKeyInvalidConfigurationException)
	}

	var XksKeyNotFoundException *types.XksKeyNotFoundException
	if errors.As(err, &XksKeyNotFoundException) {
		return XksKeyNotFoundException_ToDafny(*XksKeyNotFoundException)
	}

	var XksProxyIncorrectAuthenticationCredentialException *types.XksProxyIncorrectAuthenticationCredentialException
	if errors.As(err, &XksProxyIncorrectAuthenticationCredentialException) {
		return XksProxyIncorrectAuthenticationCredentialException_ToDafny(*XksProxyIncorrectAuthenticationCredentialException)
	}

	var XksProxyInvalidConfigurationException *types.XksProxyInvalidConfigurationException
	if errors.As(err, &XksProxyInvalidConfigurationException) {
		return XksProxyInvalidConfigurationException_ToDafny(*XksProxyInvalidConfigurationException)
	}

	var XksProxyInvalidResponseException *types.XksProxyInvalidResponseException
	if errors.As(err, &XksProxyInvalidResponseException) {
		return XksProxyInvalidResponseException_ToDafny(*XksProxyInvalidResponseException)
	}

	var XksProxyUriEndpointInUseException *types.XksProxyUriEndpointInUseException
	if errors.As(err, &XksProxyUriEndpointInUseException) {
		return XksProxyUriEndpointInUseException_ToDafny(*XksProxyUriEndpointInUseException)
	}

	var XksProxyUriInUseException *types.XksProxyUriInUseException
	if errors.As(err, &XksProxyUriInUseException) {
		return XksProxyUriInUseException_ToDafny(*XksProxyUriInUseException)
	}

	var XksProxyUriUnreachableException *types.XksProxyUriUnreachableException
	if errors.As(err, &XksProxyUriUnreachableException) {
		return XksProxyUriUnreachableException_ToDafny(*XksProxyUriUnreachableException)
	}

	var XksProxyVpcEndpointServiceInUseException *types.XksProxyVpcEndpointServiceInUseException
	if errors.As(err, &XksProxyVpcEndpointServiceInUseException) {
		return XksProxyVpcEndpointServiceInUseException_ToDafny(*XksProxyVpcEndpointServiceInUseException)
	}

	var XksProxyVpcEndpointServiceInvalidConfigurationException *types.XksProxyVpcEndpointServiceInvalidConfigurationException
	if errors.As(err, &XksProxyVpcEndpointServiceInvalidConfigurationException) {
		return XksProxyVpcEndpointServiceInvalidConfigurationException_ToDafny(*XksProxyVpcEndpointServiceInvalidConfigurationException)
	}

	var XksProxyVpcEndpointServiceNotFoundException *types.XksProxyVpcEndpointServiceNotFoundException
	if errors.As(err, &XksProxyVpcEndpointServiceNotFoundException) {
		return XksProxyVpcEndpointServiceNotFoundException_ToDafny(*XksProxyVpcEndpointServiceNotFoundException)
	}

	return OpaqueError_Input_ToDafny(err)
}

func Com_amazonaws_kms_CancelKeyDeletionRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_CancelKeyDeletionResponse_KeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ConnectCustomKeyStoreRequest_CustomKeyStoreId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_CreateAliasRequest_AliasName_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_CreateAliasRequest_TargetKeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_CreateCustomKeyStoreRequest_CustomKeyStoreName_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_CreateCustomKeyStoreRequest_CloudHsmClusterId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_CreateCustomKeyStoreRequest_TrustAnchorCertificate_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_CreateCustomKeyStoreRequest_KeyStorePassword_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_CreateCustomKeyStoreRequest_CustomKeyStoreType_ToDafny(input types.CustomKeyStoreType) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_CustomKeyStoreType_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.CustomKeyStoreType))
	}()
}

func Com_amazonaws_kms_CreateCustomKeyStoreRequest_XksProxyUriEndpoint_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_CreateCustomKeyStoreRequest_XksProxyUriPath_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_CreateCustomKeyStoreRequest_XksProxyVpcEndpointServiceName_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_CreateCustomKeyStoreRequest_XksProxyAuthenticationCredential_ToDafny(input *types.XksProxyAuthenticationCredentialType) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(ComAmazonawsKmsTypes.Companion_XksProxyAuthenticationCredentialType_.Create_XksProxyAuthenticationCredentialType_(Com_amazonaws_kms_XksProxyAuthenticationCredentialType_AccessKeyId_ToDafny(input.AccessKeyId), Com_amazonaws_kms_XksProxyAuthenticationCredentialType_RawSecretAccessKey_ToDafny(input.RawSecretAccessKey)))
	}()
}

func Com_amazonaws_kms_XksProxyAuthenticationCredentialType_AccessKeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_XksProxyAuthenticationCredentialType_RawSecretAccessKey_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_CreateCustomKeyStoreRequest_XksProxyConnectivity_ToDafny(input types.XksProxyConnectivityType) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_XksProxyConnectivityType_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.XksProxyConnectivityType))
	}()
}

func Com_amazonaws_kms_CreateCustomKeyStoreResponse_CustomKeyStoreId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_CreateGrantRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_CreateGrantRequest_GranteePrincipal_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_CreateGrantRequest_RetiringPrincipal_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_CreateGrantRequest_Operations_ToDafny(input []types.GrantOperation) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_GrantOperationList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return dafny.SeqOf(fieldValue...)
	}()
}

func Com_amazonaws_kms_GrantOperationList_member_ToDafny(input types.GrantOperation) ComAmazonawsKmsTypes.GrantOperation {
	return func() ComAmazonawsKmsTypes.GrantOperation {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				panic("Input value did not found in enum values")
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_GrantOperation_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return enum.(ComAmazonawsKmsTypes.GrantOperation)
	}()
}

func Com_amazonaws_kms_CreateGrantRequest_Constraints_ToDafny(input *types.GrantConstraints) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(ComAmazonawsKmsTypes.Companion_GrantConstraints_.Create_GrantConstraints_(Com_amazonaws_kms_GrantConstraints_EncryptionContextSubset_ToDafny(input.EncryptionContextSubset), Com_amazonaws_kms_GrantConstraints_EncryptionContextEquals_ToDafny(input.EncryptionContextEquals)))
	}()
}

func Com_amazonaws_kms_GrantConstraints_EncryptionContextSubset_ToDafny(input map[string]string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		fieldValue := dafny.NewMapBuilder()
		for key, val := range input {
			fieldValue.Add(Com_amazonaws_kms_EncryptionContextType_key_ToDafny(key), Com_amazonaws_kms_EncryptionContextType_value_ToDafny(val))
		}
		return Wrappers.Companion_Option_.Create_Some_(fieldValue.ToMap())
	}()
}

func Com_amazonaws_kms_EncryptionContextType_key_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_EncryptionContextType_value_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_GrantConstraints_EncryptionContextEquals_ToDafny(input map[string]string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		fieldValue := dafny.NewMapBuilder()
		for key, val := range input {
			fieldValue.Add(Com_amazonaws_kms_EncryptionContextType_key_ToDafny(key), Com_amazonaws_kms_EncryptionContextType_value_ToDafny(val))
		}
		return Wrappers.Companion_Option_.Create_Some_(fieldValue.ToMap())
	}()
}

func Com_amazonaws_kms_CreateGrantRequest_GrantTokens_ToDafny(input []string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_GrantTokenList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_GrantTokenList_member_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_CreateGrantRequest_Name_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_CreateGrantRequest_DryRun_ToDafny(input *bool) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_CreateGrantResponse_GrantToken_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_CreateGrantResponse_GrantId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_CreateKeyRequest_Policy_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_CreateKeyRequest_Description_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_CreateKeyRequest_KeyUsage_ToDafny(input types.KeyUsageType) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_KeyUsageType_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.KeyUsageType))
	}()
}

func Com_amazonaws_kms_CreateKeyRequest_CustomerMasterKeySpec_ToDafny(input types.CustomerMasterKeySpec) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_CustomerMasterKeySpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.CustomerMasterKeySpec))
	}()
}

func Com_amazonaws_kms_CreateKeyRequest_KeySpec_ToDafny(input types.KeySpec) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_KeySpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.KeySpec))
	}()
}

func Com_amazonaws_kms_CreateKeyRequest_Origin_ToDafny(input types.OriginType) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_OriginType_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.OriginType))
	}()
}

func Com_amazonaws_kms_CreateKeyRequest_CustomKeyStoreId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_CreateKeyRequest_BypassPolicyLockoutSafetyCheck_ToDafny(input bool) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(input)
	}()
}

func Com_amazonaws_kms_CreateKeyRequest_Tags_ToDafny(input []types.Tag) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_TagList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_TagList_member_ToDafny(input types.Tag) ComAmazonawsKmsTypes.Tag {
	return func() ComAmazonawsKmsTypes.Tag {

		return ComAmazonawsKmsTypes.Companion_Tag_.Create_Tag_(Com_amazonaws_kms_Tag_TagKey_ToDafny(input.TagKey), Com_amazonaws_kms_Tag_TagValue_ToDafny(input.TagValue))
	}()
}

func Com_amazonaws_kms_Tag_TagKey_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_Tag_TagValue_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_CreateKeyRequest_MultiRegion_ToDafny(input *bool) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_CreateKeyRequest_XksKeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_CreateKeyResponse_KeyMetadata_ToDafny(input *types.KeyMetadata) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(ComAmazonawsKmsTypes.Companion_KeyMetadata_.Create_KeyMetadata_(Com_amazonaws_kms_KeyMetadata_AWSAccountId_ToDafny(input.AWSAccountId), Com_amazonaws_kms_KeyMetadata_KeyId_ToDafny(input.KeyId), Com_amazonaws_kms_KeyMetadata_Arn_ToDafny(input.Arn), Com_amazonaws_kms_KeyMetadata_CreationDate_ToDafny(input.CreationDate), Com_amazonaws_kms_KeyMetadata_Enabled_ToDafny(input.Enabled), Com_amazonaws_kms_KeyMetadata_Description_ToDafny(input.Description), Com_amazonaws_kms_KeyMetadata_KeyUsage_ToDafny(input.KeyUsage), Com_amazonaws_kms_KeyMetadata_KeyState_ToDafny(input.KeyState), Com_amazonaws_kms_KeyMetadata_DeletionDate_ToDafny(input.DeletionDate), Com_amazonaws_kms_KeyMetadata_ValidTo_ToDafny(input.ValidTo), Com_amazonaws_kms_KeyMetadata_Origin_ToDafny(input.Origin), Com_amazonaws_kms_KeyMetadata_CustomKeyStoreId_ToDafny(input.CustomKeyStoreId), Com_amazonaws_kms_KeyMetadata_CloudHsmClusterId_ToDafny(input.CloudHsmClusterId), Com_amazonaws_kms_KeyMetadata_ExpirationModel_ToDafny(input.ExpirationModel), Com_amazonaws_kms_KeyMetadata_KeyManager_ToDafny(input.KeyManager), Com_amazonaws_kms_KeyMetadata_CustomerMasterKeySpec_ToDafny(input.CustomerMasterKeySpec), Com_amazonaws_kms_KeyMetadata_KeySpec_ToDafny(input.KeySpec), Com_amazonaws_kms_KeyMetadata_EncryptionAlgorithms_ToDafny(input.EncryptionAlgorithms), Com_amazonaws_kms_KeyMetadata_SigningAlgorithms_ToDafny(input.SigningAlgorithms), Com_amazonaws_kms_KeyMetadata_KeyAgreementAlgorithms_ToDafny(input.KeyAgreementAlgorithms), Com_amazonaws_kms_KeyMetadata_MultiRegion_ToDafny(input.MultiRegion), Com_amazonaws_kms_KeyMetadata_MultiRegionConfiguration_ToDafny(input.MultiRegionConfiguration), Com_amazonaws_kms_KeyMetadata_PendingDeletionWindowInDays_ToDafny(input.PendingDeletionWindowInDays), Com_amazonaws_kms_KeyMetadata_MacAlgorithms_ToDafny(input.MacAlgorithms), Com_amazonaws_kms_KeyMetadata_XksKeyConfiguration_ToDafny(input.XksKeyConfiguration)))
	}()
}

func Com_amazonaws_kms_KeyMetadata_AWSAccountId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_KeyMetadata_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_KeyMetadata_Arn_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_KeyMetadata_CreationDate_ToDafny(input *time.Time) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		formattedTime := input.Format("2006-01-02T15:04:05.999999Z")
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(formattedTime))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_KeyMetadata_Enabled_ToDafny(input bool) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(input)
	}()
}

func Com_amazonaws_kms_KeyMetadata_Description_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_KeyMetadata_KeyUsage_ToDafny(input types.KeyUsageType) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_KeyUsageType_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.KeyUsageType))
	}()
}

func Com_amazonaws_kms_KeyMetadata_KeyState_ToDafny(input types.KeyState) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_KeyState_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.KeyState))
	}()
}

func Com_amazonaws_kms_KeyMetadata_DeletionDate_ToDafny(input *time.Time) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		formattedTime := input.Format("2006-01-02T15:04:05.999999Z")
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(formattedTime))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_KeyMetadata_ValidTo_ToDafny(input *time.Time) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		formattedTime := input.Format("2006-01-02T15:04:05.999999Z")
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(formattedTime))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_KeyMetadata_Origin_ToDafny(input types.OriginType) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_OriginType_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.OriginType))
	}()
}

func Com_amazonaws_kms_KeyMetadata_CustomKeyStoreId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_KeyMetadata_CloudHsmClusterId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_KeyMetadata_ExpirationModel_ToDafny(input types.ExpirationModelType) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_ExpirationModelType_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.ExpirationModelType))
	}()
}

func Com_amazonaws_kms_KeyMetadata_KeyManager_ToDafny(input types.KeyManagerType) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_KeyManagerType_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.KeyManagerType))
	}()
}

func Com_amazonaws_kms_KeyMetadata_CustomerMasterKeySpec_ToDafny(input types.CustomerMasterKeySpec) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_CustomerMasterKeySpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.CustomerMasterKeySpec))
	}()
}

func Com_amazonaws_kms_KeyMetadata_KeySpec_ToDafny(input types.KeySpec) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_KeySpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.KeySpec))
	}()
}

func Com_amazonaws_kms_KeyMetadata_EncryptionAlgorithms_ToDafny(input []types.EncryptionAlgorithmSpec) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_EncryptionAlgorithmSpecList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_EncryptionAlgorithmSpecList_member_ToDafny(input types.EncryptionAlgorithmSpec) ComAmazonawsKmsTypes.EncryptionAlgorithmSpec {
	return func() ComAmazonawsKmsTypes.EncryptionAlgorithmSpec {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				panic("Input value did not found in enum values")
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_EncryptionAlgorithmSpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return enum.(ComAmazonawsKmsTypes.EncryptionAlgorithmSpec)
	}()
}

func Com_amazonaws_kms_KeyMetadata_SigningAlgorithms_ToDafny(input []types.SigningAlgorithmSpec) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_SigningAlgorithmSpecList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_SigningAlgorithmSpecList_member_ToDafny(input types.SigningAlgorithmSpec) ComAmazonawsKmsTypes.SigningAlgorithmSpec {
	return func() ComAmazonawsKmsTypes.SigningAlgorithmSpec {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				panic("Input value did not found in enum values")
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_SigningAlgorithmSpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return enum.(ComAmazonawsKmsTypes.SigningAlgorithmSpec)
	}()
}

func Com_amazonaws_kms_KeyMetadata_KeyAgreementAlgorithms_ToDafny(input []types.KeyAgreementAlgorithmSpec) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_KeyAgreementAlgorithmSpecList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_KeyAgreementAlgorithmSpecList_member_ToDafny(input types.KeyAgreementAlgorithmSpec) ComAmazonawsKmsTypes.KeyAgreementAlgorithmSpec {
	return func() ComAmazonawsKmsTypes.KeyAgreementAlgorithmSpec {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				panic("Input value did not found in enum values")
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_KeyAgreementAlgorithmSpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return enum.(ComAmazonawsKmsTypes.KeyAgreementAlgorithmSpec)
	}()
}

func Com_amazonaws_kms_KeyMetadata_MultiRegion_ToDafny(input *bool) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_KeyMetadata_MultiRegionConfiguration_ToDafny(input *types.MultiRegionConfiguration) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(ComAmazonawsKmsTypes.Companion_MultiRegionConfiguration_.Create_MultiRegionConfiguration_(Com_amazonaws_kms_MultiRegionConfiguration_MultiRegionKeyType_ToDafny(input.MultiRegionKeyType), Com_amazonaws_kms_MultiRegionConfiguration_PrimaryKey_ToDafny(input.PrimaryKey), Com_amazonaws_kms_MultiRegionConfiguration_ReplicaKeys_ToDafny(input.ReplicaKeys)))
	}()
}

func Com_amazonaws_kms_MultiRegionConfiguration_MultiRegionKeyType_ToDafny(input types.MultiRegionKeyType) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_MultiRegionKeyType_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.MultiRegionKeyType))
	}()
}

func Com_amazonaws_kms_MultiRegionConfiguration_PrimaryKey_ToDafny(input *types.MultiRegionKey) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(ComAmazonawsKmsTypes.Companion_MultiRegionKey_.Create_MultiRegionKey_(Com_amazonaws_kms_MultiRegionKey_Arn_ToDafny(input.Arn), Com_amazonaws_kms_MultiRegionKey_Region_ToDafny(input.Region)))
	}()
}

func Com_amazonaws_kms_MultiRegionKey_Arn_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_MultiRegionKey_Region_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_MultiRegionConfiguration_ReplicaKeys_ToDafny(input []types.MultiRegionKey) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_MultiRegionKeyList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_MultiRegionKeyList_member_ToDafny(input types.MultiRegionKey) ComAmazonawsKmsTypes.MultiRegionKey {
	return func() ComAmazonawsKmsTypes.MultiRegionKey {

		return ComAmazonawsKmsTypes.Companion_MultiRegionKey_.Create_MultiRegionKey_(Com_amazonaws_kms_MultiRegionKey_Arn_ToDafny(input.Arn), Com_amazonaws_kms_MultiRegionKey_Region_ToDafny(input.Region))
	}()
}

func Com_amazonaws_kms_KeyMetadata_PendingDeletionWindowInDays_ToDafny(input *int32) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_KeyMetadata_MacAlgorithms_ToDafny(input []types.MacAlgorithmSpec) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_MacAlgorithmSpecList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_MacAlgorithmSpecList_member_ToDafny(input types.MacAlgorithmSpec) ComAmazonawsKmsTypes.MacAlgorithmSpec {
	return func() ComAmazonawsKmsTypes.MacAlgorithmSpec {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				panic("Input value did not found in enum values")
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_MacAlgorithmSpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return enum.(ComAmazonawsKmsTypes.MacAlgorithmSpec)
	}()
}

func Com_amazonaws_kms_KeyMetadata_XksKeyConfiguration_ToDafny(input *types.XksKeyConfigurationType) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(ComAmazonawsKmsTypes.Companion_XksKeyConfigurationType_.Create_XksKeyConfigurationType_(Com_amazonaws_kms_XksKeyConfigurationType_Id_ToDafny(input.Id)))
	}()
}

func Com_amazonaws_kms_XksKeyConfigurationType_Id_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_DecryptRequest_CiphertextBlob_ToDafny(input []byte) dafny.Sequence {
	return func() dafny.Sequence {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return nil
		}
		for _, e := range input {
			v = append(v, e)
		}
		return dafny.SeqFromArray(v, false)
	}()
}

func Com_amazonaws_kms_DecryptRequest_EncryptionContext_ToDafny(input map[string]string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		fieldValue := dafny.NewMapBuilder()
		for key, val := range input {
			fieldValue.Add(Com_amazonaws_kms_EncryptionContextType_key_ToDafny(key), Com_amazonaws_kms_EncryptionContextType_value_ToDafny(val))
		}
		return Wrappers.Companion_Option_.Create_Some_(fieldValue.ToMap())
	}()
}

func Com_amazonaws_kms_DecryptRequest_GrantTokens_ToDafny(input []string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_GrantTokenList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_DecryptRequest_KeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_DecryptRequest_EncryptionAlgorithm_ToDafny(input types.EncryptionAlgorithmSpec) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_EncryptionAlgorithmSpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.EncryptionAlgorithmSpec))
	}()
}

func Com_amazonaws_kms_DecryptRequest_Recipient_ToDafny(input *types.RecipientInfo) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(ComAmazonawsKmsTypes.Companion_RecipientInfo_.Create_RecipientInfo_(Com_amazonaws_kms_RecipientInfo_KeyEncryptionAlgorithm_ToDafny(input.KeyEncryptionAlgorithm), Com_amazonaws_kms_RecipientInfo_AttestationDocument_ToDafny(input.AttestationDocument)))
	}()
}

func Com_amazonaws_kms_RecipientInfo_KeyEncryptionAlgorithm_ToDafny(input types.KeyEncryptionMechanism) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_KeyEncryptionMechanism_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.KeyEncryptionMechanism))
	}()
}

func Com_amazonaws_kms_RecipientInfo_AttestationDocument_ToDafny(input []byte) Wrappers.Option {
	return func() Wrappers.Option {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		for _, e := range input {
			v = append(v, e)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqFromArray(v, false))
	}()
}

func Com_amazonaws_kms_DecryptRequest_DryRun_ToDafny(input *bool) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_DecryptResponse_KeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_DecryptResponse_Plaintext_ToDafny(input []byte) Wrappers.Option {
	return func() Wrappers.Option {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		for _, e := range input {
			v = append(v, e)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqFromArray(v, false))
	}()
}

func Com_amazonaws_kms_DecryptResponse_EncryptionAlgorithm_ToDafny(input types.EncryptionAlgorithmSpec) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_EncryptionAlgorithmSpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.EncryptionAlgorithmSpec))
	}()
}

func Com_amazonaws_kms_DecryptResponse_CiphertextForRecipient_ToDafny(input []byte) Wrappers.Option {
	return func() Wrappers.Option {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		for _, e := range input {
			v = append(v, e)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqFromArray(v, false))
	}()
}

func Com_amazonaws_kms_DeleteAliasRequest_AliasName_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_DeleteCustomKeyStoreRequest_CustomKeyStoreId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_DeleteImportedKeyMaterialRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_DeriveSharedSecretRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_DeriveSharedSecretRequest_KeyAgreementAlgorithm_ToDafny(input types.KeyAgreementAlgorithmSpec) ComAmazonawsKmsTypes.KeyAgreementAlgorithmSpec {
	return func() ComAmazonawsKmsTypes.KeyAgreementAlgorithmSpec {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				panic("Input value did not found in enum values")
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_KeyAgreementAlgorithmSpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return enum.(ComAmazonawsKmsTypes.KeyAgreementAlgorithmSpec)
	}()
}

func Com_amazonaws_kms_DeriveSharedSecretRequest_PublicKey_ToDafny(input []byte) dafny.Sequence {
	return func() dafny.Sequence {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return nil
		}
		for _, e := range input {
			v = append(v, e)
		}
		return dafny.SeqFromArray(v, false)
	}()
}

func Com_amazonaws_kms_DeriveSharedSecretRequest_GrantTokens_ToDafny(input []string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_GrantTokenList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_DeriveSharedSecretRequest_DryRun_ToDafny(input *bool) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_DeriveSharedSecretRequest_Recipient_ToDafny(input *types.RecipientInfo) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(ComAmazonawsKmsTypes.Companion_RecipientInfo_.Create_RecipientInfo_(Com_amazonaws_kms_RecipientInfo_KeyEncryptionAlgorithm_ToDafny(input.KeyEncryptionAlgorithm), Com_amazonaws_kms_RecipientInfo_AttestationDocument_ToDafny(input.AttestationDocument)))
	}()
}

func Com_amazonaws_kms_DeriveSharedSecretResponse_KeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_DeriveSharedSecretResponse_SharedSecret_ToDafny(input []byte) Wrappers.Option {
	return func() Wrappers.Option {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		for _, e := range input {
			v = append(v, e)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqFromArray(v, false))
	}()
}

func Com_amazonaws_kms_DeriveSharedSecretResponse_CiphertextForRecipient_ToDafny(input []byte) Wrappers.Option {
	return func() Wrappers.Option {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		for _, e := range input {
			v = append(v, e)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqFromArray(v, false))
	}()
}

func Com_amazonaws_kms_DeriveSharedSecretResponse_KeyAgreementAlgorithm_ToDafny(input types.KeyAgreementAlgorithmSpec) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_KeyAgreementAlgorithmSpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.KeyAgreementAlgorithmSpec))
	}()
}

func Com_amazonaws_kms_DeriveSharedSecretResponse_KeyOrigin_ToDafny(input types.OriginType) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_OriginType_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.OriginType))
	}()
}

func Com_amazonaws_kms_DescribeCustomKeyStoresRequest_CustomKeyStoreId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_DescribeCustomKeyStoresRequest_CustomKeyStoreName_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_DescribeCustomKeyStoresRequest_Limit_ToDafny(input *int32) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_DescribeCustomKeyStoresRequest_Marker_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_DescribeCustomKeyStoresResponse_CustomKeyStores_ToDafny(input []types.CustomKeyStoresListEntry) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_CustomKeyStoresList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_CustomKeyStoresList_member_ToDafny(input types.CustomKeyStoresListEntry) ComAmazonawsKmsTypes.CustomKeyStoresListEntry {
	return func() ComAmazonawsKmsTypes.CustomKeyStoresListEntry {

		return ComAmazonawsKmsTypes.Companion_CustomKeyStoresListEntry_.Create_CustomKeyStoresListEntry_(Com_amazonaws_kms_CustomKeyStoresListEntry_CustomKeyStoreId_ToDafny(input.CustomKeyStoreId), Com_amazonaws_kms_CustomKeyStoresListEntry_CustomKeyStoreName_ToDafny(input.CustomKeyStoreName), Com_amazonaws_kms_CustomKeyStoresListEntry_CloudHsmClusterId_ToDafny(input.CloudHsmClusterId), Com_amazonaws_kms_CustomKeyStoresListEntry_TrustAnchorCertificate_ToDafny(input.TrustAnchorCertificate), Com_amazonaws_kms_CustomKeyStoresListEntry_ConnectionState_ToDafny(input.ConnectionState), Com_amazonaws_kms_CustomKeyStoresListEntry_ConnectionErrorCode_ToDafny(input.ConnectionErrorCode), Com_amazonaws_kms_CustomKeyStoresListEntry_CreationDate_ToDafny(input.CreationDate), Com_amazonaws_kms_CustomKeyStoresListEntry_CustomKeyStoreType_ToDafny(input.CustomKeyStoreType), Com_amazonaws_kms_CustomKeyStoresListEntry_XksProxyConfiguration_ToDafny(input.XksProxyConfiguration))
	}()
}

func Com_amazonaws_kms_CustomKeyStoresListEntry_CustomKeyStoreId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_CustomKeyStoresListEntry_CustomKeyStoreName_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_CustomKeyStoresListEntry_CloudHsmClusterId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_CustomKeyStoresListEntry_TrustAnchorCertificate_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_CustomKeyStoresListEntry_ConnectionState_ToDafny(input types.ConnectionStateType) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_ConnectionStateType_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.ConnectionStateType))
	}()
}

func Com_amazonaws_kms_CustomKeyStoresListEntry_ConnectionErrorCode_ToDafny(input types.ConnectionErrorCodeType) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_ConnectionErrorCodeType_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.ConnectionErrorCodeType))
	}()
}

func Com_amazonaws_kms_CustomKeyStoresListEntry_CreationDate_ToDafny(input *time.Time) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		formattedTime := input.Format("2006-01-02T15:04:05.999999Z")
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(formattedTime))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_CustomKeyStoresListEntry_CustomKeyStoreType_ToDafny(input types.CustomKeyStoreType) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_CustomKeyStoreType_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.CustomKeyStoreType))
	}()
}

func Com_amazonaws_kms_CustomKeyStoresListEntry_XksProxyConfiguration_ToDafny(input *types.XksProxyConfigurationType) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(ComAmazonawsKmsTypes.Companion_XksProxyConfigurationType_.Create_XksProxyConfigurationType_(Com_amazonaws_kms_XksProxyConfigurationType_Connectivity_ToDafny(input.Connectivity), Com_amazonaws_kms_XksProxyConfigurationType_AccessKeyId_ToDafny(input.AccessKeyId), Com_amazonaws_kms_XksProxyConfigurationType_UriEndpoint_ToDafny(input.UriEndpoint), Com_amazonaws_kms_XksProxyConfigurationType_UriPath_ToDafny(input.UriPath), Com_amazonaws_kms_XksProxyConfigurationType_VpcEndpointServiceName_ToDafny(input.VpcEndpointServiceName)))
	}()
}

func Com_amazonaws_kms_XksProxyConfigurationType_Connectivity_ToDafny(input types.XksProxyConnectivityType) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_XksProxyConnectivityType_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.XksProxyConnectivityType))
	}()
}

func Com_amazonaws_kms_XksProxyConfigurationType_AccessKeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_XksProxyConfigurationType_UriEndpoint_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_XksProxyConfigurationType_UriPath_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_XksProxyConfigurationType_VpcEndpointServiceName_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_DescribeCustomKeyStoresResponse_NextMarker_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_DescribeCustomKeyStoresResponse_Truncated_ToDafny(input bool) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(input)
	}()
}

func Com_amazonaws_kms_DescribeKeyRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_DescribeKeyRequest_GrantTokens_ToDafny(input []string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_GrantTokenList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_DescribeKeyResponse_KeyMetadata_ToDafny(input *types.KeyMetadata) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(ComAmazonawsKmsTypes.Companion_KeyMetadata_.Create_KeyMetadata_(Com_amazonaws_kms_KeyMetadata_AWSAccountId_ToDafny(input.AWSAccountId), Com_amazonaws_kms_KeyMetadata_KeyId_ToDafny(input.KeyId), Com_amazonaws_kms_KeyMetadata_Arn_ToDafny(input.Arn), Com_amazonaws_kms_KeyMetadata_CreationDate_ToDafny(input.CreationDate), Com_amazonaws_kms_KeyMetadata_Enabled_ToDafny(input.Enabled), Com_amazonaws_kms_KeyMetadata_Description_ToDafny(input.Description), Com_amazonaws_kms_KeyMetadata_KeyUsage_ToDafny(input.KeyUsage), Com_amazonaws_kms_KeyMetadata_KeyState_ToDafny(input.KeyState), Com_amazonaws_kms_KeyMetadata_DeletionDate_ToDafny(input.DeletionDate), Com_amazonaws_kms_KeyMetadata_ValidTo_ToDafny(input.ValidTo), Com_amazonaws_kms_KeyMetadata_Origin_ToDafny(input.Origin), Com_amazonaws_kms_KeyMetadata_CustomKeyStoreId_ToDafny(input.CustomKeyStoreId), Com_amazonaws_kms_KeyMetadata_CloudHsmClusterId_ToDafny(input.CloudHsmClusterId), Com_amazonaws_kms_KeyMetadata_ExpirationModel_ToDafny(input.ExpirationModel), Com_amazonaws_kms_KeyMetadata_KeyManager_ToDafny(input.KeyManager), Com_amazonaws_kms_KeyMetadata_CustomerMasterKeySpec_ToDafny(input.CustomerMasterKeySpec), Com_amazonaws_kms_KeyMetadata_KeySpec_ToDafny(input.KeySpec), Com_amazonaws_kms_KeyMetadata_EncryptionAlgorithms_ToDafny(input.EncryptionAlgorithms), Com_amazonaws_kms_KeyMetadata_SigningAlgorithms_ToDafny(input.SigningAlgorithms), Com_amazonaws_kms_KeyMetadata_KeyAgreementAlgorithms_ToDafny(input.KeyAgreementAlgorithms), Com_amazonaws_kms_KeyMetadata_MultiRegion_ToDafny(input.MultiRegion), Com_amazonaws_kms_KeyMetadata_MultiRegionConfiguration_ToDafny(input.MultiRegionConfiguration), Com_amazonaws_kms_KeyMetadata_PendingDeletionWindowInDays_ToDafny(input.PendingDeletionWindowInDays), Com_amazonaws_kms_KeyMetadata_MacAlgorithms_ToDafny(input.MacAlgorithms), Com_amazonaws_kms_KeyMetadata_XksKeyConfiguration_ToDafny(input.XksKeyConfiguration)))
	}()
}

func Com_amazonaws_kms_DisableKeyRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_DisableKeyRotationRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_DisconnectCustomKeyStoreRequest_CustomKeyStoreId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_EnableKeyRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_EnableKeyRotationRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_EnableKeyRotationRequest_RotationPeriodInDays_ToDafny(input *int32) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_EncryptRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_EncryptRequest_Plaintext_ToDafny(input []byte) dafny.Sequence {
	return func() dafny.Sequence {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return nil
		}
		for _, e := range input {
			v = append(v, e)
		}
		return dafny.SeqFromArray(v, false)
	}()
}

func Com_amazonaws_kms_EncryptRequest_EncryptionContext_ToDafny(input map[string]string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		fieldValue := dafny.NewMapBuilder()
		for key, val := range input {
			fieldValue.Add(Com_amazonaws_kms_EncryptionContextType_key_ToDafny(key), Com_amazonaws_kms_EncryptionContextType_value_ToDafny(val))
		}
		return Wrappers.Companion_Option_.Create_Some_(fieldValue.ToMap())
	}()
}

func Com_amazonaws_kms_EncryptRequest_GrantTokens_ToDafny(input []string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_GrantTokenList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_EncryptRequest_EncryptionAlgorithm_ToDafny(input types.EncryptionAlgorithmSpec) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_EncryptionAlgorithmSpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.EncryptionAlgorithmSpec))
	}()
}

func Com_amazonaws_kms_EncryptRequest_DryRun_ToDafny(input *bool) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_EncryptResponse_CiphertextBlob_ToDafny(input []byte) Wrappers.Option {
	return func() Wrappers.Option {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		for _, e := range input {
			v = append(v, e)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqFromArray(v, false))
	}()
}

func Com_amazonaws_kms_EncryptResponse_KeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_EncryptResponse_EncryptionAlgorithm_ToDafny(input types.EncryptionAlgorithmSpec) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_EncryptionAlgorithmSpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.EncryptionAlgorithmSpec))
	}()
}

func Com_amazonaws_kms_GenerateDataKeyRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_GenerateDataKeyRequest_EncryptionContext_ToDafny(input map[string]string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		fieldValue := dafny.NewMapBuilder()
		for key, val := range input {
			fieldValue.Add(Com_amazonaws_kms_EncryptionContextType_key_ToDafny(key), Com_amazonaws_kms_EncryptionContextType_value_ToDafny(val))
		}
		return Wrappers.Companion_Option_.Create_Some_(fieldValue.ToMap())
	}()
}

func Com_amazonaws_kms_GenerateDataKeyRequest_NumberOfBytes_ToDafny(input *int32) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_GenerateDataKeyRequest_KeySpec_ToDafny(input types.DataKeySpec) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_DataKeySpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.DataKeySpec))
	}()
}

func Com_amazonaws_kms_GenerateDataKeyRequest_GrantTokens_ToDafny(input []string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_GrantTokenList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_GenerateDataKeyRequest_Recipient_ToDafny(input *types.RecipientInfo) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(ComAmazonawsKmsTypes.Companion_RecipientInfo_.Create_RecipientInfo_(Com_amazonaws_kms_RecipientInfo_KeyEncryptionAlgorithm_ToDafny(input.KeyEncryptionAlgorithm), Com_amazonaws_kms_RecipientInfo_AttestationDocument_ToDafny(input.AttestationDocument)))
	}()
}

func Com_amazonaws_kms_GenerateDataKeyRequest_DryRun_ToDafny(input *bool) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_GenerateDataKeyResponse_CiphertextBlob_ToDafny(input []byte) Wrappers.Option {
	return func() Wrappers.Option {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		for _, e := range input {
			v = append(v, e)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqFromArray(v, false))
	}()
}

func Com_amazonaws_kms_GenerateDataKeyResponse_Plaintext_ToDafny(input []byte) Wrappers.Option {
	return func() Wrappers.Option {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		for _, e := range input {
			v = append(v, e)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqFromArray(v, false))
	}()
}

func Com_amazonaws_kms_GenerateDataKeyResponse_KeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_GenerateDataKeyResponse_CiphertextForRecipient_ToDafny(input []byte) Wrappers.Option {
	return func() Wrappers.Option {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		for _, e := range input {
			v = append(v, e)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqFromArray(v, false))
	}()
}

func Com_amazonaws_kms_GenerateDataKeyPairRequest_EncryptionContext_ToDafny(input map[string]string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		fieldValue := dafny.NewMapBuilder()
		for key, val := range input {
			fieldValue.Add(Com_amazonaws_kms_EncryptionContextType_key_ToDafny(key), Com_amazonaws_kms_EncryptionContextType_value_ToDafny(val))
		}
		return Wrappers.Companion_Option_.Create_Some_(fieldValue.ToMap())
	}()
}

func Com_amazonaws_kms_GenerateDataKeyPairRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_GenerateDataKeyPairRequest_KeyPairSpec_ToDafny(input types.DataKeyPairSpec) ComAmazonawsKmsTypes.DataKeyPairSpec {
	return func() ComAmazonawsKmsTypes.DataKeyPairSpec {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				panic("Input value did not found in enum values")
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_DataKeyPairSpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return enum.(ComAmazonawsKmsTypes.DataKeyPairSpec)
	}()
}

func Com_amazonaws_kms_GenerateDataKeyPairRequest_GrantTokens_ToDafny(input []string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_GrantTokenList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_GenerateDataKeyPairRequest_Recipient_ToDafny(input *types.RecipientInfo) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(ComAmazonawsKmsTypes.Companion_RecipientInfo_.Create_RecipientInfo_(Com_amazonaws_kms_RecipientInfo_KeyEncryptionAlgorithm_ToDafny(input.KeyEncryptionAlgorithm), Com_amazonaws_kms_RecipientInfo_AttestationDocument_ToDafny(input.AttestationDocument)))
	}()
}

func Com_amazonaws_kms_GenerateDataKeyPairRequest_DryRun_ToDafny(input *bool) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_GenerateDataKeyPairResponse_PrivateKeyCiphertextBlob_ToDafny(input []byte) Wrappers.Option {
	return func() Wrappers.Option {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		for _, e := range input {
			v = append(v, e)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqFromArray(v, false))
	}()
}

func Com_amazonaws_kms_GenerateDataKeyPairResponse_PrivateKeyPlaintext_ToDafny(input []byte) Wrappers.Option {
	return func() Wrappers.Option {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		for _, e := range input {
			v = append(v, e)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqFromArray(v, false))
	}()
}

func Com_amazonaws_kms_GenerateDataKeyPairResponse_PublicKey_ToDafny(input []byte) Wrappers.Option {
	return func() Wrappers.Option {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		for _, e := range input {
			v = append(v, e)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqFromArray(v, false))
	}()
}

func Com_amazonaws_kms_GenerateDataKeyPairResponse_KeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_GenerateDataKeyPairResponse_KeyPairSpec_ToDafny(input types.DataKeyPairSpec) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_DataKeyPairSpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.DataKeyPairSpec))
	}()
}

func Com_amazonaws_kms_GenerateDataKeyPairResponse_CiphertextForRecipient_ToDafny(input []byte) Wrappers.Option {
	return func() Wrappers.Option {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		for _, e := range input {
			v = append(v, e)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqFromArray(v, false))
	}()
}

func Com_amazonaws_kms_GenerateDataKeyPairWithoutPlaintextRequest_EncryptionContext_ToDafny(input map[string]string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		fieldValue := dafny.NewMapBuilder()
		for key, val := range input {
			fieldValue.Add(Com_amazonaws_kms_EncryptionContextType_key_ToDafny(key), Com_amazonaws_kms_EncryptionContextType_value_ToDafny(val))
		}
		return Wrappers.Companion_Option_.Create_Some_(fieldValue.ToMap())
	}()
}

func Com_amazonaws_kms_GenerateDataKeyPairWithoutPlaintextRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_GenerateDataKeyPairWithoutPlaintextRequest_KeyPairSpec_ToDafny(input types.DataKeyPairSpec) ComAmazonawsKmsTypes.DataKeyPairSpec {
	return func() ComAmazonawsKmsTypes.DataKeyPairSpec {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				panic("Input value did not found in enum values")
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_DataKeyPairSpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return enum.(ComAmazonawsKmsTypes.DataKeyPairSpec)
	}()
}

func Com_amazonaws_kms_GenerateDataKeyPairWithoutPlaintextRequest_GrantTokens_ToDafny(input []string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_GrantTokenList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_GenerateDataKeyPairWithoutPlaintextRequest_DryRun_ToDafny(input *bool) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_GenerateDataKeyPairWithoutPlaintextResponse_PrivateKeyCiphertextBlob_ToDafny(input []byte) Wrappers.Option {
	return func() Wrappers.Option {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		for _, e := range input {
			v = append(v, e)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqFromArray(v, false))
	}()
}

func Com_amazonaws_kms_GenerateDataKeyPairWithoutPlaintextResponse_PublicKey_ToDafny(input []byte) Wrappers.Option {
	return func() Wrappers.Option {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		for _, e := range input {
			v = append(v, e)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqFromArray(v, false))
	}()
}

func Com_amazonaws_kms_GenerateDataKeyPairWithoutPlaintextResponse_KeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_GenerateDataKeyPairWithoutPlaintextResponse_KeyPairSpec_ToDafny(input types.DataKeyPairSpec) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_DataKeyPairSpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.DataKeyPairSpec))
	}()
}

func Com_amazonaws_kms_GenerateDataKeyWithoutPlaintextRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_GenerateDataKeyWithoutPlaintextRequest_EncryptionContext_ToDafny(input map[string]string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		fieldValue := dafny.NewMapBuilder()
		for key, val := range input {
			fieldValue.Add(Com_amazonaws_kms_EncryptionContextType_key_ToDafny(key), Com_amazonaws_kms_EncryptionContextType_value_ToDafny(val))
		}
		return Wrappers.Companion_Option_.Create_Some_(fieldValue.ToMap())
	}()
}

func Com_amazonaws_kms_GenerateDataKeyWithoutPlaintextRequest_KeySpec_ToDafny(input types.DataKeySpec) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_DataKeySpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.DataKeySpec))
	}()
}

func Com_amazonaws_kms_GenerateDataKeyWithoutPlaintextRequest_NumberOfBytes_ToDafny(input *int32) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_GenerateDataKeyWithoutPlaintextRequest_GrantTokens_ToDafny(input []string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_GrantTokenList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_GenerateDataKeyWithoutPlaintextRequest_DryRun_ToDafny(input *bool) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_GenerateDataKeyWithoutPlaintextResponse_CiphertextBlob_ToDafny(input []byte) Wrappers.Option {
	return func() Wrappers.Option {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		for _, e := range input {
			v = append(v, e)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqFromArray(v, false))
	}()
}

func Com_amazonaws_kms_GenerateDataKeyWithoutPlaintextResponse_KeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_GenerateMacRequest_Message_ToDafny(input []byte) dafny.Sequence {
	return func() dafny.Sequence {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return nil
		}
		for _, e := range input {
			v = append(v, e)
		}
		return dafny.SeqFromArray(v, false)
	}()
}

func Com_amazonaws_kms_GenerateMacRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_GenerateMacRequest_MacAlgorithm_ToDafny(input types.MacAlgorithmSpec) ComAmazonawsKmsTypes.MacAlgorithmSpec {
	return func() ComAmazonawsKmsTypes.MacAlgorithmSpec {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				panic("Input value did not found in enum values")
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_MacAlgorithmSpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return enum.(ComAmazonawsKmsTypes.MacAlgorithmSpec)
	}()
}

func Com_amazonaws_kms_GenerateMacRequest_GrantTokens_ToDafny(input []string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_GrantTokenList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_GenerateMacRequest_DryRun_ToDafny(input *bool) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_GenerateMacResponse_Mac_ToDafny(input []byte) Wrappers.Option {
	return func() Wrappers.Option {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		for _, e := range input {
			v = append(v, e)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqFromArray(v, false))
	}()
}

func Com_amazonaws_kms_GenerateMacResponse_MacAlgorithm_ToDafny(input types.MacAlgorithmSpec) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_MacAlgorithmSpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.MacAlgorithmSpec))
	}()
}

func Com_amazonaws_kms_GenerateMacResponse_KeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_GenerateRandomRequest_NumberOfBytes_ToDafny(input *int32) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_GenerateRandomRequest_CustomKeyStoreId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_GenerateRandomRequest_Recipient_ToDafny(input *types.RecipientInfo) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(ComAmazonawsKmsTypes.Companion_RecipientInfo_.Create_RecipientInfo_(Com_amazonaws_kms_RecipientInfo_KeyEncryptionAlgorithm_ToDafny(input.KeyEncryptionAlgorithm), Com_amazonaws_kms_RecipientInfo_AttestationDocument_ToDafny(input.AttestationDocument)))
	}()
}

func Com_amazonaws_kms_GenerateRandomResponse_Plaintext_ToDafny(input []byte) Wrappers.Option {
	return func() Wrappers.Option {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		for _, e := range input {
			v = append(v, e)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqFromArray(v, false))
	}()
}

func Com_amazonaws_kms_GenerateRandomResponse_CiphertextForRecipient_ToDafny(input []byte) Wrappers.Option {
	return func() Wrappers.Option {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		for _, e := range input {
			v = append(v, e)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqFromArray(v, false))
	}()
}

func Com_amazonaws_kms_GetKeyPolicyRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_GetKeyPolicyRequest_PolicyName_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_GetKeyPolicyResponse_Policy_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_GetKeyPolicyResponse_PolicyName_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_GetKeyRotationStatusRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_GetKeyRotationStatusResponse_KeyRotationEnabled_ToDafny(input bool) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(input)
	}()
}

func Com_amazonaws_kms_GetKeyRotationStatusResponse_KeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_GetKeyRotationStatusResponse_RotationPeriodInDays_ToDafny(input *int32) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_GetKeyRotationStatusResponse_NextRotationDate_ToDafny(input *time.Time) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		formattedTime := input.Format("2006-01-02T15:04:05.999999Z")
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(formattedTime))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_GetKeyRotationStatusResponse_OnDemandRotationStartDate_ToDafny(input *time.Time) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		formattedTime := input.Format("2006-01-02T15:04:05.999999Z")
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(formattedTime))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_GetParametersForImportRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_GetParametersForImportRequest_WrappingAlgorithm_ToDafny(input types.AlgorithmSpec) ComAmazonawsKmsTypes.AlgorithmSpec {
	return func() ComAmazonawsKmsTypes.AlgorithmSpec {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				panic("Input value did not found in enum values")
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_AlgorithmSpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return enum.(ComAmazonawsKmsTypes.AlgorithmSpec)
	}()
}

func Com_amazonaws_kms_GetParametersForImportRequest_WrappingKeySpec_ToDafny(input types.WrappingKeySpec) ComAmazonawsKmsTypes.WrappingKeySpec {
	return func() ComAmazonawsKmsTypes.WrappingKeySpec {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				panic("Input value did not found in enum values")
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_WrappingKeySpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return enum.(ComAmazonawsKmsTypes.WrappingKeySpec)
	}()
}

func Com_amazonaws_kms_GetParametersForImportResponse_KeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_GetParametersForImportResponse_ImportToken_ToDafny(input []byte) Wrappers.Option {
	return func() Wrappers.Option {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		for _, e := range input {
			v = append(v, e)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqFromArray(v, false))
	}()
}

func Com_amazonaws_kms_GetParametersForImportResponse_PublicKey_ToDafny(input []byte) Wrappers.Option {
	return func() Wrappers.Option {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		for _, e := range input {
			v = append(v, e)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqFromArray(v, false))
	}()
}

func Com_amazonaws_kms_GetParametersForImportResponse_ParametersValidTo_ToDafny(input *time.Time) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		formattedTime := input.Format("2006-01-02T15:04:05.999999Z")
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(formattedTime))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_GetPublicKeyRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_GetPublicKeyRequest_GrantTokens_ToDafny(input []string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_GrantTokenList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_GetPublicKeyResponse_KeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_GetPublicKeyResponse_PublicKey_ToDafny(input []byte) Wrappers.Option {
	return func() Wrappers.Option {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		for _, e := range input {
			v = append(v, e)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqFromArray(v, false))
	}()
}

func Com_amazonaws_kms_GetPublicKeyResponse_CustomerMasterKeySpec_ToDafny(input types.CustomerMasterKeySpec) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_CustomerMasterKeySpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.CustomerMasterKeySpec))
	}()
}

func Com_amazonaws_kms_GetPublicKeyResponse_KeySpec_ToDafny(input types.KeySpec) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_KeySpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.KeySpec))
	}()
}

func Com_amazonaws_kms_GetPublicKeyResponse_KeyUsage_ToDafny(input types.KeyUsageType) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_KeyUsageType_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.KeyUsageType))
	}()
}

func Com_amazonaws_kms_GetPublicKeyResponse_EncryptionAlgorithms_ToDafny(input []types.EncryptionAlgorithmSpec) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_EncryptionAlgorithmSpecList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_GetPublicKeyResponse_SigningAlgorithms_ToDafny(input []types.SigningAlgorithmSpec) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_SigningAlgorithmSpecList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_GetPublicKeyResponse_KeyAgreementAlgorithms_ToDafny(input []types.KeyAgreementAlgorithmSpec) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_KeyAgreementAlgorithmSpecList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_ImportKeyMaterialRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_ImportKeyMaterialRequest_ImportToken_ToDafny(input []byte) dafny.Sequence {
	return func() dafny.Sequence {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return nil
		}
		for _, e := range input {
			v = append(v, e)
		}
		return dafny.SeqFromArray(v, false)
	}()
}

func Com_amazonaws_kms_ImportKeyMaterialRequest_EncryptedKeyMaterial_ToDafny(input []byte) dafny.Sequence {
	return func() dafny.Sequence {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return nil
		}
		for _, e := range input {
			v = append(v, e)
		}
		return dafny.SeqFromArray(v, false)
	}()
}

func Com_amazonaws_kms_ImportKeyMaterialRequest_ValidTo_ToDafny(input *time.Time) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		formattedTime := input.Format("2006-01-02T15:04:05.999999Z")
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(formattedTime))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ImportKeyMaterialRequest_ExpirationModel_ToDafny(input types.ExpirationModelType) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_ExpirationModelType_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.ExpirationModelType))
	}()
}

func Com_amazonaws_kms_ListAliasesRequest_KeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ListAliasesRequest_Limit_ToDafny(input *int32) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_ListAliasesRequest_Marker_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ListAliasesResponse_Aliases_ToDafny(input []types.AliasListEntry) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_AliasList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_AliasList_member_ToDafny(input types.AliasListEntry) ComAmazonawsKmsTypes.AliasListEntry {
	return func() ComAmazonawsKmsTypes.AliasListEntry {

		return ComAmazonawsKmsTypes.Companion_AliasListEntry_.Create_AliasListEntry_(Com_amazonaws_kms_AliasListEntry_AliasName_ToDafny(input.AliasName), Com_amazonaws_kms_AliasListEntry_AliasArn_ToDafny(input.AliasArn), Com_amazonaws_kms_AliasListEntry_TargetKeyId_ToDafny(input.TargetKeyId), Com_amazonaws_kms_AliasListEntry_CreationDate_ToDafny(input.CreationDate), Com_amazonaws_kms_AliasListEntry_LastUpdatedDate_ToDafny(input.LastUpdatedDate))
	}()
}

func Com_amazonaws_kms_AliasListEntry_AliasName_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_AliasListEntry_AliasArn_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_AliasListEntry_TargetKeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_AliasListEntry_CreationDate_ToDafny(input *time.Time) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		formattedTime := input.Format("2006-01-02T15:04:05.999999Z")
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(formattedTime))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_AliasListEntry_LastUpdatedDate_ToDafny(input *time.Time) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		formattedTime := input.Format("2006-01-02T15:04:05.999999Z")
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(formattedTime))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ListAliasesResponse_NextMarker_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ListAliasesResponse_Truncated_ToDafny(input bool) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(input)
	}()
}

func Com_amazonaws_kms_ListGrantsRequest_Limit_ToDafny(input *int32) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_ListGrantsRequest_Marker_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ListGrantsRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_ListGrantsRequest_GrantId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ListGrantsRequest_GranteePrincipal_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ListGrantsResponse_Grants_ToDafny(input []types.GrantListEntry) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_GrantList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_GrantList_member_ToDafny(input types.GrantListEntry) ComAmazonawsKmsTypes.GrantListEntry {
	return func() ComAmazonawsKmsTypes.GrantListEntry {

		return ComAmazonawsKmsTypes.Companion_GrantListEntry_.Create_GrantListEntry_(Com_amazonaws_kms_GrantListEntry_KeyId_ToDafny(input.KeyId), Com_amazonaws_kms_GrantListEntry_GrantId_ToDafny(input.GrantId), Com_amazonaws_kms_GrantListEntry_Name_ToDafny(input.Name), Com_amazonaws_kms_GrantListEntry_CreationDate_ToDafny(input.CreationDate), Com_amazonaws_kms_GrantListEntry_GranteePrincipal_ToDafny(input.GranteePrincipal), Com_amazonaws_kms_GrantListEntry_RetiringPrincipal_ToDafny(input.RetiringPrincipal), Com_amazonaws_kms_GrantListEntry_IssuingAccount_ToDafny(input.IssuingAccount), Com_amazonaws_kms_GrantListEntry_Operations_ToDafny(input.Operations), Com_amazonaws_kms_GrantListEntry_Constraints_ToDafny(input.Constraints))
	}()
}

func Com_amazonaws_kms_GrantListEntry_KeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_GrantListEntry_GrantId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_GrantListEntry_Name_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_GrantListEntry_CreationDate_ToDafny(input *time.Time) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		formattedTime := input.Format("2006-01-02T15:04:05.999999Z")
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(formattedTime))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_GrantListEntry_GranteePrincipal_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_GrantListEntry_RetiringPrincipal_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_GrantListEntry_IssuingAccount_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_GrantListEntry_Operations_ToDafny(input []types.GrantOperation) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_GrantOperationList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_GrantListEntry_Constraints_ToDafny(input *types.GrantConstraints) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(ComAmazonawsKmsTypes.Companion_GrantConstraints_.Create_GrantConstraints_(Com_amazonaws_kms_GrantConstraints_EncryptionContextSubset_ToDafny(input.EncryptionContextSubset), Com_amazonaws_kms_GrantConstraints_EncryptionContextEquals_ToDafny(input.EncryptionContextEquals)))
	}()
}

func Com_amazonaws_kms_ListGrantsResponse_NextMarker_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ListGrantsResponse_Truncated_ToDafny(input bool) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(input)
	}()
}

func Com_amazonaws_kms_ListKeyPoliciesRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_ListKeyPoliciesRequest_Limit_ToDafny(input *int32) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_ListKeyPoliciesRequest_Marker_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ListKeyPoliciesResponse_PolicyNames_ToDafny(input []string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_PolicyNameList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_PolicyNameList_member_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_ListKeyPoliciesResponse_NextMarker_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ListKeyPoliciesResponse_Truncated_ToDafny(input bool) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(input)
	}()
}

func Com_amazonaws_kms_ListKeyRotationsRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_ListKeyRotationsRequest_Limit_ToDafny(input *int32) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_ListKeyRotationsRequest_Marker_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ListKeyRotationsResponse_Rotations_ToDafny(input []types.RotationsListEntry) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_RotationsList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_RotationsList_member_ToDafny(input types.RotationsListEntry) ComAmazonawsKmsTypes.RotationsListEntry {
	return func() ComAmazonawsKmsTypes.RotationsListEntry {

		return ComAmazonawsKmsTypes.Companion_RotationsListEntry_.Create_RotationsListEntry_(Com_amazonaws_kms_RotationsListEntry_KeyId_ToDafny(input.KeyId), Com_amazonaws_kms_RotationsListEntry_RotationDate_ToDafny(input.RotationDate), Com_amazonaws_kms_RotationsListEntry_RotationType_ToDafny(input.RotationType))
	}()
}

func Com_amazonaws_kms_RotationsListEntry_KeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_RotationsListEntry_RotationDate_ToDafny(input *time.Time) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		formattedTime := input.Format("2006-01-02T15:04:05.999999Z")
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(formattedTime))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_RotationsListEntry_RotationType_ToDafny(input types.RotationType) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_RotationType_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.RotationType))
	}()
}

func Com_amazonaws_kms_ListKeyRotationsResponse_NextMarker_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ListKeyRotationsResponse_Truncated_ToDafny(input bool) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(input)
	}()
}

func Com_amazonaws_kms_ListKeysRequest_Limit_ToDafny(input *int32) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_ListKeysRequest_Marker_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ListKeysResponse_Keys_ToDafny(input []types.KeyListEntry) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_KeyList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_KeyList_member_ToDafny(input types.KeyListEntry) ComAmazonawsKmsTypes.KeyListEntry {
	return func() ComAmazonawsKmsTypes.KeyListEntry {

		return ComAmazonawsKmsTypes.Companion_KeyListEntry_.Create_KeyListEntry_(Com_amazonaws_kms_KeyListEntry_KeyId_ToDafny(input.KeyId), Com_amazonaws_kms_KeyListEntry_KeyArn_ToDafny(input.KeyArn))
	}()
}

func Com_amazonaws_kms_KeyListEntry_KeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_KeyListEntry_KeyArn_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ListKeysResponse_NextMarker_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ListKeysResponse_Truncated_ToDafny(input bool) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(input)
	}()
}

func Com_amazonaws_kms_ListResourceTagsRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_ListResourceTagsRequest_Limit_ToDafny(input *int32) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_ListResourceTagsRequest_Marker_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ListResourceTagsResponse_Tags_ToDafny(input []types.Tag) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_TagList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_ListResourceTagsResponse_NextMarker_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ListResourceTagsResponse_Truncated_ToDafny(input bool) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(input)
	}()
}

func Com_amazonaws_kms_PutKeyPolicyRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_PutKeyPolicyRequest_PolicyName_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_PutKeyPolicyRequest_Policy_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_PutKeyPolicyRequest_BypassPolicyLockoutSafetyCheck_ToDafny(input bool) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(input)
	}()
}

func Com_amazonaws_kms_ReEncryptRequest_CiphertextBlob_ToDafny(input []byte) dafny.Sequence {
	return func() dafny.Sequence {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return nil
		}
		for _, e := range input {
			v = append(v, e)
		}
		return dafny.SeqFromArray(v, false)
	}()
}

func Com_amazonaws_kms_ReEncryptRequest_SourceEncryptionContext_ToDafny(input map[string]string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		fieldValue := dafny.NewMapBuilder()
		for key, val := range input {
			fieldValue.Add(Com_amazonaws_kms_EncryptionContextType_key_ToDafny(key), Com_amazonaws_kms_EncryptionContextType_value_ToDafny(val))
		}
		return Wrappers.Companion_Option_.Create_Some_(fieldValue.ToMap())
	}()
}

func Com_amazonaws_kms_ReEncryptRequest_SourceKeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ReEncryptRequest_DestinationKeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_ReEncryptRequest_DestinationEncryptionContext_ToDafny(input map[string]string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		fieldValue := dafny.NewMapBuilder()
		for key, val := range input {
			fieldValue.Add(Com_amazonaws_kms_EncryptionContextType_key_ToDafny(key), Com_amazonaws_kms_EncryptionContextType_value_ToDafny(val))
		}
		return Wrappers.Companion_Option_.Create_Some_(fieldValue.ToMap())
	}()
}

func Com_amazonaws_kms_ReEncryptRequest_SourceEncryptionAlgorithm_ToDafny(input types.EncryptionAlgorithmSpec) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_EncryptionAlgorithmSpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.EncryptionAlgorithmSpec))
	}()
}

func Com_amazonaws_kms_ReEncryptRequest_DestinationEncryptionAlgorithm_ToDafny(input types.EncryptionAlgorithmSpec) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_EncryptionAlgorithmSpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.EncryptionAlgorithmSpec))
	}()
}

func Com_amazonaws_kms_ReEncryptRequest_GrantTokens_ToDafny(input []string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_GrantTokenList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_ReEncryptRequest_DryRun_ToDafny(input *bool) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_ReEncryptResponse_CiphertextBlob_ToDafny(input []byte) Wrappers.Option {
	return func() Wrappers.Option {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		for _, e := range input {
			v = append(v, e)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqFromArray(v, false))
	}()
}

func Com_amazonaws_kms_ReEncryptResponse_SourceKeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ReEncryptResponse_KeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ReEncryptResponse_SourceEncryptionAlgorithm_ToDafny(input types.EncryptionAlgorithmSpec) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_EncryptionAlgorithmSpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.EncryptionAlgorithmSpec))
	}()
}

func Com_amazonaws_kms_ReEncryptResponse_DestinationEncryptionAlgorithm_ToDafny(input types.EncryptionAlgorithmSpec) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_EncryptionAlgorithmSpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.EncryptionAlgorithmSpec))
	}()
}

func Com_amazonaws_kms_ReplicateKeyRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_ReplicateKeyRequest_ReplicaRegion_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_ReplicateKeyRequest_Policy_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ReplicateKeyRequest_BypassPolicyLockoutSafetyCheck_ToDafny(input bool) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(input)
	}()
}

func Com_amazonaws_kms_ReplicateKeyRequest_Description_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ReplicateKeyRequest_Tags_ToDafny(input []types.Tag) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_TagList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_ReplicateKeyResponse_ReplicaKeyMetadata_ToDafny(input *types.KeyMetadata) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(ComAmazonawsKmsTypes.Companion_KeyMetadata_.Create_KeyMetadata_(Com_amazonaws_kms_KeyMetadata_AWSAccountId_ToDafny(input.AWSAccountId), Com_amazonaws_kms_KeyMetadata_KeyId_ToDafny(input.KeyId), Com_amazonaws_kms_KeyMetadata_Arn_ToDafny(input.Arn), Com_amazonaws_kms_KeyMetadata_CreationDate_ToDafny(input.CreationDate), Com_amazonaws_kms_KeyMetadata_Enabled_ToDafny(input.Enabled), Com_amazonaws_kms_KeyMetadata_Description_ToDafny(input.Description), Com_amazonaws_kms_KeyMetadata_KeyUsage_ToDafny(input.KeyUsage), Com_amazonaws_kms_KeyMetadata_KeyState_ToDafny(input.KeyState), Com_amazonaws_kms_KeyMetadata_DeletionDate_ToDafny(input.DeletionDate), Com_amazonaws_kms_KeyMetadata_ValidTo_ToDafny(input.ValidTo), Com_amazonaws_kms_KeyMetadata_Origin_ToDafny(input.Origin), Com_amazonaws_kms_KeyMetadata_CustomKeyStoreId_ToDafny(input.CustomKeyStoreId), Com_amazonaws_kms_KeyMetadata_CloudHsmClusterId_ToDafny(input.CloudHsmClusterId), Com_amazonaws_kms_KeyMetadata_ExpirationModel_ToDafny(input.ExpirationModel), Com_amazonaws_kms_KeyMetadata_KeyManager_ToDafny(input.KeyManager), Com_amazonaws_kms_KeyMetadata_CustomerMasterKeySpec_ToDafny(input.CustomerMasterKeySpec), Com_amazonaws_kms_KeyMetadata_KeySpec_ToDafny(input.KeySpec), Com_amazonaws_kms_KeyMetadata_EncryptionAlgorithms_ToDafny(input.EncryptionAlgorithms), Com_amazonaws_kms_KeyMetadata_SigningAlgorithms_ToDafny(input.SigningAlgorithms), Com_amazonaws_kms_KeyMetadata_KeyAgreementAlgorithms_ToDafny(input.KeyAgreementAlgorithms), Com_amazonaws_kms_KeyMetadata_MultiRegion_ToDafny(input.MultiRegion), Com_amazonaws_kms_KeyMetadata_MultiRegionConfiguration_ToDafny(input.MultiRegionConfiguration), Com_amazonaws_kms_KeyMetadata_PendingDeletionWindowInDays_ToDafny(input.PendingDeletionWindowInDays), Com_amazonaws_kms_KeyMetadata_MacAlgorithms_ToDafny(input.MacAlgorithms), Com_amazonaws_kms_KeyMetadata_XksKeyConfiguration_ToDafny(input.XksKeyConfiguration)))
	}()
}

func Com_amazonaws_kms_ReplicateKeyResponse_ReplicaPolicy_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ReplicateKeyResponse_ReplicaTags_ToDafny(input []types.Tag) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_TagList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_RetireGrantRequest_GrantToken_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_RetireGrantRequest_KeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_RetireGrantRequest_GrantId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_RetireGrantRequest_DryRun_ToDafny(input *bool) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_RevokeGrantRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_RevokeGrantRequest_GrantId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_RevokeGrantRequest_DryRun_ToDafny(input *bool) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_RotateKeyOnDemandRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_RotateKeyOnDemandResponse_KeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ScheduleKeyDeletionRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_ScheduleKeyDeletionRequest_PendingWindowInDays_ToDafny(input *int32) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_ScheduleKeyDeletionResponse_KeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ScheduleKeyDeletionResponse_DeletionDate_ToDafny(input *time.Time) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		formattedTime := input.Format("2006-01-02T15:04:05.999999Z")
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(formattedTime))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ScheduleKeyDeletionResponse_KeyState_ToDafny(input types.KeyState) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_KeyState_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.KeyState))
	}()
}

func Com_amazonaws_kms_ScheduleKeyDeletionResponse_PendingWindowInDays_ToDafny(input *int32) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_SignRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_SignRequest_Message_ToDafny(input []byte) dafny.Sequence {
	return func() dafny.Sequence {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return nil
		}
		for _, e := range input {
			v = append(v, e)
		}
		return dafny.SeqFromArray(v, false)
	}()
}

func Com_amazonaws_kms_SignRequest_MessageType_ToDafny(input types.MessageType) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_MessageType_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.MessageType))
	}()
}

func Com_amazonaws_kms_SignRequest_GrantTokens_ToDafny(input []string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_GrantTokenList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_SignRequest_SigningAlgorithm_ToDafny(input types.SigningAlgorithmSpec) ComAmazonawsKmsTypes.SigningAlgorithmSpec {
	return func() ComAmazonawsKmsTypes.SigningAlgorithmSpec {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				panic("Input value did not found in enum values")
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_SigningAlgorithmSpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return enum.(ComAmazonawsKmsTypes.SigningAlgorithmSpec)
	}()
}

func Com_amazonaws_kms_SignRequest_DryRun_ToDafny(input *bool) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_SignResponse_KeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_SignResponse_Signature_ToDafny(input []byte) Wrappers.Option {
	return func() Wrappers.Option {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		for _, e := range input {
			v = append(v, e)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqFromArray(v, false))
	}()
}

func Com_amazonaws_kms_SignResponse_SigningAlgorithm_ToDafny(input types.SigningAlgorithmSpec) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_SigningAlgorithmSpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.SigningAlgorithmSpec))
	}()
}

func Com_amazonaws_kms_TagResourceRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_TagResourceRequest_Tags_ToDafny(input []types.Tag) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_TagList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return dafny.SeqOf(fieldValue...)
	}()
}

func Com_amazonaws_kms_UntagResourceRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_UntagResourceRequest_TagKeys_ToDafny(input []string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_TagKeyList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return dafny.SeqOf(fieldValue...)
	}()
}

func Com_amazonaws_kms_TagKeyList_member_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_UpdateAliasRequest_AliasName_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_UpdateAliasRequest_TargetKeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_UpdateCustomKeyStoreRequest_CustomKeyStoreId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_UpdateCustomKeyStoreRequest_NewCustomKeyStoreName_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_UpdateCustomKeyStoreRequest_KeyStorePassword_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_UpdateCustomKeyStoreRequest_CloudHsmClusterId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_UpdateCustomKeyStoreRequest_XksProxyUriEndpoint_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_UpdateCustomKeyStoreRequest_XksProxyUriPath_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_UpdateCustomKeyStoreRequest_XksProxyVpcEndpointServiceName_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_UpdateCustomKeyStoreRequest_XksProxyAuthenticationCredential_ToDafny(input *types.XksProxyAuthenticationCredentialType) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(ComAmazonawsKmsTypes.Companion_XksProxyAuthenticationCredentialType_.Create_XksProxyAuthenticationCredentialType_(Com_amazonaws_kms_XksProxyAuthenticationCredentialType_AccessKeyId_ToDafny(input.AccessKeyId), Com_amazonaws_kms_XksProxyAuthenticationCredentialType_RawSecretAccessKey_ToDafny(input.RawSecretAccessKey)))
	}()
}

func Com_amazonaws_kms_UpdateCustomKeyStoreRequest_XksProxyConnectivity_ToDafny(input types.XksProxyConnectivityType) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_XksProxyConnectivityType_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.XksProxyConnectivityType))
	}()
}

func Com_amazonaws_kms_UpdateKeyDescriptionRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_UpdateKeyDescriptionRequest_Description_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_UpdatePrimaryRegionRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_UpdatePrimaryRegionRequest_PrimaryRegion_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_VerifyRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_VerifyRequest_Message_ToDafny(input []byte) dafny.Sequence {
	return func() dafny.Sequence {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return nil
		}
		for _, e := range input {
			v = append(v, e)
		}
		return dafny.SeqFromArray(v, false)
	}()
}

func Com_amazonaws_kms_VerifyRequest_MessageType_ToDafny(input types.MessageType) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_MessageType_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.MessageType))
	}()
}

func Com_amazonaws_kms_VerifyRequest_Signature_ToDafny(input []byte) dafny.Sequence {
	return func() dafny.Sequence {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return nil
		}
		for _, e := range input {
			v = append(v, e)
		}
		return dafny.SeqFromArray(v, false)
	}()
}

func Com_amazonaws_kms_VerifyRequest_SigningAlgorithm_ToDafny(input types.SigningAlgorithmSpec) ComAmazonawsKmsTypes.SigningAlgorithmSpec {
	return func() ComAmazonawsKmsTypes.SigningAlgorithmSpec {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				panic("Input value did not found in enum values")
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_SigningAlgorithmSpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return enum.(ComAmazonawsKmsTypes.SigningAlgorithmSpec)
	}()
}

func Com_amazonaws_kms_VerifyRequest_GrantTokens_ToDafny(input []string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_GrantTokenList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_VerifyRequest_DryRun_ToDafny(input *bool) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_VerifyResponse_KeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_VerifyResponse_SignatureValid_ToDafny(input bool) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(input)
	}()
}

func Com_amazonaws_kms_VerifyResponse_SigningAlgorithm_ToDafny(input types.SigningAlgorithmSpec) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_SigningAlgorithmSpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.SigningAlgorithmSpec))
	}()
}

func Com_amazonaws_kms_VerifyMacRequest_Message_ToDafny(input []byte) dafny.Sequence {
	return func() dafny.Sequence {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return nil
		}
		for _, e := range input {
			v = append(v, e)
		}
		return dafny.SeqFromArray(v, false)
	}()
}

func Com_amazonaws_kms_VerifyMacRequest_KeyId_ToDafny(input *string) dafny.Sequence {
	return func() dafny.Sequence {
		if input == nil {
			return nil
		}
		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Com_amazonaws_kms_VerifyMacRequest_MacAlgorithm_ToDafny(input types.MacAlgorithmSpec) ComAmazonawsKmsTypes.MacAlgorithmSpec {
	return func() ComAmazonawsKmsTypes.MacAlgorithmSpec {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				panic("Input value did not found in enum values")
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_MacAlgorithmSpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return enum.(ComAmazonawsKmsTypes.MacAlgorithmSpec)
	}()
}

func Com_amazonaws_kms_VerifyMacRequest_Mac_ToDafny(input []byte) dafny.Sequence {
	return func() dafny.Sequence {
		v := make([]interface{}, 0, len(input))
		if input == nil {
			return nil
		}
		for _, e := range input {
			v = append(v, e)
		}
		return dafny.SeqFromArray(v, false)
	}()
}

func Com_amazonaws_kms_VerifyMacRequest_GrantTokens_ToDafny(input []string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Com_amazonaws_kms_GrantTokenList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Com_amazonaws_kms_VerifyMacRequest_DryRun_ToDafny(input *bool) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func Com_amazonaws_kms_VerifyMacResponse_KeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_VerifyMacResponse_MacValid_ToDafny(input bool) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(input)
	}()
}

func Com_amazonaws_kms_VerifyMacResponse_MacAlgorithm_ToDafny(input types.MacAlgorithmSpec) Wrappers.Option {
	return func() Wrappers.Option {
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				return Wrappers.Companion_Option_.Create_None_()
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(ComAmazonawsKmsTypes.CompanionStruct_MacAlgorithmSpec_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(ComAmazonawsKmsTypes.MacAlgorithmSpec))
	}()
}

func Com_amazonaws_kms_AlreadyExistsException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_CloudHsmClusterInUseException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_CloudHsmClusterInvalidConfigurationException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_CloudHsmClusterNotActiveException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_CloudHsmClusterNotFoundException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_CloudHsmClusterNotRelatedException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ConflictException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_CustomKeyStoreHasCMKsException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_CustomKeyStoreInvalidStateException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_CustomKeyStoreNameInUseException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_CustomKeyStoreNotFoundException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_DependencyTimeoutException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_DisabledException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_DryRunOperationException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_ExpiredImportTokenException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_IncorrectKeyException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_IncorrectKeyMaterialException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_IncorrectTrustAnchorException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_InvalidAliasNameException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_InvalidArnException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_InvalidCiphertextException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_InvalidGrantIdException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_InvalidGrantTokenException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_InvalidImportTokenException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_InvalidKeyUsageException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_InvalidMarkerException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_KeyUnavailableException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_KMSInternalException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_KMSInvalidMacException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_KMSInvalidSignatureException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_KMSInvalidStateException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_LimitExceededException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_MalformedPolicyDocumentException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_NotFoundException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_TagException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_UnsupportedOperationException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_XksKeyAlreadyInUseException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_XksKeyInvalidConfigurationException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_XksKeyNotFoundException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_XksProxyIncorrectAuthenticationCredentialException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_XksProxyInvalidConfigurationException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_XksProxyInvalidResponseException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_XksProxyUriEndpointInUseException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_XksProxyUriInUseException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_XksProxyUriUnreachableException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_XksProxyVpcEndpointServiceInUseException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_XksProxyVpcEndpointServiceInvalidConfigurationException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Com_amazonaws_kms_XksProxyVpcEndpointServiceNotFoundException_message_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}
