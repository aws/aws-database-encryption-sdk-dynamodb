# This workflow performs tests in Go with nightly latest versions for mpl or esdk.
name: Library Go Backwards Interop Tests

on:
  workflow_call:
    inputs:
      mpl-dafny:
        description: "The Dafny version to compile the MPL with (4.2.0, dafny-nightly, etc..)"
        required: true
        type: string
      mpl-commit:
        description: "The MPL commit to use"
        required: false
        default: "main"
        type: string
      dbesdk-dafny:
        description: "The Dafny version to compile the DBESDK with (4.2.0, dafny-nightly, etc..)"
        required: true
        type: string

jobs:
  testGo:
    strategy:
      fail-fast: false
      matrix:
        library: [TestVectors]
        os: [ubuntu-22.04, macos-13]
        go-version: ["1.23", "1.24"]
    runs-on: ${{ matrix.os }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Setup Docker
        if: matrix.os == 'macos-13' && matrix.library == 'TestVectors'
        uses: douglascamata/setup-docker-macos-action@v1-alpha

      - name: Setup DynamoDB Local
        if: matrix.library == 'TestVectors'
        uses: rrainn/dynamodb-action@v4.0.0
        with:
          port: 8000
          cors: "*"

      - name: Support longpaths
        run: |
          git config --global core.longpaths true

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::370957321024:role/GitHub-CI-DDBEC-Dafny-Role-us-west-2
          role-session-name: DDBEC-Dafny-Java-Tests

      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup MPL Dafny
        uses: ./submodules/MaterialProviders/.github/actions/setup_dafny
        with:
          dafny-version: ${{ inputs.mpl-dafny }}

      - name: Create temporary global.json
        run: echo '{"sdk":{"rollForward":"latestFeature","version":"6.0.0"}}' > ./global.json

      - name: Setup Java 17 for codegen
        uses: actions/setup-java@v3
        with:
          distribution: "corretto"
          java-version: "17"

      - name: Update MPL submodule
        working-directory: mpl
        run: |
          git fetch
          git checkout ${{inputs.mpl-commit}}
          git pull
          git submodule update --init --recursive
          git rev-parse HEAD

      - uses: actions/checkout@v3
      - name: Init Submodules
        shell: bash
        run: |
          git submodule update --init --recursive submodules/smithy-dafny
          git submodule update --init --recursive submodules/MaterialProviders

      - name: Install Smithy-Dafny codegen dependencies
        uses: ./.github/actions/install_smithy_dafny_codegen_dependencies

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install Go imports
        shell: bash
        run: |
          go install golang.org/x/tools/cmd/goimports@latest

      - name: Compile MPL with Dafny ${{inputs.mpl-dafny}}
        shell: bash
        working-directory: submodules/MaterialProviders/TestVectorsAwsCryptographicMaterialProviders
        run: |
          # This works because `node` is installed by default on GHA runners
          CORES=$(node -e 'console.log(os.cpus().length)')
          make transpile_go CORES=$CORES

      - name: Setup DBESDK Dafny
        uses: ./submodules/MaterialProviders/.github/actions/setup_dafny
        with:
          dafny-version: ${{ inputs.dbesdk-dafny}}

      - name: Build DBESDK implementation
        shell: bash
        working-directory: ./${{ matrix.library }}
        run: |
          # This works because `node` is installed by default on GHA runners
          CORES=$(node -e 'console.log(os.cpus().length)')
          make transpile_go CORES=$CORES

      - name: Test ${{ matrix.library }}
        working-directory: ./${{ matrix.library }}
        run: |
          make test_go
