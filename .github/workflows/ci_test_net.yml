# This workflow performs tests in .NET.
name: test dotnet

on: 
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:
    # Manual trigger for this workflow, either the normal version
    # or the nightly build that uses the latest Dafny prerelease
    # (accordingly to the "nightly" parameter).
    inputs:
      nightly:
        description: 'Run the nightly build'
        required: false
        type: boolean
  schedule:
    # Nightly build against Dafny's nightly prereleases,
    # for early warning of verification issues or regressions.
    # Timing chosen to be adequately after Dafny's own nightly build,
    # but this might need to be tweaked:
    # https://github.com/dafny-lang/dafny/blob/master/.github/workflows/deep-tests.yml#L16
    - cron: "30 16 * * *"

jobs:
  testDotNet:
    # Don't run the nightly build on forks
    if: github.event_name != 'schedule' || github.repository_owner == 'awslabs'
    strategy:
      matrix:
        library: [
          # Reintroduce once MPL builds with .NET
          # DynamoDbEncryption,
        ]
        dotnet-version: [ '6.0.x' ]
        os: [
          # TODO windows-latest,
          # ubuntu-latest,
          macos-latest,
        ]
    runs-on: ${{ matrix.os }}
    environment: "MPL CI"
    permissions:
      id-token: write
      contents: read
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_NOLOGO: 1
    steps:
      - uses: actions/checkout@v3

      - name: Init Submodules
        env:
          # This secret is in the configured environment
          # Token created on # 05/12/2023
          # expires in ~30 days 05/22/2023
          MPL_PAT: ${{ secrets.MPL_PAT }}
        run: |
          AUTH="$(echo -n "pat:${MPL_PAT}" | base64 | tr -d '\n')"
          git config --global http.https://github.com/.extraheader "AUTHORIZATION: basic $AUTH"
          git config --global --add url.https://github.com/.insteadOf git@github.com:
          git submodule update --init --recursive submodules/MaterialProviders

      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Setup Dafny
        uses: dafny-lang/setup-dafny-action@v1.6.1
        with:
          # A && B || C is the closest thing to an if .. then ... else ... or ?: expression the GitHub Actions syntax supports.
          dafny-version: ${{ (github.event_name == 'schedule' || inputs.nightly) && 'nightly-latest' || 'nightly-2023-04-12-f4836e9' }}

      - name: Download Dependencies 
        working-directory: ./${{ matrix.library }}
        run: make setup_net

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::370957321024:role/GitHub-CI-DDBEC-Dafny-Role-us-west-2
          role-session-name: DDBEC-Dafny-Net-Tests

      - name: Compile ${{ matrix.library }} implementation
        shell: bash
        working-directory: ./${{ matrix.library }}
        run: |
          # This works because `node` is installed by default on GHA runners
          CORES=$(node -e 'console.log(os.cpus().length)')
          make transpile_net CORES=$CORES
      - name: Test ${{ matrix.library }}
        working-directory: ./${{ matrix.library }}
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "macOS" ]; then
            make test_net_mac_intel
          else
            make test_net
          fi
