# This workflow performs tests in Java.
name: Java Examples

on: 
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:
    # Manual trigger for this workflow, either the normal version
    # or the nightly build that uses the latest Dafny prerelease
    # (accordingly to the "nightly" parameter).
    inputs:
      nightly:
        description: 'Run the nightly build'
        required: false
        type: boolean
  schedule:
    # Nightly build against Dafny's nightly prereleases,
    # for early warning of verification issues or regressions.
    # Timing chosen to be adequately after Dafny's own nightly build,
    # but this might need to be tweaked:
    # https://github.com/dafny-lang/dafny/blob/master/.github/workflows/deep-tests.yml#L16
    - cron: "30 16 * * *"

jobs:
  testJava:
    # Don't run the nightly build on forks
    if: github.event_name != 'schedule' || github.repository_owner == 'awslabs'
    strategy:
      max-parallel: 1 # TODO: Fix jobs failing when running in parallel
      matrix:
        os: [
          # TODO just test on mac for now
          #windows-latest,
          #ubuntu-latest,
          macos-latest
        ]
    runs-on: ${{ matrix.os }}
    environment: "MPL CI"
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::370957321024:role/GitHub-CI-DDBEC-Dafny-Role-us-west-2
          role-session-name: DDBEC-Dafny-Java-Tests

      - uses: actions/checkout@v3

      - name: Init Submodules
        env:
          # This secret is in the configured environment
          # Token created on # 05/12/2023
          # expires in ~30 days 05/22/2023
          MPL_PAT: ${{ secrets.MPL_PAT }}
        run: |
          AUTH="$(echo -n "pat:${MPL_PAT}" | base64 | tr -d '\n')"
          git config --global http.https://github.com/.extraheader "AUTHORIZATION: basic $AUTH"
          git config --global --add url.https://github.com/.insteadOf git@github.com:
          git submodule update --init --recursive submodules/MaterialProviders

      # Set up env vars for CodeArtifact
      # Necessary to build and deploy dependencies for examples locally
      - name: Set Up Env Vars for CodeArtifact
        run: |
          export URL=`aws codeartifact get-repository-endpoint \
            --domain github-polymorph \
            --domain-owner "370957321024" \
            --repository DafnyJavaConversion \
            --format maven | jq -r .repositoryEndpoint`
          export TOKEN=`aws codeartifact get-authorization-token \
            --domain github-polymorph \
            --domain-owner "370957321024" \
            --query authorizationToken \
            --output text`
          echo "CODEARTIFACT_URL_JAVA_CONVERSION=$URL" >> $GITHUB_ENV
          echo "CODEARTIFACT_AUTH_TOKEN=$TOKEN" >> $GITHUB_ENV

      - name: Setup Java 8 
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 8

      - name: Setup Dafny
        uses: dafny-lang/setup-dafny-action@v1.6.1
        with:
          # A && B || C is the closest thing to an if .. then ... else ... or ?: expression the GitHub Actions syntax supports.
          dafny-version: ${{ (github.event_name == 'schedule' || inputs.nightly) && 'nightly-latest' || '4.1.0' }}

      - name: Build and locally deploy dependencies for examples
        shell: bash
        working-directory: ./DynamoDbEncryption
        run: |
          # This works because `node` is installed by default on GHA runners
          CORES=$(node -e 'console.log(os.cpus().length)')
          # This will recursively build and deploy MPL as well
          make build_java CORES=$CORES
          make mvn_local_deploy

      - name: Test Java 8 Examples
        working-directory: ./Examples
        run: |
          # Run simple examples
          gradle -p runtimes/java/DynamoDbEncryption test 
          # Run migration examples
          gradle -p runtimes/java/Migration/AWSDBE test
          gradle -p runtimes/java/Migration/DDBEC test

      - name: Setup Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 11

      - name: Clean Examples for next Java
        working-directory: ./Examples
        run: |
          # Run simple examples
          gradle -p runtimes/java/DynamoDbEncryption clean
          # Run migration examples
          gradle -p runtimes/java/Migration/AWSDBE clean
          gradle -p runtimes/java/Migration/DDBEC clean
          
      - name: Test Java 11 Examples
        working-directory: ./Examples
        run: |
          # Run simple examples
          gradle -p runtimes/java/DynamoDbEncryption test 
          # Run migration examples
          gradle -p runtimes/java/Migration/AWSDBE test
          gradle -p runtimes/java/Migration/DDBEC test

      - name: Setup Java 16
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 16

      - name: Clean Examples for next Java
        working-directory: ./Examples
        run: |
          # Run simple examples
          gradle -p runtimes/java/DynamoDbEncryption clean
          # Run migration examples
          gradle -p runtimes/java/Migration/AWSDBE clean
          gradle -p runtimes/java/Migration/DDBEC clean
          
      - name: Test Java 16 Examples
        working-directory: ./Examples
        run: |
          # Run simple examples
          gradle -p runtimes/java/DynamoDbEncryption test 
          # Run migration examples
          gradle -p runtimes/java/Migration/AWSDBE test
          gradle -p runtimes/java/Migration/DDBEC test

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17

      - name: Clean Examples for next Java
        working-directory: ./Examples
        run: |
          # Run simple examples
          gradle -p runtimes/java/DynamoDbEncryption clean
          # Run migration examples
          gradle -p runtimes/java/Migration/AWSDBE clean
          gradle -p runtimes/java/Migration/DDBEC clean
          
      - name: Test Java 17 Examples
        working-directory: ./Examples
        run: |
          # Run simple examples
          gradle -p runtimes/java/DynamoDbEncryption test 
          # Run migration examples
          gradle -p runtimes/java/Migration/AWSDBE test
          gradle -p runtimes/java/Migration/DDBEC test
