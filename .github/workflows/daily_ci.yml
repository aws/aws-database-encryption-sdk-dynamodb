# This workflow runs every weekday at 16:00 UTC (9AM PDT)
name: Daily CI

on:
  schedule:
    - cron: "00 16 * * 1-5"

jobs:
  getVersion:
    # Don't run the cron builds on forks
    if: github.event_name != 'schedule' || github.repository_owner == 'aws'
    uses: ./.github/workflows/dafny_version.yml
  getVerifyVersion:
    if: github.event_name != 'schedule' || github.repository_owner == 'aws'
    uses: ./.github/workflows/dafny_verify_version.yml
  daily-ci-format:
    needs: getVersion
    if: github.event_name != 'schedule' || github.repository_owner == 'aws'
    uses: ./.github/workflows/library_format.yml
    with:
      dafny: ${{needs.getVersion.outputs.version}}
  daily-ci-codegen:
    needs: getVersion
    if: github.event_name != 'schedule' || github.repository_owner == 'aws'
    uses: ./.github/workflows/ci_codegen.yml
    with:
      dafny: ${{needs.getVersion.outputs.version}}
  daily-ci-verification:
    needs: getVerifyVersion
    if: github.event_name != 'schedule' || github.repository_owner == 'aws'
    uses: ./.github/workflows/library_dafny_verification.yml
    with:
      dafny: ${{needs.getVerifyVersion.outputs.version}}
  daily-ci-test-vector-verification:
    needs: getVerifyVersion
    uses: ./.github/workflows/test_vector_verification.yml
    with:
      dafny: ${{needs.getVerifyVersion.outputs.version}}
  daily-ci-java:
    needs: getVersion
    uses: ./.github/workflows/ci_test_java.yml
    with:
      dafny: ${{needs.getVersion.outputs.version}}
  daily-ci-java-test-vectors:
    needs: getVersion
    uses: ./.github/workflows/ci_test_vector_java.yml
    with:
      dafny: ${{needs.getVersion.outputs.version}}
  daily-ci-java-examples:
    needs: getVersion
    uses: ./.github/workflows/ci_examples_java.yml
    with:
      dafny: ${{needs.getVersion.outputs.version}}
  daily-ci-net:
    needs: getVersion
    uses: ./.github/workflows/ci_test_net.yml
    with:
      dafny: ${{needs.getVersion.outputs.version}}
  daily-ci-rust:
    needs: getVersion
    uses: ./.github/workflows/library_rust_tests.yml
    with:
      dafny: ${{needs.getVersion.outputs.version}}
  daily-ci-python:
    needs: getVersion
    uses: ./.github/workflows/ci_test_python.yml
    with:
      dafny: ${{needs.getVersion.outputs.version}}
  daily-ci-python-examples:
    needs: getVersion
    uses: ./.github/workflows/ci_examples_python.yml
    with:
      dafny: ${{needs.getVersion.outputs.version}}
  daily-ci-python-test-vectors:
    needs: getVersion
    uses: ./.github/workflows/ci_test_vector_python.yml
    with:
      dafny: ${{needs.getVersion.outputs.version}}
  daily-ci-python-static-analysis:
    needs: getVersion
    uses: ./.github/workflows/ci_static_analysis_python.yml
    with:
      dafny: ${{needs.getVersion.outputs.version}}
  daily-ci-go:
    needs: getVersion
    uses: ./.github/workflows/ci_test_go.yml
    with:
      dafny: ${{needs.getVersion.outputs.version}}
  daily-ci-net-test-vectors:
    needs: getVersion
    uses: ./.github/workflows/ci_test_vector_net.yml
    with:
      dafny: ${{needs.getVersion.outputs.version}}
  daily-ci-net-examples:
    needs: getVersion
    uses: ./.github/workflows/ci_examples_net.yml
    with:
      dafny: ${{needs.getVersion.outputs.version}}
  notify:
    needs:
      [
        # TODO: Update the Python Workflows
        getVersion,
        getVerifyVersion,
        daily-ci-format,
        daily-ci-codegen,
        daily-ci-verification,
        daily-ci-test-vector-verification,
        daily-ci-java,
        daily-ci-java-test-vectors,
        daily-ci-java-examples,
        daily-ci-net,
        daily-ci-rust,
        daily-ci-go,
        daily-ci-net-test-vectors,
        daily-ci-net-examples,
      ]
    if: ${{ failure() }}
    uses: aws/aws-cryptographic-material-providers-library/.github/workflows/slack-notification.yml@main
    with:
      message: "Daily CI failed on `${{ github.repository }}`. View run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_CI }}
