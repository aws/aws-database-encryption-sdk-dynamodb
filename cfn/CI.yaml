AWSTemplateFormatVersion: "2010-09-09"
Description: "DDB Table and IAM Managed Policies/Role for DynamoDbEncryption testing"

Parameters:
  TableName:
    Type: String
    Description: Test Table Name
    Default: DynamoDbEncryptionInterceptorTestTable
  ProjectName:
    Type: String
    Description: A prefix that will be applied to any names
    Default: DDBEC-Dafny
  GitHubRepo:
    Type: String
    Description: GitHub Repo that invokes CI
    Default: awslabs/aws-dynamodb-encryption-dafny

Resources:
  TestTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "partition_key"
          AttributeType: "S"
        - AttributeName: "sort_key"
          AttributeType: "N"
      KeySchema:
        - AttributeName: "partition_key"
          KeyType: "HASH"
        - AttributeName: "sort_key"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      TableName: !Ref TableName

  # This policy SHOULD be given to:
  #  - awslabs/aws-dynamodb-encryption-dafny
  #  - ToolsDevelopment
  TestTableUsage:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Description: "Allow Read, Write, and Delete of Items in Test Table"
      ManagedPolicyName: !Sub "${ProjectName}-DDB-ReadWriteDelete-${AWS::Region}"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:PutItem
              - dynamodb:DeleteItem
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:Query
              - dynamodb:UpdateItem
            Resource:
              - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TableName}"
              - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TableName}/index/*"

  KMSUsage:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      ManagedPolicyName: !Sub "${ProjectName}-KMS-${AWS::Region}"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:GenerateDataKey
            Resource:
              - !Sub "arn:aws:kms:*:658956600833:key/*"
              - !Sub "arn:aws:kms:*:658956600833:alias/*"

  GitHubCIRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub "GitHub-CI-${ProjectName}-Role-${AWS::Region}"
      Description: "Access DDB, KMS, & CA Resources for CI from GitHub"
      ManagedPolicyArns:
        - Fn::ImportValue: "Polymorph-CA-GitHubCAReadPolicyArn"
        - !Ref KMSUsage
        - !Ref TestTableUsage
      AssumeRolePolicyDocument: !Sub |
        {
          "Version": "2012-10-17",   
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": { "Federated": "arn:aws:iam::${AWS::AccountId}:oidc-provider/token.actions.githubusercontent.com" },
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "token.actions.githubusercontent.com:aud": "sts.amazonaws.com"
                },
                "StringLike": {
                  "token.actions.githubusercontent.com:sub": "repo:${GitHubRepo}:*"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": { "AWS": "arn:aws:iam::${AWS::AccountId}:role/ToolsDevelopment" },
              "Action": "sts:AssumeRole"
            }
          ]
        }
