// Code generated by smithy-go-codegen DO NOT EDIT.

package awscryptographydbencryptionsdkdynamodbsmithygenerated

import (
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/dynamodb/comamazonawsdynamodbsmithygenerated"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/mpl/AwsCryptographyKeyStoreTypes"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/mpl/AwsCryptographyMaterialProvidersTypes"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/mpl/awscryptographykeystoresmithygenerated"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/mpl/awscryptographykeystoresmithygeneratedtypes"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/mpl/awscryptographymaterialproviderssmithygenerated"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/mpl/awscryptographymaterialproviderssmithygeneratedtypes"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/primitives/awscryptographyprimitivessmithygenerated"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/primitives/awscryptographyprimitivessmithygeneratedtypes"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/smithy-dafny-standard-library/UTF8"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/smithy-dafny-standard-library/Wrappers"
	"github.com/aws/aws-database-encryption-sdk-dynamodb/releases/go/ddb-esdk/AwsCryptographyDbEncryptionSdkDynamoDbTypes"
	"github.com/aws/aws-database-encryption-sdk-dynamodb/releases/go/ddb-esdk/AwsCryptographyDbEncryptionSdkStructuredEncryptionTypes"
	"github.com/aws/aws-database-encryption-sdk-dynamodb/releases/go/ddb-esdk/awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes"
	"github.com/aws/aws-database-encryption-sdk-dynamodb/releases/go/ddb-esdk/awscryptographydbencryptionsdkstructuredencryptionsmithygenerated"
	"github.com/aws/aws-database-encryption-sdk-dynamodb/releases/go/ddb-esdk/awscryptographydbencryptionsdkstructuredencryptionsmithygeneratedtypes"
	dynamodbtypes "github.com/aws/aws-sdk-go-v2/service/dynamodb/types"
	"github.com/aws/smithy-go"
	"github.com/dafny-lang/DafnyRuntimeGo/v4/dafny"
)

func CreateDynamoDbEncryptionBranchKeyIdSupplierInput_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.CreateDynamoDbEncryptionBranchKeyIdSupplierInput) AwsCryptographyDbEncryptionSdkDynamoDbTypes.CreateDynamoDbEncryptionBranchKeyIdSupplierInput {

	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.CreateDynamoDbEncryptionBranchKeyIdSupplierInput {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_CreateDynamoDbEncryptionBranchKeyIdSupplierInput_.Create_CreateDynamoDbEncryptionBranchKeyIdSupplierInput_(DynamoDbKeyBranchKeyIdSupplier_ToDafny(nativeInput.DdbKeyBranchKeyIdSupplier))
	}()

}

func CreateDynamoDbEncryptionBranchKeyIdSupplierOutput_ToDafny(nativeOutput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.CreateDynamoDbEncryptionBranchKeyIdSupplierOutput) AwsCryptographyDbEncryptionSdkDynamoDbTypes.CreateDynamoDbEncryptionBranchKeyIdSupplierOutput {

	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.CreateDynamoDbEncryptionBranchKeyIdSupplierOutput {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_CreateDynamoDbEncryptionBranchKeyIdSupplierOutput_.Create_CreateDynamoDbEncryptionBranchKeyIdSupplierOutput_(awscryptographymaterialproviderssmithygenerated.BranchKeyIdSupplier_ToDafny(nativeOutput.BranchKeyIdSupplier))
	}()

}

func GetEncryptedDataKeyDescriptionInput_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.GetEncryptedDataKeyDescriptionInput) AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetEncryptedDataKeyDescriptionInput {

	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetEncryptedDataKeyDescriptionInput {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_GetEncryptedDataKeyDescriptionInput_.Create_GetEncryptedDataKeyDescriptionInput_(Aws_cryptography_dbEncryptionSdk_dynamoDb_GetEncryptedDataKeyDescriptionInput_input_ToDafny(nativeInput.Input))
	}()

}

func GetEncryptedDataKeyDescriptionOutput_ToDafny(nativeOutput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.GetEncryptedDataKeyDescriptionOutput) AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetEncryptedDataKeyDescriptionOutput {

	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetEncryptedDataKeyDescriptionOutput {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_GetEncryptedDataKeyDescriptionOutput_.Create_GetEncryptedDataKeyDescriptionOutput_(Aws_cryptography_dbEncryptionSdk_dynamoDb_GetEncryptedDataKeyDescriptionOutput_EncryptedDataKeyDescriptionOutput_ToDafny(nativeOutput.EncryptedDataKeyDescriptionOutput))
	}()

}

func GetBranchKeyIdFromDdbKeyInput_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.GetBranchKeyIdFromDdbKeyInput) AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetBranchKeyIdFromDdbKeyInput {

	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetBranchKeyIdFromDdbKeyInput {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_GetBranchKeyIdFromDdbKeyInput_.Create_GetBranchKeyIdFromDdbKeyInput_(Aws_cryptography_dbEncryptionSdk_dynamoDb_GetBranchKeyIdFromDdbKeyInput_ddbKey_ToDafny(nativeInput.DdbKey))
	}()

}

func GetBranchKeyIdFromDdbKeyOutput_ToDafny(nativeOutput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.GetBranchKeyIdFromDdbKeyOutput) AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetBranchKeyIdFromDdbKeyOutput {

	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetBranchKeyIdFromDdbKeyOutput {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_GetBranchKeyIdFromDdbKeyOutput_.Create_GetBranchKeyIdFromDdbKeyOutput_(Aws_cryptography_dbEncryptionSdk_dynamoDb_GetBranchKeyIdFromDdbKeyOutput_branchKeyId_ToDafny(nativeOutput.BranchKeyId))
	}()

}

func DynamoDbKeyBranchKeyIdSupplier_ToDafny(nativeResource awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.IDynamoDbKeyBranchKeyIdSupplier) AwsCryptographyDbEncryptionSdkDynamoDbTypes.IDynamoDbKeyBranchKeyIdSupplier {
	val, ok := nativeResource.(*DynamoDbKeyBranchKeyIdSupplier)
	if ok {
		return val.Impl
	}
	return DynamoDbKeyBranchKeyIdSupplier{&DynamoDbKeyBranchKeyIdSupplierNativeWrapper{Impl: nativeResource}}.Impl

}

func LegacyDynamoDbEncryptor_ToDafny(nativeResource awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.ILegacyDynamoDbEncryptor) AwsCryptographyDbEncryptionSdkDynamoDbTypes.ILegacyDynamoDbEncryptor {
	val, ok := nativeResource.(*LegacyDynamoDbEncryptor)
	if ok {
		return val.Impl
	}
	return LegacyDynamoDbEncryptor{&LegacyDynamoDbEncryptorNativeWrapper{Impl: nativeResource}}.Impl

}

func DynamoDbEncryptionException_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.DynamoDbEncryptionException) AwsCryptographyDbEncryptionSdkDynamoDbTypes.Error {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.Error {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_Error_.Create_DynamoDbEncryptionException_(Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbEncryptionException_message_ToDafny(nativeInput.Message))
	}()

}

func CollectionOfErrors_Input_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.CollectionOfErrors) AwsCryptographyDbEncryptionSdkDynamoDbTypes.Error {
	var e []interface{}
	for _, i2 := range nativeInput.ListOfErrors {
		e = append(e, Error_ToDafny(i2))
	}
	return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_Error_.Create_CollectionOfErrors_(dafny.SeqOf(e...), func() dafny.Sequence {
		res, err := UTF8.DecodeFromNativeGoByteArray([]byte(nativeInput.Message))
		if err != nil {
			panic("invalid utf8 input provided")
		}
		return res
	}())
}
func OpaqueError_Input_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.OpaqueError) AwsCryptographyDbEncryptionSdkDynamoDbTypes.Error {
	return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_Error_.Create_Opaque_(nativeInput.ErrObject)
}

func Error_ToDafny(err error) AwsCryptographyDbEncryptionSdkDynamoDbTypes.Error {
	switch err.(type) {
	// Service Errors
	case awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.DynamoDbEncryptionException:
		return DynamoDbEncryptionException_ToDafny(err.(awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.DynamoDbEncryptionException))

	//DependentErrors
	case awscryptographyprimitivessmithygeneratedtypes.AwsCryptographicPrimitivesBaseException:
		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_Error_.Create_AwsCryptographyPrimitives_(awscryptographyprimitivessmithygenerated.Error_ToDafny(err))

	case awscryptographymaterialproviderssmithygeneratedtypes.AwsCryptographicMaterialProvidersBaseException:
		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_Error_.Create_AwsCryptographyMaterialProviders_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(err))

	case awscryptographydbencryptionsdkstructuredencryptionsmithygeneratedtypes.StructuredEncryptionBaseException:
		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_Error_.Create_AwsCryptographyDbEncryptionSdkStructuredEncryption_(awscryptographydbencryptionsdkstructuredencryptionsmithygenerated.Error_ToDafny(err))

	case awscryptographykeystoresmithygeneratedtypes.KeyStoreBaseException:
		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_Error_.Create_AwsCryptographyKeyStore_(awscryptographykeystoresmithygenerated.Error_ToDafny(err))

	case *smithy.OperationError:
		if err.(*smithy.OperationError).Service() == "DynamoDB" {
			DynamoDBError := comamazonawsdynamodbsmithygenerated.Error_ToDafny(err)
			return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_Error_.Create_ComAmazonawsDynamodb_(DynamoDBError)
		}
		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_Error_.Create_Opaque_(err)

	case smithy.APIError:
		DynamoDBError := comamazonawsdynamodbsmithygenerated.Error_ToDafny(err)
		if !DynamoDBError.Is_OpaqueWithText() {
			return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_Error_.Create_ComAmazonawsDynamodb_(DynamoDBError)
		}
		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_Error_.Create_Opaque_(err)

	//Unmodelled Errors
	case awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.CollectionOfErrors:
		return CollectionOfErrors_Input_ToDafny(err.(awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.CollectionOfErrors))

	default:
		error, ok := err.(awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.OpaqueError)
		if !ok {
			panic("Error is not an OpaqueError")
		}
		return OpaqueError_Input_ToDafny(error)
	}
}

func DynamoDbEncryptionConfig_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.DynamoDbEncryptionConfig) AwsCryptographyDbEncryptionSdkDynamoDbTypes.DynamoDbEncryptionConfig {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.DynamoDbEncryptionConfig {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_DynamoDbEncryptionConfig_.Create_DynamoDbEncryptionConfig_()
	}()

}

func AsSet_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.AsSet) AwsCryptographyDbEncryptionSdkDynamoDbTypes.AsSet {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.AsSet {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_AsSet_.Create_AsSet_()
	}()

}

func MultiKeyStore_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.MultiKeyStore) AwsCryptographyDbEncryptionSdkDynamoDbTypes.MultiKeyStore {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.MultiKeyStore {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_MultiKeyStore_.Create_MultiKeyStore_(Aws_cryptography_dbEncryptionSdk_dynamoDb_MultiKeyStore_keyFieldName_ToDafny(nativeInput.KeyFieldName), Aws_cryptography_dbEncryptionSdk_dynamoDb_MultiKeyStore_cacheTTL_ToDafny(nativeInput.CacheTTL), Aws_cryptography_dbEncryptionSdk_dynamoDb_MultiKeyStore_cache_ToDafny(nativeInput.Cache), Aws_cryptography_dbEncryptionSdk_dynamoDb_MultiKeyStore_partitionId_ToDafny(nativeInput.PartitionId))
	}()

}

func SingleKeyStore_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.SingleKeyStore) AwsCryptographyDbEncryptionSdkDynamoDbTypes.SingleKeyStore {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.SingleKeyStore {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_SingleKeyStore_.Create_SingleKeyStore_(Aws_cryptography_dbEncryptionSdk_dynamoDb_SingleKeyStore_keyId_ToDafny(nativeInput.KeyId), Aws_cryptography_dbEncryptionSdk_dynamoDb_SingleKeyStore_cacheTTL_ToDafny(nativeInput.CacheTTL), Aws_cryptography_dbEncryptionSdk_dynamoDb_SingleKeyStore_cache_ToDafny(nativeInput.Cache), Aws_cryptography_dbEncryptionSdk_dynamoDb_SingleKeyStore_partitionId_ToDafny(nativeInput.PartitionId))
	}()

}

func BeaconKeySource_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconKeySource) AwsCryptographyDbEncryptionSdkDynamoDbTypes.BeaconKeySource {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.BeaconKeySource {

		switch nativeInput.(type) {
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconKeySourceMembersingle:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconKeySource_single_ToDafny(nativeInput.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconKeySourceMembersingle).Value)
			return AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_BeaconKeySource_{}.Create_single_(inputToConversion.UnwrapOr(nil).(AwsCryptographyDbEncryptionSdkDynamoDbTypes.SingleKeyStore))
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconKeySourceMembermulti:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconKeySource_multi_ToDafny(nativeInput.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconKeySourceMembermulti).Value)
			return AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_BeaconKeySource_{}.Create_multi_(inputToConversion.UnwrapOr(nil).(AwsCryptographyDbEncryptionSdkDynamoDbTypes.MultiKeyStore))

		default:
			panic("Unhandled union type")
		}
	}()

}

func PartOnly_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.PartOnly) AwsCryptographyDbEncryptionSdkDynamoDbTypes.PartOnly {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.PartOnly {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_PartOnly_.Create_PartOnly_()
	}()

}

func Shared_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.Shared) AwsCryptographyDbEncryptionSdkDynamoDbTypes.Shared {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.Shared {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_Shared_.Create_Shared_(Aws_cryptography_dbEncryptionSdk_dynamoDb_Shared_other_ToDafny(nativeInput.Other))
	}()

}

func SharedSet_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.SharedSet) AwsCryptographyDbEncryptionSdkDynamoDbTypes.SharedSet {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.SharedSet {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_SharedSet_.Create_SharedSet_(Aws_cryptography_dbEncryptionSdk_dynamoDb_SharedSet_other_ToDafny(nativeInput.Other))
	}()

}

func BeaconStyle_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconStyle) AwsCryptographyDbEncryptionSdkDynamoDbTypes.BeaconStyle {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.BeaconStyle {

		switch nativeInput.(type) {
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconStyleMemberpartOnly:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconStyle_partOnly_ToDafny(nativeInput.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconStyleMemberpartOnly).Value)
			return AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_BeaconStyle_{}.Create_partOnly_(inputToConversion.UnwrapOr(nil).(AwsCryptographyDbEncryptionSdkDynamoDbTypes.PartOnly))
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconStyleMembershared:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconStyle_shared_ToDafny(nativeInput.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconStyleMembershared).Value)
			return AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_BeaconStyle_{}.Create_shared_(inputToConversion.UnwrapOr(nil).(AwsCryptographyDbEncryptionSdkDynamoDbTypes.Shared))
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconStyleMemberasSet:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconStyle_asSet_ToDafny(nativeInput.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconStyleMemberasSet).Value)
			return AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_BeaconStyle_{}.Create_asSet_(inputToConversion.UnwrapOr(nil).(AwsCryptographyDbEncryptionSdkDynamoDbTypes.AsSet))
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconStyleMembersharedSet:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconStyle_sharedSet_ToDafny(nativeInput.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconStyleMembersharedSet).Value)
			return AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_BeaconStyle_{}.Create_sharedSet_(inputToConversion.UnwrapOr(nil).(AwsCryptographyDbEncryptionSdkDynamoDbTypes.SharedSet))

		default:
			panic("Unhandled union type")
		}
	}()

}

func ConstructorPart_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.ConstructorPart) AwsCryptographyDbEncryptionSdkDynamoDbTypes.ConstructorPart {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.ConstructorPart {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_ConstructorPart_.Create_ConstructorPart_(Aws_cryptography_dbEncryptionSdk_dynamoDb_ConstructorPart_name_ToDafny(nativeInput.Name), Aws_cryptography_dbEncryptionSdk_dynamoDb_ConstructorPart_required_ToDafny(nativeInput.Required))
	}()

}

func Constructor_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.Constructor) AwsCryptographyDbEncryptionSdkDynamoDbTypes.Constructor {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.Constructor {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_Constructor_.Create_Constructor_(Aws_cryptography_dbEncryptionSdk_dynamoDb_Constructor_parts_ToDafny(nativeInput.Parts))
	}()

}

func EncryptedPart_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.EncryptedPart) AwsCryptographyDbEncryptionSdkDynamoDbTypes.EncryptedPart {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.EncryptedPart {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_EncryptedPart_.Create_EncryptedPart_(Aws_cryptography_dbEncryptionSdk_dynamoDb_EncryptedPart_name_ToDafny(nativeInput.Name), Aws_cryptography_dbEncryptionSdk_dynamoDb_EncryptedPart_prefix_ToDafny(nativeInput.Prefix))
	}()

}

func SignedPart_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.SignedPart) AwsCryptographyDbEncryptionSdkDynamoDbTypes.SignedPart {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.SignedPart {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_SignedPart_.Create_SignedPart_(Aws_cryptography_dbEncryptionSdk_dynamoDb_SignedPart_name_ToDafny(nativeInput.Name), Aws_cryptography_dbEncryptionSdk_dynamoDb_SignedPart_prefix_ToDafny(nativeInput.Prefix), Aws_cryptography_dbEncryptionSdk_dynamoDb_SignedPart_loc_ToDafny(nativeInput.Loc))
	}()

}

func CompoundBeacon_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.CompoundBeacon) AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompoundBeacon {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompoundBeacon {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_CompoundBeacon_.Create_CompoundBeacon_(Aws_cryptography_dbEncryptionSdk_dynamoDb_CompoundBeacon_name_ToDafny(nativeInput.Name), Aws_cryptography_dbEncryptionSdk_dynamoDb_CompoundBeacon_split_ToDafny(nativeInput.Split), Aws_cryptography_dbEncryptionSdk_dynamoDb_CompoundBeacon_encrypted_ToDafny(nativeInput.Encrypted), Aws_cryptography_dbEncryptionSdk_dynamoDb_CompoundBeacon_signed_ToDafny(nativeInput.Signed), Aws_cryptography_dbEncryptionSdk_dynamoDb_CompoundBeacon_constructors_ToDafny(nativeInput.Constructors))
	}()

}

func StandardBeacon_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.StandardBeacon) AwsCryptographyDbEncryptionSdkDynamoDbTypes.StandardBeacon {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.StandardBeacon {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_StandardBeacon_.Create_StandardBeacon_(Aws_cryptography_dbEncryptionSdk_dynamoDb_StandardBeacon_name_ToDafny(nativeInput.Name), Aws_cryptography_dbEncryptionSdk_dynamoDb_StandardBeacon_length_ToDafny(nativeInput.Length), Aws_cryptography_dbEncryptionSdk_dynamoDb_StandardBeacon_loc_ToDafny(nativeInput.Loc), Aws_cryptography_dbEncryptionSdk_dynamoDb_StandardBeacon_style_ToDafny(nativeInput.Style))
	}()

}

func Insert_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.Insert) AwsCryptographyDbEncryptionSdkDynamoDbTypes.Insert {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.Insert {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_Insert_.Create_Insert_(Aws_cryptography_dbEncryptionSdk_dynamoDb_Insert_literal_ToDafny(nativeInput.Literal))
	}()

}

func Lower_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.Lower) AwsCryptographyDbEncryptionSdkDynamoDbTypes.Lower {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.Lower {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_Lower_.Create_Lower_()
	}()

}

func GetPrefix_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.GetPrefix) AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetPrefix {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetPrefix {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_GetPrefix_.Create_GetPrefix_(Aws_cryptography_dbEncryptionSdk_dynamoDb_GetPrefix_length_ToDafny(nativeInput.Length))
	}()

}

func GetSegment_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.GetSegment) AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetSegment {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetSegment {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_GetSegment_.Create_GetSegment_(Aws_cryptography_dbEncryptionSdk_dynamoDb_GetSegment_split_ToDafny(nativeInput.Split), Aws_cryptography_dbEncryptionSdk_dynamoDb_GetSegment_index_ToDafny(nativeInput.Index))
	}()

}

func GetSegments_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.GetSegments) AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetSegments {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetSegments {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_GetSegments_.Create_GetSegments_(Aws_cryptography_dbEncryptionSdk_dynamoDb_GetSegments_split_ToDafny(nativeInput.Split), Aws_cryptography_dbEncryptionSdk_dynamoDb_GetSegments_low_ToDafny(nativeInput.Low), Aws_cryptography_dbEncryptionSdk_dynamoDb_GetSegments_high_ToDafny(nativeInput.High))
	}()

}

func GetSubstring_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.GetSubstring) AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetSubstring {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetSubstring {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_GetSubstring_.Create_GetSubstring_(Aws_cryptography_dbEncryptionSdk_dynamoDb_GetSubstring_low_ToDafny(nativeInput.Low), Aws_cryptography_dbEncryptionSdk_dynamoDb_GetSubstring_high_ToDafny(nativeInput.High))
	}()

}

func GetSuffix_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.GetSuffix) AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetSuffix {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetSuffix {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_GetSuffix_.Create_GetSuffix_(Aws_cryptography_dbEncryptionSdk_dynamoDb_GetSuffix_length_ToDafny(nativeInput.Length))
	}()

}

func Upper_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.Upper) AwsCryptographyDbEncryptionSdkDynamoDbTypes.Upper {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.Upper {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_Upper_.Create_Upper_()
	}()

}

func VirtualTransform_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransform) AwsCryptographyDbEncryptionSdkDynamoDbTypes.VirtualTransform {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.VirtualTransform {

		switch nativeInput.(type) {
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMemberupper:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualTransform_upper_ToDafny(nativeInput.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMemberupper).Value)
			return AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_VirtualTransform_{}.Create_upper_(inputToConversion.UnwrapOr(nil).(AwsCryptographyDbEncryptionSdkDynamoDbTypes.Upper))
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMemberlower:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualTransform_lower_ToDafny(nativeInput.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMemberlower).Value)
			return AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_VirtualTransform_{}.Create_lower_(inputToConversion.UnwrapOr(nil).(AwsCryptographyDbEncryptionSdkDynamoDbTypes.Lower))
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMemberinsert:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualTransform_insert_ToDafny(nativeInput.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMemberinsert).Value)
			return AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_VirtualTransform_{}.Create_insert_(inputToConversion.UnwrapOr(nil).(AwsCryptographyDbEncryptionSdkDynamoDbTypes.Insert))
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMemberprefix:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualTransform_prefix_ToDafny(nativeInput.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMemberprefix).Value)
			return AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_VirtualTransform_{}.Create_prefix_(inputToConversion.UnwrapOr(nil).(AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetPrefix))
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMembersuffix:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualTransform_suffix_ToDafny(nativeInput.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMembersuffix).Value)
			return AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_VirtualTransform_{}.Create_suffix_(inputToConversion.UnwrapOr(nil).(AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetSuffix))
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMembersubstring:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualTransform_substring_ToDafny(nativeInput.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMembersubstring).Value)
			return AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_VirtualTransform_{}.Create_substring_(inputToConversion.UnwrapOr(nil).(AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetSubstring))
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMembersegment:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualTransform_segment_ToDafny(nativeInput.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMembersegment).Value)
			return AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_VirtualTransform_{}.Create_segment_(inputToConversion.UnwrapOr(nil).(AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetSegment))
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMembersegments:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualTransform_segments_ToDafny(nativeInput.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMembersegments).Value)
			return AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_VirtualTransform_{}.Create_segments_(inputToConversion.UnwrapOr(nil).(AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetSegments))

		default:
			panic("Unhandled union type")
		}
	}()

}

func VirtualPart_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualPart) AwsCryptographyDbEncryptionSdkDynamoDbTypes.VirtualPart {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.VirtualPart {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_VirtualPart_.Create_VirtualPart_(Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualPart_loc_ToDafny(nativeInput.Loc), Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualPart_trans_ToDafny(nativeInput.Trans))
	}()

}

func VirtualField_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualField) AwsCryptographyDbEncryptionSdkDynamoDbTypes.VirtualField {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.VirtualField {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_VirtualField_.Create_VirtualField_(Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualField_name_ToDafny(nativeInput.Name), Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualField_parts_ToDafny(nativeInput.Parts))
	}()

}

func BeaconVersion_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconVersion) AwsCryptographyDbEncryptionSdkDynamoDbTypes.BeaconVersion {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.BeaconVersion {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_BeaconVersion_.Create_BeaconVersion_(Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconVersion_version_ToDafny(nativeInput.Version), Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconVersion_keyStore_ToDafny(nativeInput.KeyStore), Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconVersion_keySource_ToDafny(nativeInput.KeySource), Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconVersion_standardBeacons_ToDafny(nativeInput.StandardBeacons), Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconVersion_compoundBeacons_ToDafny(nativeInput.CompoundBeacons), Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconVersion_virtualFields_ToDafny(nativeInput.VirtualFields), Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconVersion_encryptedParts_ToDafny(nativeInput.EncryptedParts), Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconVersion_signedParts_ToDafny(nativeInput.SignedParts))
	}()

}

func LegacyPolicy_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.LegacyPolicy) AwsCryptographyDbEncryptionSdkDynamoDbTypes.LegacyPolicy {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.LegacyPolicy {

		var index int
		for _, enumVal := range nativeInput.Values() {
			index++
			if enumVal == nativeInput {
				break
			}
			if index == len(nativeInput.Values()) {
				panic("Input value did not found in enum values")
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_LegacyPolicy_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return enum.(AwsCryptographyDbEncryptionSdkDynamoDbTypes.LegacyPolicy)
	}()

}

func LegacyOverride_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.LegacyOverride) AwsCryptographyDbEncryptionSdkDynamoDbTypes.LegacyOverride {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.LegacyOverride {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_LegacyOverride_.Create_LegacyOverride_(Aws_cryptography_dbEncryptionSdk_dynamoDb_LegacyOverride_policy_ToDafny(nativeInput.Policy), LegacyDynamoDbEncryptor_ToDafny(nativeInput.Encryptor), Aws_cryptography_dbEncryptionSdk_dynamoDb_LegacyOverride_attributeActionsOnEncrypt_ToDafny(nativeInput.AttributeActionsOnEncrypt), Aws_cryptography_dbEncryptionSdk_dynamoDb_LegacyOverride_defaultAttributeFlag_ToDafny(nativeInput.DefaultAttributeFlag))
	}()

}

func PlaintextOverride_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.PlaintextOverride) AwsCryptographyDbEncryptionSdkDynamoDbTypes.PlaintextOverride {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.PlaintextOverride {

		var index int
		for _, enumVal := range nativeInput.Values() {
			index++
			if enumVal == nativeInput {
				break
			}
			if index == len(nativeInput.Values()) {
				panic("Input value did not found in enum values")
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_PlaintextOverride_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return enum.(AwsCryptographyDbEncryptionSdkDynamoDbTypes.PlaintextOverride)
	}()

}

func SearchConfig_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.SearchConfig) AwsCryptographyDbEncryptionSdkDynamoDbTypes.SearchConfig {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.SearchConfig {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_SearchConfig_.Create_SearchConfig_(Aws_cryptography_dbEncryptionSdk_dynamoDb_SearchConfig_versions_ToDafny(nativeInput.Versions), Aws_cryptography_dbEncryptionSdk_dynamoDb_SearchConfig_writeVersion_ToDafny(nativeInput.WriteVersion))
	}()

}

func DynamoDbTableEncryptionConfig_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.DynamoDbTableEncryptionConfig) AwsCryptographyDbEncryptionSdkDynamoDbTypes.DynamoDbTableEncryptionConfig {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.DynamoDbTableEncryptionConfig {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_DynamoDbTableEncryptionConfig_.Create_DynamoDbTableEncryptionConfig_(Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_logicalTableName_ToDafny(nativeInput.LogicalTableName), Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_partitionKeyName_ToDafny(nativeInput.PartitionKeyName), Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_sortKeyName_ToDafny(nativeInput.SortKeyName), Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_search_ToDafny(nativeInput.Search), Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_attributeActionsOnEncrypt_ToDafny(nativeInput.AttributeActionsOnEncrypt), Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_allowedUnsignedAttributes_ToDafny(nativeInput.AllowedUnsignedAttributes), Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_allowedUnsignedAttributePrefix_ToDafny(nativeInput.AllowedUnsignedAttributePrefix), Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_algorithmSuiteId_ToDafny(nativeInput.AlgorithmSuiteId), func() Wrappers.Option {
			if (nativeInput.Keyring) == nil {
				return Wrappers.Companion_Option_.Create_None_()
			}
			return Wrappers.Companion_Option_.Create_Some_(awscryptographymaterialproviderssmithygenerated.Keyring_ToDafny(nativeInput.Keyring))
		}(), func() Wrappers.Option {
			if (nativeInput.Cmm) == nil {
				return Wrappers.Companion_Option_.Create_None_()
			}
			return Wrappers.Companion_Option_.Create_Some_(awscryptographymaterialproviderssmithygenerated.CryptographicMaterialsManager_ToDafny(nativeInput.Cmm))
		}(), Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_legacyOverride_ToDafny(nativeInput.LegacyOverride), Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_plaintextOverride_ToDafny(nativeInput.PlaintextOverride))
	}()

}

func DynamoDbTablesEncryptionConfig_ToDafny(nativeInput awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.DynamoDbTablesEncryptionConfig) AwsCryptographyDbEncryptionSdkDynamoDbTypes.DynamoDbTablesEncryptionConfig {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.DynamoDbTablesEncryptionConfig {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_DynamoDbTablesEncryptionConfig_.Create_DynamoDbTablesEncryptionConfig_(Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTablesEncryptionConfig_tableEncryptionConfigs_ToDafny(nativeInput.TableEncryptionConfigs))
	}()

}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_GetEncryptedDataKeyDescriptionInput_input_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.GetEncryptedDataKeyDescriptionUnion) AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetEncryptedDataKeyDescriptionUnion {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetEncryptedDataKeyDescriptionUnion {

		switch input.(type) {
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.GetEncryptedDataKeyDescriptionUnionMemberheader:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_GetEncryptedDataKeyDescriptionUnion_header_ToDafny(input.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.GetEncryptedDataKeyDescriptionUnionMemberheader).Value)
			return AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_GetEncryptedDataKeyDescriptionUnion_{}.Create_header_(inputToConversion.UnwrapOr(nil).(dafny.Sequence))
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.GetEncryptedDataKeyDescriptionUnionMemberitem:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_GetEncryptedDataKeyDescriptionUnion_item_ToDafny(input.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.GetEncryptedDataKeyDescriptionUnionMemberitem).Value)
			return AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_GetEncryptedDataKeyDescriptionUnion_{}.Create_item_(inputToConversion.UnwrapOr(nil).(dafny.Map))

		default:
			panic("Unhandled union type")
		}
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_GetEncryptedDataKeyDescriptionUnion_header_ToDafny(input []byte) Wrappers.Option {
	return func() Wrappers.Option {
		var v []interface{}
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		for _, e := range input {
			v = append(v, e)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(v...))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_GetEncryptedDataKeyDescriptionUnion_item_ToDafny(input map[string]dynamodbtypes.AttributeValue) Wrappers.Option {
	return func() Wrappers.Option {
		fieldValue := dafny.NewMapBuilder()
		for key, val := range input {
			fieldValue.Add(comamazonawsdynamodbsmithygenerated.Com_amazonaws_dynamodb_AttributeMap_key_ToDafny(key), comamazonawsdynamodbsmithygenerated.Com_amazonaws_dynamodb_AttributeMap_value_ToDafny(val))
		}
		return Wrappers.Companion_Option_.Create_Some_(fieldValue.ToMap())
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_GetEncryptedDataKeyDescriptionOutput_EncryptedDataKeyDescriptionOutput_ToDafny(input []awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.EncryptedDataKeyDescription) dafny.Sequence {
	return func() dafny.Sequence {

		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Aws_cryptography_dbEncryptionSdk_dynamoDb_EncryptedDataKeyDescriptionList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return dafny.SeqOf(fieldValue...)
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_EncryptedDataKeyDescriptionList_member_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.EncryptedDataKeyDescription) AwsCryptographyDbEncryptionSdkDynamoDbTypes.EncryptedDataKeyDescription {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.EncryptedDataKeyDescription {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_EncryptedDataKeyDescription_.Create_EncryptedDataKeyDescription_(Aws_cryptography_dbEncryptionSdk_dynamoDb_EncryptedDataKeyDescription_keyProviderId_ToDafny(input.KeyProviderId), Aws_cryptography_dbEncryptionSdk_dynamoDb_EncryptedDataKeyDescription_keyProviderInfo_ToDafny(input.KeyProviderInfo), Aws_cryptography_dbEncryptionSdk_dynamoDb_EncryptedDataKeyDescription_branchKeyId_ToDafny(input.BranchKeyId), Aws_cryptography_dbEncryptionSdk_dynamoDb_EncryptedDataKeyDescription_branchKeyVersion_ToDafny(input.BranchKeyVersion))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_EncryptedDataKeyDescription_keyProviderId_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_EncryptedDataKeyDescription_keyProviderInfo_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_EncryptedDataKeyDescription_branchKeyId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_EncryptedDataKeyDescription_branchKeyVersion_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_GetBranchKeyIdFromDdbKeyInput_ddbKey_ToDafny(input map[string]dynamodbtypes.AttributeValue) dafny.Map {
	return func() dafny.Map {
		fieldValue := dafny.NewMapBuilder()
		for key, val := range input {
			fieldValue.Add(comamazonawsdynamodbsmithygenerated.Com_amazonaws_dynamodb_Key_key_ToDafny(key), comamazonawsdynamodbsmithygenerated.Com_amazonaws_dynamodb_Key_value_ToDafny(val))
		}
		return fieldValue.ToMap()
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_GetBranchKeyIdFromDdbKeyOutput_branchKeyId_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbEncryptionException_message_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_MultiKeyStore_keyFieldName_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_MultiKeyStore_cacheTTL_ToDafny(input int32) int32 {
	return func() int32 {

		return input
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_MultiKeyStore_cache_ToDafny(input awscryptographymaterialproviderssmithygeneratedtypes.CacheType) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		switch input.(type) {
		case *awscryptographymaterialproviderssmithygeneratedtypes.CacheTypeMemberDefault:
			var inputToConversion = awscryptographymaterialproviderssmithygenerated.Aws_cryptography_materialProviders_CacheType_Default_ToDafny(input.(*awscryptographymaterialproviderssmithygeneratedtypes.CacheTypeMemberDefault).Value)
			return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyMaterialProvidersTypes.CompanionStruct_CacheType_{}.Create_Default_(inputToConversion.UnwrapOr(nil).(AwsCryptographyMaterialProvidersTypes.DefaultCache)))
		case *awscryptographymaterialproviderssmithygeneratedtypes.CacheTypeMemberNo:
			var inputToConversion = awscryptographymaterialproviderssmithygenerated.Aws_cryptography_materialProviders_CacheType_No_ToDafny(input.(*awscryptographymaterialproviderssmithygeneratedtypes.CacheTypeMemberNo).Value)
			return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyMaterialProvidersTypes.CompanionStruct_CacheType_{}.Create_No_(inputToConversion.UnwrapOr(nil).(AwsCryptographyMaterialProvidersTypes.NoCache)))
		case *awscryptographymaterialproviderssmithygeneratedtypes.CacheTypeMemberSingleThreaded:
			var inputToConversion = awscryptographymaterialproviderssmithygenerated.Aws_cryptography_materialProviders_CacheType_SingleThreaded_ToDafny(input.(*awscryptographymaterialproviderssmithygeneratedtypes.CacheTypeMemberSingleThreaded).Value)
			return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyMaterialProvidersTypes.CompanionStruct_CacheType_{}.Create_SingleThreaded_(inputToConversion.UnwrapOr(nil).(AwsCryptographyMaterialProvidersTypes.SingleThreadedCache)))
		case *awscryptographymaterialproviderssmithygeneratedtypes.CacheTypeMemberMultiThreaded:
			var inputToConversion = awscryptographymaterialproviderssmithygenerated.Aws_cryptography_materialProviders_CacheType_MultiThreaded_ToDafny(input.(*awscryptographymaterialproviderssmithygeneratedtypes.CacheTypeMemberMultiThreaded).Value)
			return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyMaterialProvidersTypes.CompanionStruct_CacheType_{}.Create_MultiThreaded_(inputToConversion.UnwrapOr(nil).(AwsCryptographyMaterialProvidersTypes.MultiThreadedCache)))
		case *awscryptographymaterialproviderssmithygeneratedtypes.CacheTypeMemberStormTracking:
			var inputToConversion = awscryptographymaterialproviderssmithygenerated.Aws_cryptography_materialProviders_CacheType_StormTracking_ToDafny(input.(*awscryptographymaterialproviderssmithygeneratedtypes.CacheTypeMemberStormTracking).Value)
			return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyMaterialProvidersTypes.CompanionStruct_CacheType_{}.Create_StormTracking_(inputToConversion.UnwrapOr(nil).(AwsCryptographyMaterialProvidersTypes.StormTrackingCache)))
		case *awscryptographymaterialproviderssmithygeneratedtypes.CacheTypeMemberShared:
			var inputToConversion = func() Wrappers.Option {
				if (input.(*awscryptographymaterialproviderssmithygeneratedtypes.CacheTypeMemberShared).Value) == nil {
					return Wrappers.Companion_Option_.Create_None_()
				}
				return Wrappers.Companion_Option_.Create_Some_(awscryptographymaterialproviderssmithygenerated.CryptographicMaterialsCache_ToDafny(input.(*awscryptographymaterialproviderssmithygeneratedtypes.CacheTypeMemberShared).Value))
			}()
			return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyMaterialProvidersTypes.CompanionStruct_CacheType_{}.Create_Shared_(inputToConversion.UnwrapOr(nil).(AwsCryptographyMaterialProvidersTypes.ICryptographicMaterialsCache)))

		default:
			panic("Unhandled union type")
		}
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_MultiKeyStore_partitionId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_SingleKeyStore_keyId_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_SingleKeyStore_cacheTTL_ToDafny(input int32) int32 {
	return func() int32 {

		return input
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_SingleKeyStore_cache_ToDafny(input awscryptographymaterialproviderssmithygeneratedtypes.CacheType) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		switch input.(type) {
		case *awscryptographymaterialproviderssmithygeneratedtypes.CacheTypeMemberDefault:
			var inputToConversion = awscryptographymaterialproviderssmithygenerated.Aws_cryptography_materialProviders_CacheType_Default_ToDafny(input.(*awscryptographymaterialproviderssmithygeneratedtypes.CacheTypeMemberDefault).Value)
			return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyMaterialProvidersTypes.CompanionStruct_CacheType_{}.Create_Default_(inputToConversion.UnwrapOr(nil).(AwsCryptographyMaterialProvidersTypes.DefaultCache)))
		case *awscryptographymaterialproviderssmithygeneratedtypes.CacheTypeMemberNo:
			var inputToConversion = awscryptographymaterialproviderssmithygenerated.Aws_cryptography_materialProviders_CacheType_No_ToDafny(input.(*awscryptographymaterialproviderssmithygeneratedtypes.CacheTypeMemberNo).Value)
			return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyMaterialProvidersTypes.CompanionStruct_CacheType_{}.Create_No_(inputToConversion.UnwrapOr(nil).(AwsCryptographyMaterialProvidersTypes.NoCache)))
		case *awscryptographymaterialproviderssmithygeneratedtypes.CacheTypeMemberSingleThreaded:
			var inputToConversion = awscryptographymaterialproviderssmithygenerated.Aws_cryptography_materialProviders_CacheType_SingleThreaded_ToDafny(input.(*awscryptographymaterialproviderssmithygeneratedtypes.CacheTypeMemberSingleThreaded).Value)
			return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyMaterialProvidersTypes.CompanionStruct_CacheType_{}.Create_SingleThreaded_(inputToConversion.UnwrapOr(nil).(AwsCryptographyMaterialProvidersTypes.SingleThreadedCache)))
		case *awscryptographymaterialproviderssmithygeneratedtypes.CacheTypeMemberMultiThreaded:
			var inputToConversion = awscryptographymaterialproviderssmithygenerated.Aws_cryptography_materialProviders_CacheType_MultiThreaded_ToDafny(input.(*awscryptographymaterialproviderssmithygeneratedtypes.CacheTypeMemberMultiThreaded).Value)
			return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyMaterialProvidersTypes.CompanionStruct_CacheType_{}.Create_MultiThreaded_(inputToConversion.UnwrapOr(nil).(AwsCryptographyMaterialProvidersTypes.MultiThreadedCache)))
		case *awscryptographymaterialproviderssmithygeneratedtypes.CacheTypeMemberStormTracking:
			var inputToConversion = awscryptographymaterialproviderssmithygenerated.Aws_cryptography_materialProviders_CacheType_StormTracking_ToDafny(input.(*awscryptographymaterialproviderssmithygeneratedtypes.CacheTypeMemberStormTracking).Value)
			return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyMaterialProvidersTypes.CompanionStruct_CacheType_{}.Create_StormTracking_(inputToConversion.UnwrapOr(nil).(AwsCryptographyMaterialProvidersTypes.StormTrackingCache)))
		case *awscryptographymaterialproviderssmithygeneratedtypes.CacheTypeMemberShared:
			var inputToConversion = func() Wrappers.Option {
				if (input.(*awscryptographymaterialproviderssmithygeneratedtypes.CacheTypeMemberShared).Value) == nil {
					return Wrappers.Companion_Option_.Create_None_()
				}
				return Wrappers.Companion_Option_.Create_Some_(awscryptographymaterialproviderssmithygenerated.CryptographicMaterialsCache_ToDafny(input.(*awscryptographymaterialproviderssmithygeneratedtypes.CacheTypeMemberShared).Value))
			}()
			return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyMaterialProvidersTypes.CompanionStruct_CacheType_{}.Create_Shared_(inputToConversion.UnwrapOr(nil).(AwsCryptographyMaterialProvidersTypes.ICryptographicMaterialsCache)))

		default:
			panic("Unhandled union type")
		}
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_SingleKeyStore_partitionId_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconKeySource_single_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.SingleKeyStore) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_SingleKeyStore_.Create_SingleKeyStore_(Aws_cryptography_dbEncryptionSdk_dynamoDb_SingleKeyStore_keyId_ToDafny(input.KeyId), Aws_cryptography_dbEncryptionSdk_dynamoDb_SingleKeyStore_cacheTTL_ToDafny(input.CacheTTL), Aws_cryptography_dbEncryptionSdk_dynamoDb_SingleKeyStore_cache_ToDafny(input.Cache), Aws_cryptography_dbEncryptionSdk_dynamoDb_SingleKeyStore_partitionId_ToDafny(input.PartitionId)))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconKeySource_multi_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.MultiKeyStore) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_MultiKeyStore_.Create_MultiKeyStore_(Aws_cryptography_dbEncryptionSdk_dynamoDb_MultiKeyStore_keyFieldName_ToDafny(input.KeyFieldName), Aws_cryptography_dbEncryptionSdk_dynamoDb_MultiKeyStore_cacheTTL_ToDafny(input.CacheTTL), Aws_cryptography_dbEncryptionSdk_dynamoDb_MultiKeyStore_cache_ToDafny(input.Cache), Aws_cryptography_dbEncryptionSdk_dynamoDb_MultiKeyStore_partitionId_ToDafny(input.PartitionId)))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_Shared_other_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_SharedSet_other_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconStyle_partOnly_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.PartOnly) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_PartOnly_.Create_PartOnly_())
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconStyle_shared_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.Shared) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_Shared_.Create_Shared_(Aws_cryptography_dbEncryptionSdk_dynamoDb_Shared_other_ToDafny(input.Other)))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconStyle_asSet_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.AsSet) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_AsSet_.Create_AsSet_())
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconStyle_sharedSet_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.SharedSet) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_SharedSet_.Create_SharedSet_(Aws_cryptography_dbEncryptionSdk_dynamoDb_SharedSet_other_ToDafny(input.Other)))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_ConstructorPart_name_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_ConstructorPart_required_ToDafny(input bool) bool {
	return func() bool {

		return input
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_Constructor_parts_ToDafny(input []awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.ConstructorPart) dafny.Sequence {
	return func() dafny.Sequence {

		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Aws_cryptography_dbEncryptionSdk_dynamoDb_ConstructorPartList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return dafny.SeqOf(fieldValue...)
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_ConstructorPartList_member_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.ConstructorPart) AwsCryptographyDbEncryptionSdkDynamoDbTypes.ConstructorPart {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.ConstructorPart {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_ConstructorPart_.Create_ConstructorPart_(Aws_cryptography_dbEncryptionSdk_dynamoDb_ConstructorPart_name_ToDafny(input.Name), Aws_cryptography_dbEncryptionSdk_dynamoDb_ConstructorPart_required_ToDafny(input.Required))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_EncryptedPart_name_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_EncryptedPart_prefix_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_SignedPart_name_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_SignedPart_prefix_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_SignedPart_loc_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_CompoundBeacon_name_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_CompoundBeacon_split_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_CompoundBeacon_encrypted_ToDafny(input []awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.EncryptedPart) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Aws_cryptography_dbEncryptionSdk_dynamoDb_EncryptedPartsList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_EncryptedPartsList_member_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.EncryptedPart) AwsCryptographyDbEncryptionSdkDynamoDbTypes.EncryptedPart {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.EncryptedPart {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_EncryptedPart_.Create_EncryptedPart_(Aws_cryptography_dbEncryptionSdk_dynamoDb_EncryptedPart_name_ToDafny(input.Name), Aws_cryptography_dbEncryptionSdk_dynamoDb_EncryptedPart_prefix_ToDafny(input.Prefix))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_CompoundBeacon_signed_ToDafny(input []awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.SignedPart) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Aws_cryptography_dbEncryptionSdk_dynamoDb_SignedPartsList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_SignedPartsList_member_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.SignedPart) AwsCryptographyDbEncryptionSdkDynamoDbTypes.SignedPart {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.SignedPart {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_SignedPart_.Create_SignedPart_(Aws_cryptography_dbEncryptionSdk_dynamoDb_SignedPart_name_ToDafny(input.Name), Aws_cryptography_dbEncryptionSdk_dynamoDb_SignedPart_prefix_ToDafny(input.Prefix), Aws_cryptography_dbEncryptionSdk_dynamoDb_SignedPart_loc_ToDafny(input.Loc))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_CompoundBeacon_constructors_ToDafny(input []awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.Constructor) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Aws_cryptography_dbEncryptionSdk_dynamoDb_ConstructorList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_ConstructorList_member_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.Constructor) AwsCryptographyDbEncryptionSdkDynamoDbTypes.Constructor {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.Constructor {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_Constructor_.Create_Constructor_(Aws_cryptography_dbEncryptionSdk_dynamoDb_Constructor_parts_ToDafny(input.Parts))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_StandardBeacon_name_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_StandardBeacon_length_ToDafny(input int32) int32 {
	return func() int32 {

		return input
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_StandardBeacon_loc_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_StandardBeacon_style_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconStyle) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		switch input.(type) {
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconStyleMemberpartOnly:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconStyle_partOnly_ToDafny(input.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconStyleMemberpartOnly).Value)
			return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_BeaconStyle_{}.Create_partOnly_(inputToConversion.UnwrapOr(nil).(AwsCryptographyDbEncryptionSdkDynamoDbTypes.PartOnly)))
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconStyleMembershared:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconStyle_shared_ToDafny(input.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconStyleMembershared).Value)
			return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_BeaconStyle_{}.Create_shared_(inputToConversion.UnwrapOr(nil).(AwsCryptographyDbEncryptionSdkDynamoDbTypes.Shared)))
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconStyleMemberasSet:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconStyle_asSet_ToDafny(input.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconStyleMemberasSet).Value)
			return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_BeaconStyle_{}.Create_asSet_(inputToConversion.UnwrapOr(nil).(AwsCryptographyDbEncryptionSdkDynamoDbTypes.AsSet)))
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconStyleMembersharedSet:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconStyle_sharedSet_ToDafny(input.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconStyleMembersharedSet).Value)
			return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_BeaconStyle_{}.Create_sharedSet_(inputToConversion.UnwrapOr(nil).(AwsCryptographyDbEncryptionSdkDynamoDbTypes.SharedSet)))

		default:
			panic("Unhandled union type")
		}
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_Insert_literal_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_GetPrefix_length_ToDafny(input int32) int32 {
	return func() int32 {

		return input
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_GetSegment_split_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_GetSegment_index_ToDafny(input int32) int32 {
	return func() int32 {

		return input
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_GetSegments_split_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_GetSegments_low_ToDafny(input int32) int32 {
	return func() int32 {

		return input
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_GetSegments_high_ToDafny(input int32) int32 {
	return func() int32 {

		return input
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_GetSubstring_low_ToDafny(input int32) int32 {
	return func() int32 {

		return input
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_GetSubstring_high_ToDafny(input int32) int32 {
	return func() int32 {

		return input
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_GetSuffix_length_ToDafny(input int32) int32 {
	return func() int32 {

		return input
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualTransform_upper_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.Upper) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_Upper_.Create_Upper_())
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualTransform_lower_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.Lower) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_Lower_.Create_Lower_())
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualTransform_insert_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.Insert) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_Insert_.Create_Insert_(Aws_cryptography_dbEncryptionSdk_dynamoDb_Insert_literal_ToDafny(input.Literal)))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualTransform_prefix_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.GetPrefix) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_GetPrefix_.Create_GetPrefix_(Aws_cryptography_dbEncryptionSdk_dynamoDb_GetPrefix_length_ToDafny(input.Length)))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualTransform_suffix_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.GetSuffix) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_GetSuffix_.Create_GetSuffix_(Aws_cryptography_dbEncryptionSdk_dynamoDb_GetSuffix_length_ToDafny(input.Length)))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualTransform_substring_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.GetSubstring) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_GetSubstring_.Create_GetSubstring_(Aws_cryptography_dbEncryptionSdk_dynamoDb_GetSubstring_low_ToDafny(input.Low), Aws_cryptography_dbEncryptionSdk_dynamoDb_GetSubstring_high_ToDafny(input.High)))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualTransform_segment_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.GetSegment) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_GetSegment_.Create_GetSegment_(Aws_cryptography_dbEncryptionSdk_dynamoDb_GetSegment_split_ToDafny(input.Split), Aws_cryptography_dbEncryptionSdk_dynamoDb_GetSegment_index_ToDafny(input.Index)))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualTransform_segments_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.GetSegments) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_GetSegments_.Create_GetSegments_(Aws_cryptography_dbEncryptionSdk_dynamoDb_GetSegments_split_ToDafny(input.Split), Aws_cryptography_dbEncryptionSdk_dynamoDb_GetSegments_low_ToDafny(input.Low), Aws_cryptography_dbEncryptionSdk_dynamoDb_GetSegments_high_ToDafny(input.High)))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualPart_loc_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualPart_trans_ToDafny(input []awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransform) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualTransformList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualTransformList_member_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransform) AwsCryptographyDbEncryptionSdkDynamoDbTypes.VirtualTransform {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.VirtualTransform {

		switch input.(type) {
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMemberupper:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualTransform_upper_ToDafny(input.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMemberupper).Value)
			return AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_VirtualTransform_{}.Create_upper_(inputToConversion.UnwrapOr(nil).(AwsCryptographyDbEncryptionSdkDynamoDbTypes.Upper))
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMemberlower:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualTransform_lower_ToDafny(input.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMemberlower).Value)
			return AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_VirtualTransform_{}.Create_lower_(inputToConversion.UnwrapOr(nil).(AwsCryptographyDbEncryptionSdkDynamoDbTypes.Lower))
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMemberinsert:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualTransform_insert_ToDafny(input.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMemberinsert).Value)
			return AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_VirtualTransform_{}.Create_insert_(inputToConversion.UnwrapOr(nil).(AwsCryptographyDbEncryptionSdkDynamoDbTypes.Insert))
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMemberprefix:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualTransform_prefix_ToDafny(input.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMemberprefix).Value)
			return AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_VirtualTransform_{}.Create_prefix_(inputToConversion.UnwrapOr(nil).(AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetPrefix))
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMembersuffix:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualTransform_suffix_ToDafny(input.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMembersuffix).Value)
			return AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_VirtualTransform_{}.Create_suffix_(inputToConversion.UnwrapOr(nil).(AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetSuffix))
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMembersubstring:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualTransform_substring_ToDafny(input.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMembersubstring).Value)
			return AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_VirtualTransform_{}.Create_substring_(inputToConversion.UnwrapOr(nil).(AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetSubstring))
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMembersegment:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualTransform_segment_ToDafny(input.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMembersegment).Value)
			return AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_VirtualTransform_{}.Create_segment_(inputToConversion.UnwrapOr(nil).(AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetSegment))
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMembersegments:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualTransform_segments_ToDafny(input.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualTransformMembersegments).Value)
			return AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_VirtualTransform_{}.Create_segments_(inputToConversion.UnwrapOr(nil).(AwsCryptographyDbEncryptionSdkDynamoDbTypes.GetSegments))

		default:
			panic("Unhandled union type")
		}
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualField_name_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualField_parts_ToDafny(input []awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualPart) dafny.Sequence {
	return func() dafny.Sequence {

		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualPartList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return dafny.SeqOf(fieldValue...)
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualPartList_member_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualPart) AwsCryptographyDbEncryptionSdkDynamoDbTypes.VirtualPart {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.VirtualPart {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_VirtualPart_.Create_VirtualPart_(Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualPart_loc_ToDafny(input.Loc), Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualPart_trans_ToDafny(input.Trans))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconVersion_version_ToDafny(input int32) int32 {
	return func() int32 {

		return input
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconVersion_keyStore_ToDafny(input *awscryptographykeystoresmithygenerated.Client) AwsCryptographyKeyStoreTypes.IKeyStoreClient {
	return input.DafnyClient
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconVersion_keySource_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconKeySource) AwsCryptographyDbEncryptionSdkDynamoDbTypes.BeaconKeySource {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.BeaconKeySource {

		switch input.(type) {
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconKeySourceMembersingle:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconKeySource_single_ToDafny(input.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconKeySourceMembersingle).Value)
			return AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_BeaconKeySource_{}.Create_single_(inputToConversion.UnwrapOr(nil).(AwsCryptographyDbEncryptionSdkDynamoDbTypes.SingleKeyStore))
		case *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconKeySourceMembermulti:
			var inputToConversion = Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconKeySource_multi_ToDafny(input.(*awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconKeySourceMembermulti).Value)
			return AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_BeaconKeySource_{}.Create_multi_(inputToConversion.UnwrapOr(nil).(AwsCryptographyDbEncryptionSdkDynamoDbTypes.MultiKeyStore))

		default:
			panic("Unhandled union type")
		}
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconVersion_standardBeacons_ToDafny(input []awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.StandardBeacon) dafny.Sequence {
	return func() dafny.Sequence {

		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Aws_cryptography_dbEncryptionSdk_dynamoDb_StandardBeaconList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return dafny.SeqOf(fieldValue...)
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_StandardBeaconList_member_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.StandardBeacon) AwsCryptographyDbEncryptionSdkDynamoDbTypes.StandardBeacon {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.StandardBeacon {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_StandardBeacon_.Create_StandardBeacon_(Aws_cryptography_dbEncryptionSdk_dynamoDb_StandardBeacon_name_ToDafny(input.Name), Aws_cryptography_dbEncryptionSdk_dynamoDb_StandardBeacon_length_ToDafny(input.Length), Aws_cryptography_dbEncryptionSdk_dynamoDb_StandardBeacon_loc_ToDafny(input.Loc), Aws_cryptography_dbEncryptionSdk_dynamoDb_StandardBeacon_style_ToDafny(input.Style))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconVersion_compoundBeacons_ToDafny(input []awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.CompoundBeacon) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Aws_cryptography_dbEncryptionSdk_dynamoDb_CompoundBeaconList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_CompoundBeaconList_member_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.CompoundBeacon) AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompoundBeacon {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompoundBeacon {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_CompoundBeacon_.Create_CompoundBeacon_(Aws_cryptography_dbEncryptionSdk_dynamoDb_CompoundBeacon_name_ToDafny(input.Name), Aws_cryptography_dbEncryptionSdk_dynamoDb_CompoundBeacon_split_ToDafny(input.Split), Aws_cryptography_dbEncryptionSdk_dynamoDb_CompoundBeacon_encrypted_ToDafny(input.Encrypted), Aws_cryptography_dbEncryptionSdk_dynamoDb_CompoundBeacon_signed_ToDafny(input.Signed), Aws_cryptography_dbEncryptionSdk_dynamoDb_CompoundBeacon_constructors_ToDafny(input.Constructors))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconVersion_virtualFields_ToDafny(input []awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualField) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualFieldList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualFieldList_member_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.VirtualField) AwsCryptographyDbEncryptionSdkDynamoDbTypes.VirtualField {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.VirtualField {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_VirtualField_.Create_VirtualField_(Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualField_name_ToDafny(input.Name), Aws_cryptography_dbEncryptionSdk_dynamoDb_VirtualField_parts_ToDafny(input.Parts))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconVersion_encryptedParts_ToDafny(input []awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.EncryptedPart) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Aws_cryptography_dbEncryptionSdk_dynamoDb_EncryptedPartsList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconVersion_signedParts_ToDafny(input []awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.SignedPart) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Aws_cryptography_dbEncryptionSdk_dynamoDb_SignedPartsList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_LegacyOverride_policy_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.LegacyPolicy) AwsCryptographyDbEncryptionSdkDynamoDbTypes.LegacyPolicy {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.LegacyPolicy {

		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				panic("Input value did not found in enum values")
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_LegacyPolicy_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return enum.(AwsCryptographyDbEncryptionSdkDynamoDbTypes.LegacyPolicy)
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_LegacyOverride_attributeActionsOnEncrypt_ToDafny(input map[string]awscryptographydbencryptionsdkstructuredencryptionsmithygeneratedtypes.CryptoAction) dafny.Map {
	return func() dafny.Map {
		fieldValue := dafny.NewMapBuilder()
		for key, val := range input {
			fieldValue.Add(Aws_cryptography_dbEncryptionSdk_dynamoDb_AttributeActions_key_ToDafny(key), Aws_cryptography_dbEncryptionSdk_dynamoDb_AttributeActions_value_ToDafny(val))
		}
		return fieldValue.ToMap()
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_AttributeActions_key_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_AttributeActions_value_ToDafny(input awscryptographydbencryptionsdkstructuredencryptionsmithygeneratedtypes.CryptoAction) AwsCryptographyDbEncryptionSdkStructuredEncryptionTypes.CryptoAction {
	return func() AwsCryptographyDbEncryptionSdkStructuredEncryptionTypes.CryptoAction {

		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
			if index == len(input.Values()) {
				panic("Input value did not found in enum values")
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(AwsCryptographyDbEncryptionSdkStructuredEncryptionTypes.CompanionStruct_CryptoAction_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return enum.(AwsCryptographyDbEncryptionSdkStructuredEncryptionTypes.CryptoAction)
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_LegacyOverride_defaultAttributeFlag_ToDafny(input *awscryptographydbencryptionsdkstructuredencryptionsmithygeneratedtypes.CryptoAction) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == *input {
				break
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(AwsCryptographyDbEncryptionSdkStructuredEncryptionTypes.CompanionStruct_CryptoAction_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(AwsCryptographyDbEncryptionSdkStructuredEncryptionTypes.CryptoAction))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_SearchConfig_versions_ToDafny(input []awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconVersion) dafny.Sequence {
	return func() dafny.Sequence {

		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconVersionList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return dafny.SeqOf(fieldValue...)
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconVersionList_member_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.BeaconVersion) AwsCryptographyDbEncryptionSdkDynamoDbTypes.BeaconVersion {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.BeaconVersion {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_BeaconVersion_.Create_BeaconVersion_(Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconVersion_version_ToDafny(input.Version), Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconVersion_keyStore_ToDafny(input.KeyStore), Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconVersion_keySource_ToDafny(input.KeySource), Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconVersion_standardBeacons_ToDafny(input.StandardBeacons), Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconVersion_compoundBeacons_ToDafny(input.CompoundBeacons), Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconVersion_virtualFields_ToDafny(input.VirtualFields), Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconVersion_encryptedParts_ToDafny(input.EncryptedParts), Aws_cryptography_dbEncryptionSdk_dynamoDb_BeaconVersion_signedParts_ToDafny(input.SignedParts))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_SearchConfig_writeVersion_ToDafny(input int32) int32 {
	return func() int32 {

		return input
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_logicalTableName_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_partitionKeyName_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_sortKeyName_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_search_ToDafny(input *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.SearchConfig) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_SearchConfig_.Create_SearchConfig_(Aws_cryptography_dbEncryptionSdk_dynamoDb_SearchConfig_versions_ToDafny(input.Versions), Aws_cryptography_dbEncryptionSdk_dynamoDb_SearchConfig_writeVersion_ToDafny(input.WriteVersion)))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_attributeActionsOnEncrypt_ToDafny(input map[string]awscryptographydbencryptionsdkstructuredencryptionsmithygeneratedtypes.CryptoAction) dafny.Map {
	return func() dafny.Map {
		fieldValue := dafny.NewMapBuilder()
		for key, val := range input {
			fieldValue.Add(Aws_cryptography_dbEncryptionSdk_dynamoDb_AttributeActions_key_ToDafny(key), Aws_cryptography_dbEncryptionSdk_dynamoDb_AttributeActions_value_ToDafny(val))
		}
		return fieldValue.ToMap()
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_allowedUnsignedAttributes_ToDafny(input []string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := comamazonawsdynamodbsmithygenerated.Com_amazonaws_dynamodb_AttributeNameList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_allowedUnsignedAttributePrefix_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(*input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}())
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_algorithmSuiteId_ToDafny(input *awscryptographymaterialproviderssmithygeneratedtypes.DBEAlgorithmSuiteId) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == *input {
				break
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(AwsCryptographyMaterialProvidersTypes.CompanionStruct_DBEAlgorithmSuiteId_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(AwsCryptographyMaterialProvidersTypes.DBEAlgorithmSuiteId))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_legacyOverride_ToDafny(input *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.LegacyOverride) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_LegacyOverride_.Create_LegacyOverride_(Aws_cryptography_dbEncryptionSdk_dynamoDb_LegacyOverride_policy_ToDafny(input.Policy), LegacyDynamoDbEncryptor_ToDafny(input.Encryptor), Aws_cryptography_dbEncryptionSdk_dynamoDb_LegacyOverride_attributeActionsOnEncrypt_ToDafny(input.AttributeActionsOnEncrypt), Aws_cryptography_dbEncryptionSdk_dynamoDb_LegacyOverride_defaultAttributeFlag_ToDafny(input.DefaultAttributeFlag)))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_plaintextOverride_ToDafny(input *awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.PlaintextOverride) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == *input {
				break
			}

		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(AwsCryptographyDbEncryptionSdkDynamoDbTypes.CompanionStruct_PlaintextOverride_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return Wrappers.Companion_Option_.Create_Some_(enum.(AwsCryptographyDbEncryptionSdkDynamoDbTypes.PlaintextOverride))
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTablesEncryptionConfig_tableEncryptionConfigs_ToDafny(input map[string]awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.DynamoDbTableEncryptionConfig) dafny.Map {
	return func() dafny.Map {
		fieldValue := dafny.NewMapBuilder()
		for key, val := range input {
			fieldValue.Add(Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfigList_key_ToDafny(key), Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfigList_value_ToDafny(val))
		}
		return fieldValue.ToMap()
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfigList_key_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return func() dafny.Sequence {
			res, err := UTF8.DecodeFromNativeGoByteArray([]byte(input))
			if err != nil {
				panic("invalid utf8 input provided")
			}
			return res
		}()
	}()
}

func Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfigList_value_ToDafny(input awscryptographydbencryptionsdkdynamodbsmithygeneratedtypes.DynamoDbTableEncryptionConfig) AwsCryptographyDbEncryptionSdkDynamoDbTypes.DynamoDbTableEncryptionConfig {
	return func() AwsCryptographyDbEncryptionSdkDynamoDbTypes.DynamoDbTableEncryptionConfig {

		return AwsCryptographyDbEncryptionSdkDynamoDbTypes.Companion_DynamoDbTableEncryptionConfig_.Create_DynamoDbTableEncryptionConfig_(Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_logicalTableName_ToDafny(input.LogicalTableName), Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_partitionKeyName_ToDafny(input.PartitionKeyName), Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_sortKeyName_ToDafny(input.SortKeyName), Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_search_ToDafny(input.Search), Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_attributeActionsOnEncrypt_ToDafny(input.AttributeActionsOnEncrypt), Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_allowedUnsignedAttributes_ToDafny(input.AllowedUnsignedAttributes), Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_allowedUnsignedAttributePrefix_ToDafny(input.AllowedUnsignedAttributePrefix), Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_algorithmSuiteId_ToDafny(input.AlgorithmSuiteId), func() Wrappers.Option {
			if (input.Keyring) == nil {
				return Wrappers.Companion_Option_.Create_None_()
			}
			return Wrappers.Companion_Option_.Create_Some_(awscryptographymaterialproviderssmithygenerated.Keyring_ToDafny(input.Keyring))
		}(), func() Wrappers.Option {
			if (input.Cmm) == nil {
				return Wrappers.Companion_Option_.Create_None_()
			}
			return Wrappers.Companion_Option_.Create_Some_(awscryptographymaterialproviderssmithygenerated.CryptographicMaterialsManager_ToDafny(input.Cmm))
		}(), Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_legacyOverride_ToDafny(input.LegacyOverride), Aws_cryptography_dbEncryptionSdk_dynamoDb_DynamoDbTableEncryptionConfig_plaintextOverride_ToDafny(input.PlaintextOverride))
	}()
}
