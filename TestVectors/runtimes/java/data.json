{
  "IoPairs": [
    [
      "1",
      "2"
    ],
    [
      "2",
      "3"
    ],
    [
      "3",
      "4"
    ]
  ],
  "Values": {
    ":zero": {
      "N": "0"
    },
    ":one": {
      "N": "1"
    },
    ":zeroD": "0",
    ":nineD": "9",
    ":oneA": "Uno",
    ":oneB": "Un",
    ":two": "Dos",
    ":three": "Tres",
    ":four": "Cuatro",
    ":five": "Cinco",
    ":six": "Seis",
    ":seven": "Siete",
    ":eight": "Ocho",
    ":nine": "Nueve",
    ":cmp1a": "F_Cuatro.S_Junk",
    ":cmp1b": "F_444.S_Junk",
    ":cmp1c": "F_Cuatro.S_",
    ":cmp1d": "F_Cuatro",
    ":strset": {
      "SS": [
        "Dos",
        "Tres",
        "Cuatro",
        "Cinco",
        "Seis"
      ]
    },
    ":strlist": {
      "L": [
        "Uno",
        "Dos",
        "Tres",
        "Cuatro",
        "Cinco",
        "Seis"
      ]
    }
  },
  "Queries": [
    {
      "Key": "RecNum = :zero"
    },
    {
      "Key": "RecNum = :one"
    },
    {
      "Filter": "RecNum = :zero"
    },
    {
      "Filter": "RecNum <= :zero"
    },
    {
      "Filter": "RecNum > :zero"
    },
    {
      "Filter": "RecNum >= :zero"
    },
    {
      "Filter": "RecNum <> :zero"
    },
    {
      "Filter": "RecNum = :zero"
    },
    {
      "Filter": "RecNum = :one"
    },
    {
      "Filter": "Nine between :zeroD and :three"
    },
    {
      "Filter": "Nine between :nineD and :nine"
    },
    {
      "Filter": "Nine between :nine and :three"
    },
    {
      "Filter": "Nine between :nine and :nine"
    },
    {
      "Filter": "RecNum in (:zero, :one)"
    },
    {
      "Filter": "Two = :two",
      "Fail": [
        "4"
      ]
    },
    {
      "Filter": "Two = :two or Three = :three or Four = :four OR Five = :five",
      "Fail": [
        "4"
      ]
    },
    {
      "Filter": "Two = :two and Three = :three and Four = :four and Five = :five",
      "Fail": [
        "4"
      ]
    },
    {
      "Filter": "Two in (:two, :three, :four, :five)",
      "Fail": [
        "4"
      ]
    },
    {
      "Filter": "Five in (:two, :three, :four, :five)",
      "Fail": [
        "4"
      ]
    },
    {
      "Filter": "Five in (:strset)",
      "Fail": [
        "4"
      ]
    },
    {
      "Filter": "Five in (:strlist)",
      "Fail": [
        "4"
      ]
    },
    {
      "Filter": "contains(One, :oneA)"
    },
    {
      "Filter": "contains(One, :oneB)"
    },
    {
      "Filter": "contains(:oneA, One)"
    },
    {
      "Filter": "contains(:oneB, One)"
    },
    {
      "Filter": "contains(:strset, One)"
    }
  ],
  "Complex": [
    {
      "Config": "5",
      "Queries": [
        {
          "Query": "Comp1 = :cmp1a",
          "Pass": [
            1
          ],
          "Fail": [
            0
          ]
        },
        {
          "Query": "begins_with(Comp1, :cmp1c)",
          "Pass": [
            1
          ],
          "Fail": [
            0
          ]
        },
        {
          "Query": ":cmp1c <= Comp1",
          "Pass": [
            1
          ],
          "Fail": [
            0
          ]
        },
        {
          "Query": "cmp1c < Comp1",
          "Fail": [
            0,1
          ]
        },
        {
          "Query": "cmp1c = Comp1",
          "Fail": [
            0,1
          ]
        },
        {
          "Query": "begins_with(Comp1, :cmp1d)",
          "Pass": [
            1
          ],
          "Fail": [
            0
          ]
        },
        {
          "Query": "contains(Comp1, :cmp1c)",
          "Pass": [
            1
          ],
          "Fail": [
            0
          ]
        },
        {
          "Query": "contains(Comp1, :cmp1d)",
          "Pass": [
            1
          ],
          "Fail": [
            0
          ]
        },
        {
          "Query": "Comp1 = :cmp1b",
          "Pass": [
            0
          ],
          "Fail": [
            1
          ]
        }
      ]
    }
  ]
}